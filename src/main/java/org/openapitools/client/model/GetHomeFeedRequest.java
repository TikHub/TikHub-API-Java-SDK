/*
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * GetHomeFeedRequest
 */
@ApiModel(description = "GetHomeFeedRequest")
@JsonPropertyOrder({
  GetHomeFeedRequest.JSON_PROPERTY_FEED_TYPE,
  GetHomeFeedRequest.JSON_PROPERTY_NEED_FILTER_IMAGE,
  GetHomeFeedRequest.JSON_PROPERTY_COOKIE,
  GetHomeFeedRequest.JSON_PROPERTY_PROXY
})

public class GetHomeFeedRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FEED_TYPE = "feed_type";
  private String feedType = "0";

  public static final String JSON_PROPERTY_NEED_FILTER_IMAGE = "need_filter_image";
  private Boolean needFilterImage = false;

  public static final String JSON_PROPERTY_COOKIE = "cookie";
  private String cookie = "";

  public static final String JSON_PROPERTY_PROXY = "proxy";
  private String proxy = "";


  public GetHomeFeedRequest feedType(String feedType) {
    
    this.feedType = feedType;
    return this;
  }

   /**
   * Feed Type，推荐类型/Feed type
   * @return feedType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Feed Type，推荐类型/Feed type")
  @JsonProperty(JSON_PROPERTY_FEED_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFeedType() {
    return feedType;
  }


  public void setFeedType(String feedType) {
    this.feedType = feedType;
  }


  public GetHomeFeedRequest needFilterImage(Boolean needFilterImage) {
    
    this.needFilterImage = needFilterImage;
    return this;
  }

   /**
   * Need Filter Image，是否只看图文笔记/Whether to view only image notes
   * @return needFilterImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Need Filter Image，是否只看图文笔记/Whether to view only image notes")
  @JsonProperty(JSON_PROPERTY_NEED_FILTER_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean isNeedFilterImage() {
    return needFilterImage;
  }


  public void setNeedFilterImage(Boolean needFilterImage) {
    this.needFilterImage = needFilterImage;
  }


  public GetHomeFeedRequest cookie(String cookie) {
    
    this.cookie = cookie;
    return this;
  }

   /**
   * Cookie，用户自行提供的已登录的网页Cookie/User provided logged-in web Cookie
   * @return cookie
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cookie，用户自行提供的已登录的网页Cookie/User provided logged-in web Cookie")
  @JsonProperty(JSON_PROPERTY_COOKIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCookie() {
    return cookie;
  }


  public void setCookie(String cookie) {
    this.cookie = cookie;
  }


  public GetHomeFeedRequest proxy(String proxy) {
    
    this.proxy = proxy;
    return this;
  }

   /**
   * Proxy，代理，格式：http://用户名:密码@IP:端口/Proxy, format: http://username:password@IP:port
   * @return proxy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proxy，代理，格式：http://用户名:密码@IP:端口/Proxy, format: http://username:password@IP:port")
  @JsonProperty(JSON_PROPERTY_PROXY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProxy() {
    return proxy;
  }


  public void setProxy(String proxy) {
    this.proxy = proxy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetHomeFeedRequest getHomeFeedRequest = (GetHomeFeedRequest) o;
    return Objects.equals(this.feedType, getHomeFeedRequest.feedType) &&
        Objects.equals(this.needFilterImage, getHomeFeedRequest.needFilterImage) &&
        Objects.equals(this.cookie, getHomeFeedRequest.cookie) &&
        Objects.equals(this.proxy, getHomeFeedRequest.proxy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedType, needFilterImage, cookie, proxy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetHomeFeedRequest {\n");
    sb.append("    feedType: ").append(toIndentedString(feedType)).append("\n");
    sb.append("    needFilterImage: ").append(toIndentedString(needFilterImage)).append("\n");
    sb.append("    cookie: ").append(toIndentedString(cookie)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

