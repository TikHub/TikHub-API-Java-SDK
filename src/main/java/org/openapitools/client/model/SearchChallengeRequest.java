/*
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;
import org.hibernate.validator.constraints.*;

/**
 * SearchChallengeRequest
 */
@ApiModel(description = "SearchChallengeRequest")
@JsonPropertyOrder({
  SearchChallengeRequest.JSON_PROPERTY_KEYWORD,
  SearchChallengeRequest.JSON_PROPERTY_CURSOR,
  SearchChallengeRequest.JSON_PROPERTY_COUNT,
  SearchChallengeRequest.JSON_PROPERTY_COOKIE
})

public class SearchChallengeRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_KEYWORD = "keyword";
  private String keyword = "游戏";

  public static final String JSON_PROPERTY_CURSOR = "cursor";
  private Integer cursor = 0;

  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count = 30;

  public static final String JSON_PROPERTY_COOKIE = "cookie";
  private String cookie = "";


  public SearchChallengeRequest keyword(String keyword) {
    
    this.keyword = keyword;
    return this;
  }

   /**
   * Keyword，搜索关键词/Search keyword
   * @return keyword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Keyword，搜索关键词/Search keyword")
  @JsonProperty(JSON_PROPERTY_KEYWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKeyword() {
    return keyword;
  }


  public void setKeyword(String keyword) {
    this.keyword = keyword;
  }


  public SearchChallengeRequest cursor(Integer cursor) {
    
    this.cursor = cursor;
    return this;
  }

   /**
   * Cursor，游标/Cursor
   * @return cursor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cursor，游标/Cursor")
  @JsonProperty(JSON_PROPERTY_CURSOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCursor() {
    return cursor;
  }


  public void setCursor(Integer cursor) {
    this.cursor = cursor;
  }


  public SearchChallengeRequest count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * Count，数量/Count
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Count，数量/Count")
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  public void setCount(Integer count) {
    this.count = count;
  }


  public SearchChallengeRequest cookie(String cookie) {
    
    this.cookie = cookie;
    return this;
  }

   /**
   * Cookie，用户自行提供的Cookie/User provided Cookie
   * @return cookie
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cookie，用户自行提供的Cookie/User provided Cookie")
  @JsonProperty(JSON_PROPERTY_COOKIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCookie() {
    return cookie;
  }


  public void setCookie(String cookie) {
    this.cookie = cookie;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchChallengeRequest searchChallengeRequest = (SearchChallengeRequest) o;
    return Objects.equals(this.keyword, searchChallengeRequest.keyword) &&
        Objects.equals(this.cursor, searchChallengeRequest.cursor) &&
        Objects.equals(this.count, searchChallengeRequest.count) &&
        Objects.equals(this.cookie, searchChallengeRequest.cookie);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keyword, cursor, count, cookie);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchChallengeRequest {\n");
    sb.append("    keyword: ").append(toIndentedString(keyword)).append("\n");
    sb.append("    cursor: ").append(toIndentedString(cursor)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    cookie: ").append(toIndentedString(cookie)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

