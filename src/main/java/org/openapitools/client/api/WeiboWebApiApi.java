/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WeiboWebApiApi {
    private ApiClient localVarApiClient;

    public WeiboWebApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public WeiboWebApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for fetchPostDetailApiV1WeiboWebFetchPostDetailGet
     * @param id 作品id/Post id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchPostDetailApiV1WeiboWebFetchPostDetailGetCall(String id, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/weibo/web/fetch_post_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchPostDetailApiV1WeiboWebFetchPostDetailGetValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling fetchPostDetailApiV1WeiboWebFetchPostDetailGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchPostDetailApiV1WeiboWebFetchPostDetailGetCall(id, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - id: Post id ### Return: - Post data  # [示例/Example] itemId &#x3D; \&quot;5008127060086127\&quot;
     * @param id 作品id/Post id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchPostDetailApiV1WeiboWebFetchPostDetailGet(String id) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchPostDetailApiV1WeiboWebFetchPostDetailGetWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - id: Post id ### Return: - Post data  # [示例/Example] itemId &#x3D; \&quot;5008127060086127\&quot;
     * @param id 作品id/Post id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchPostDetailApiV1WeiboWebFetchPostDetailGetWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = fetchPostDetailApiV1WeiboWebFetchPostDetailGetValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据/Get single video data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - id: Post id ### Return: - Post data  # [示例/Example] itemId &#x3D; \&quot;5008127060086127\&quot;
     * @param id 作品id/Post id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchPostDetailApiV1WeiboWebFetchPostDetailGetAsync(String id, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchPostDetailApiV1WeiboWebFetchPostDetailGetValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0
     * @param id 作品id/Post id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0Call(String id, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/weibo/web/fetch_post_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0ValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0Call(id, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - id: Post id ### Return: - Post data  # [示例/Example] itemId &#x3D; \&quot;5008127060086127\&quot;
     * @param id 作品id/Post id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0(String id) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0WithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - id: Post id ### Return: - Post data  # [示例/Example] itemId &#x3D; \&quot;5008127060086127\&quot;
     * @param id 作品id/Post id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0WithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0ValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据/Get single video data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - id: Post id ### Return: - Post data  # [示例/Example] itemId &#x3D; \&quot;5008127060086127\&quot;
     * @param id 作品id/Post id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0Async(String id, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0ValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserInfoApiV1WeiboWebFetchUserInfoGet
     * @param uid 用户id/User id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserInfoApiV1WeiboWebFetchUserInfoGetCall(String uid, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/weibo/web/fetch_user_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserInfoApiV1WeiboWebFetchUserInfoGetValidateBeforeCall(String uid, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserInfoApiV1WeiboWebFetchUserInfoGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserInfoApiV1WeiboWebFetchUserInfoGetCall(uid, _callback);
        return localVarCall;

    }

    /**
     * 获取用户信息/Get user information
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
     * @param uid 用户id/User id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserInfoApiV1WeiboWebFetchUserInfoGet(String uid) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserInfoApiV1WeiboWebFetchUserInfoGetWithHttpInfo(uid);
        return localVarResp.getData();
    }

    /**
     * 获取用户信息/Get user information
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
     * @param uid 用户id/User id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserInfoApiV1WeiboWebFetchUserInfoGetWithHttpInfo(String uid) throws ApiException {
        okhttp3.Call localVarCall = fetchUserInfoApiV1WeiboWebFetchUserInfoGetValidateBeforeCall(uid, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户信息/Get user information (asynchronously)
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
     * @param uid 用户id/User id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserInfoApiV1WeiboWebFetchUserInfoGetAsync(String uid, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserInfoApiV1WeiboWebFetchUserInfoGetValidateBeforeCall(uid, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0
     * @param uid 用户id/User id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0Call(String uid, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/weibo/web/fetch_user_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0ValidateBeforeCall(String uid, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0Call(uid, _callback);
        return localVarCall;

    }

    /**
     * 获取用户信息/Get user information
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
     * @param uid 用户id/User id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0(String uid) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0WithHttpInfo(uid);
        return localVarResp.getData();
    }

    /**
     * 获取用户信息/Get user information
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
     * @param uid 用户id/User id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0WithHttpInfo(String uid) throws ApiException {
        okhttp3.Call localVarCall = fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0ValidateBeforeCall(uid, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户信息/Get user information (asynchronously)
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
     * @param uid 用户id/User id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0Async(String uid, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0ValidateBeforeCall(uid, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPostsApiV1WeiboWebFetchUserPostsGet
     * @param uid 用户id/User id (required)
     * @param page 页数/Page number (optional, default to 1)
     * @param feature 特征/Feature (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostsApiV1WeiboWebFetchUserPostsGetCall(String uid, Integer page, Integer feature, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/weibo/web/fetch_user_posts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (feature != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("feature", feature));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPostsApiV1WeiboWebFetchUserPostsGetValidateBeforeCall(String uid, Integer page, Integer feature, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserPostsApiV1WeiboWebFetchUserPostsGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPostsApiV1WeiboWebFetchUserPostsGetCall(uid, page, feature, _callback);
        return localVarCall;

    }

    /**
     * 获取微博用户文章数据/Get Weibo user article data
     * # [中文] ### 用途: - 获取微博用户文章数据 ### 参数: - uid: 用户id - page: 页数 - feature: 特征 ### 返回: - 用户文章数据  # [English] ### Purpose: - Get Weibo user article data ### Parameters: - uid: User id - page: Page number - feature: Feature ### Return: - User article data  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot; page &#x3D; 1 feature &#x3D; 0
     * @param uid 用户id/User id (required)
     * @param page 页数/Page number (optional, default to 1)
     * @param feature 特征/Feature (optional, default to 0)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserPostsApiV1WeiboWebFetchUserPostsGet(String uid, Integer page, Integer feature) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserPostsApiV1WeiboWebFetchUserPostsGetWithHttpInfo(uid, page, feature);
        return localVarResp.getData();
    }

    /**
     * 获取微博用户文章数据/Get Weibo user article data
     * # [中文] ### 用途: - 获取微博用户文章数据 ### 参数: - uid: 用户id - page: 页数 - feature: 特征 ### 返回: - 用户文章数据  # [English] ### Purpose: - Get Weibo user article data ### Parameters: - uid: User id - page: Page number - feature: Feature ### Return: - User article data  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot; page &#x3D; 1 feature &#x3D; 0
     * @param uid 用户id/User id (required)
     * @param page 页数/Page number (optional, default to 1)
     * @param feature 特征/Feature (optional, default to 0)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserPostsApiV1WeiboWebFetchUserPostsGetWithHttpInfo(String uid, Integer page, Integer feature) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPostsApiV1WeiboWebFetchUserPostsGetValidateBeforeCall(uid, page, feature, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取微博用户文章数据/Get Weibo user article data (asynchronously)
     * # [中文] ### 用途: - 获取微博用户文章数据 ### 参数: - uid: 用户id - page: 页数 - feature: 特征 ### 返回: - 用户文章数据  # [English] ### Purpose: - Get Weibo user article data ### Parameters: - uid: User id - page: Page number - feature: Feature ### Return: - User article data  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot; page &#x3D; 1 feature &#x3D; 0
     * @param uid 用户id/User id (required)
     * @param page 页数/Page number (optional, default to 1)
     * @param feature 特征/Feature (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostsApiV1WeiboWebFetchUserPostsGetAsync(String uid, Integer page, Integer feature, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPostsApiV1WeiboWebFetchUserPostsGetValidateBeforeCall(uid, page, feature, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0
     * @param uid 用户id/User id (required)
     * @param page 页数/Page number (optional, default to 1)
     * @param feature 特征/Feature (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0Call(String uid, Integer page, Integer feature, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/weibo/web/fetch_user_posts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (feature != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("feature", feature));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0ValidateBeforeCall(String uid, Integer page, Integer feature, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0Call(uid, page, feature, _callback);
        return localVarCall;

    }

    /**
     * 获取微博用户文章数据/Get Weibo user article data
     * # [中文] ### 用途: - 获取微博用户文章数据 ### 参数: - uid: 用户id - page: 页数 - feature: 特征 ### 返回: - 用户文章数据  # [English] ### Purpose: - Get Weibo user article data ### Parameters: - uid: User id - page: Page number - feature: Feature ### Return: - User article data  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot; page &#x3D; 1 feature &#x3D; 0
     * @param uid 用户id/User id (required)
     * @param page 页数/Page number (optional, default to 1)
     * @param feature 特征/Feature (optional, default to 0)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0(String uid, Integer page, Integer feature) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0WithHttpInfo(uid, page, feature);
        return localVarResp.getData();
    }

    /**
     * 获取微博用户文章数据/Get Weibo user article data
     * # [中文] ### 用途: - 获取微博用户文章数据 ### 参数: - uid: 用户id - page: 页数 - feature: 特征 ### 返回: - 用户文章数据  # [English] ### Purpose: - Get Weibo user article data ### Parameters: - uid: User id - page: Page number - feature: Feature ### Return: - User article data  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot; page &#x3D; 1 feature &#x3D; 0
     * @param uid 用户id/User id (required)
     * @param page 页数/Page number (optional, default to 1)
     * @param feature 特征/Feature (optional, default to 0)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0WithHttpInfo(String uid, Integer page, Integer feature) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0ValidateBeforeCall(uid, page, feature, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取微博用户文章数据/Get Weibo user article data (asynchronously)
     * # [中文] ### 用途: - 获取微博用户文章数据 ### 参数: - uid: 用户id - page: 页数 - feature: 特征 ### 返回: - 用户文章数据  # [English] ### Purpose: - Get Weibo user article data ### Parameters: - uid: User id - page: Page number - feature: Feature ### Return: - User article data  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot; page &#x3D; 1 feature &#x3D; 0
     * @param uid 用户id/User id (required)
     * @param page 页数/Page number (optional, default to 1)
     * @param feature 特征/Feature (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0Async(String uid, Integer page, Integer feature, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0ValidateBeforeCall(uid, page, feature, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
