/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class YouTubeWebApiApi {
    private ApiClient localVarApiClient;

    public YouTubeWebApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public YouTubeWebApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet
     * @param id 视频ID/Video ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGetCall(String id, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/youtube/web/get_short_video_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGetValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet(Async)");
        }
        

        okhttp3.Call localVarCall = getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGetCall(id, _callback);
        return localVarCall;

    }

    /**
     * 获取短视频信息/Get short video information
     * # [中文] ### 用途: - 获取单个短视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/shorts/r9O6jShqvUQ，这里的id就是r9O6jShqvUQ。 ### 返回: - 短视频信息。  # [English] ### Purpose: - Get information of a single short video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/shorts/r9O6jShqvUQ, the id is r9O6jShqvUQ. ### Returns: - Short video information.  # [示例/Example] id &#x3D; \&quot;r9O6jShqvUQ\&quot;
     * @param id 视频ID/Video ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet(String id) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGetWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 获取短视频信息/Get short video information
     * # [中文] ### 用途: - 获取单个短视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/shorts/r9O6jShqvUQ，这里的id就是r9O6jShqvUQ。 ### 返回: - 短视频信息。  # [English] ### Purpose: - Get information of a single short video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/shorts/r9O6jShqvUQ, the id is r9O6jShqvUQ. ### Returns: - Short video information.  # [示例/Example] id &#x3D; \&quot;r9O6jShqvUQ\&quot;
     * @param id 视频ID/Video ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGetWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGetValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取短视频信息/Get short video information (asynchronously)
     * # [中文] ### 用途: - 获取单个短视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/shorts/r9O6jShqvUQ，这里的id就是r9O6jShqvUQ。 ### 返回: - 短视频信息。  # [English] ### Purpose: - Get information of a single short video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/shorts/r9O6jShqvUQ, the id is r9O6jShqvUQ. ### Returns: - Short video information.  # [示例/Example] id &#x3D; \&quot;r9O6jShqvUQ\&quot;
     * @param id 视频ID/Video ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGetAsync(String id, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGetValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0
     * @param id 视频ID/Video ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0Call(String id, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/youtube/web/get_short_video_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0ValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0Call(id, _callback);
        return localVarCall;

    }

    /**
     * 获取短视频信息/Get short video information
     * # [中文] ### 用途: - 获取单个短视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/shorts/r9O6jShqvUQ，这里的id就是r9O6jShqvUQ。 ### 返回: - 短视频信息。  # [English] ### Purpose: - Get information of a single short video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/shorts/r9O6jShqvUQ, the id is r9O6jShqvUQ. ### Returns: - Short video information.  # [示例/Example] id &#x3D; \&quot;r9O6jShqvUQ\&quot;
     * @param id 视频ID/Video ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0(String id) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0WithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 获取短视频信息/Get short video information
     * # [中文] ### 用途: - 获取单个短视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/shorts/r9O6jShqvUQ，这里的id就是r9O6jShqvUQ。 ### 返回: - 短视频信息。  # [English] ### Purpose: - Get information of a single short video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/shorts/r9O6jShqvUQ, the id is r9O6jShqvUQ. ### Returns: - Short video information.  # [示例/Example] id &#x3D; \&quot;r9O6jShqvUQ\&quot;
     * @param id 视频ID/Video ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0WithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0ValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取短视频信息/Get short video information (asynchronously)
     * # [中文] ### 用途: - 获取单个短视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/shorts/r9O6jShqvUQ，这里的id就是r9O6jShqvUQ。 ### 返回: - 短视频信息。  # [English] ### Purpose: - Get information of a single short video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/shorts/r9O6jShqvUQ, the id is r9O6jShqvUQ. ### Returns: - Short video information.  # [示例/Example] id &#x3D; \&quot;r9O6jShqvUQ\&quot;
     * @param id 视频ID/Video ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0Async(String id, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getShortVideoInfoApiV1YoutubeWebGetShortVideoInfoGet_0ValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet
     * @param id 视频ID/Video ID (required)
     * @param continuation Token to continue fetching comments (optional)
     * @param sortBy Options: top, newest (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoCommentsApiV1YoutubeWebGetVideoCommentsGetCall(String id, String continuation, String sortBy, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/youtube/web/get_video_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        if (continuation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("continuation", continuation));
        }

        if (sortBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_by", sortBy));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVideoCommentsApiV1YoutubeWebGetVideoCommentsGetValidateBeforeCall(String id, String continuation, String sortBy, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet(Async)");
        }
        

        okhttp3.Call localVarCall = getVideoCommentsApiV1YoutubeWebGetVideoCommentsGetCall(id, continuation, sortBy, _callback);
        return localVarCall;

    }

    /**
     * 获取视频评论/Get video comments
     * # [中文] ### 用途: - 获取单个视频的评论。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - continuation: 用于继续获取评论的令牌。默认为None。 - sort_by: 选项：top, newest ### 返回: - 视频评论。  # [English] ### Purpose: - Get comments of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - continuation: Token to continue fetching comments. Default is None. - sort_by: Options: top, newest ### Returns: - Video comments.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @param continuation Token to continue fetching comments (optional)
     * @param sortBy Options: top, newest (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet(String id, String continuation, String sortBy) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getVideoCommentsApiV1YoutubeWebGetVideoCommentsGetWithHttpInfo(id, continuation, sortBy);
        return localVarResp.getData();
    }

    /**
     * 获取视频评论/Get video comments
     * # [中文] ### 用途: - 获取单个视频的评论。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - continuation: 用于继续获取评论的令牌。默认为None。 - sort_by: 选项：top, newest ### 返回: - 视频评论。  # [English] ### Purpose: - Get comments of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - continuation: Token to continue fetching comments. Default is None. - sort_by: Options: top, newest ### Returns: - Video comments.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @param continuation Token to continue fetching comments (optional)
     * @param sortBy Options: top, newest (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getVideoCommentsApiV1YoutubeWebGetVideoCommentsGetWithHttpInfo(String id, String continuation, String sortBy) throws ApiException {
        okhttp3.Call localVarCall = getVideoCommentsApiV1YoutubeWebGetVideoCommentsGetValidateBeforeCall(id, continuation, sortBy, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取视频评论/Get video comments (asynchronously)
     * # [中文] ### 用途: - 获取单个视频的评论。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - continuation: 用于继续获取评论的令牌。默认为None。 - sort_by: 选项：top, newest ### 返回: - 视频评论。  # [English] ### Purpose: - Get comments of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - continuation: Token to continue fetching comments. Default is None. - sort_by: Options: top, newest ### Returns: - Video comments.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @param continuation Token to continue fetching comments (optional)
     * @param sortBy Options: top, newest (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoCommentsApiV1YoutubeWebGetVideoCommentsGetAsync(String id, String continuation, String sortBy, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVideoCommentsApiV1YoutubeWebGetVideoCommentsGetValidateBeforeCall(id, continuation, sortBy, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0
     * @param id 视频ID/Video ID (required)
     * @param continuation Token to continue fetching comments (optional)
     * @param sortBy Options: top, newest (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0Call(String id, String continuation, String sortBy, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/youtube/web/get_video_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        if (continuation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("continuation", continuation));
        }

        if (sortBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_by", sortBy));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0ValidateBeforeCall(String id, String continuation, String sortBy, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0Call(id, continuation, sortBy, _callback);
        return localVarCall;

    }

    /**
     * 获取视频评论/Get video comments
     * # [中文] ### 用途: - 获取单个视频的评论。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - continuation: 用于继续获取评论的令牌。默认为None。 - sort_by: 选项：top, newest ### 返回: - 视频评论。  # [English] ### Purpose: - Get comments of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - continuation: Token to continue fetching comments. Default is None. - sort_by: Options: top, newest ### Returns: - Video comments.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @param continuation Token to continue fetching comments (optional)
     * @param sortBy Options: top, newest (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0(String id, String continuation, String sortBy) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0WithHttpInfo(id, continuation, sortBy);
        return localVarResp.getData();
    }

    /**
     * 获取视频评论/Get video comments
     * # [中文] ### 用途: - 获取单个视频的评论。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - continuation: 用于继续获取评论的令牌。默认为None。 - sort_by: 选项：top, newest ### 返回: - 视频评论。  # [English] ### Purpose: - Get comments of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - continuation: Token to continue fetching comments. Default is None. - sort_by: Options: top, newest ### Returns: - Video comments.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @param continuation Token to continue fetching comments (optional)
     * @param sortBy Options: top, newest (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0WithHttpInfo(String id, String continuation, String sortBy) throws ApiException {
        okhttp3.Call localVarCall = getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0ValidateBeforeCall(id, continuation, sortBy, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取视频评论/Get video comments (asynchronously)
     * # [中文] ### 用途: - 获取单个视频的评论。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - continuation: 用于继续获取评论的令牌。默认为None。 - sort_by: 选项：top, newest ### 返回: - 视频评论。  # [English] ### Purpose: - Get comments of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - continuation: Token to continue fetching comments. Default is None. - sort_by: Options: top, newest ### Returns: - Video comments.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @param continuation Token to continue fetching comments (optional)
     * @param sortBy Options: top, newest (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0Async(String id, String continuation, String sortBy, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVideoCommentsApiV1YoutubeWebGetVideoCommentsGet_0ValidateBeforeCall(id, continuation, sortBy, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVideoInfoApiV1YoutubeWebGetVideoInfoGet
     * @param id 视频ID/Video ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoInfoApiV1YoutubeWebGetVideoInfoGetCall(String id, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/youtube/web/get_video_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVideoInfoApiV1YoutubeWebGetVideoInfoGetValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getVideoInfoApiV1YoutubeWebGetVideoInfoGet(Async)");
        }
        

        okhttp3.Call localVarCall = getVideoInfoApiV1YoutubeWebGetVideoInfoGetCall(id, _callback);
        return localVarCall;

    }

    /**
     * 获取视频信息/Get video information
     * # [中文] ### 用途: - 获取单个视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 ### 返回: - 视频信息。  # [English] ### Purpose: - Get information of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. ### Returns: - Video information.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getVideoInfoApiV1YoutubeWebGetVideoInfoGet(String id) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getVideoInfoApiV1YoutubeWebGetVideoInfoGetWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 获取视频信息/Get video information
     * # [中文] ### 用途: - 获取单个视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 ### 返回: - 视频信息。  # [English] ### Purpose: - Get information of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. ### Returns: - Video information.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getVideoInfoApiV1YoutubeWebGetVideoInfoGetWithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = getVideoInfoApiV1YoutubeWebGetVideoInfoGetValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取视频信息/Get video information (asynchronously)
     * # [中文] ### 用途: - 获取单个视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 ### 返回: - 视频信息。  # [English] ### Purpose: - Get information of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. ### Returns: - Video information.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoInfoApiV1YoutubeWebGetVideoInfoGetAsync(String id, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVideoInfoApiV1YoutubeWebGetVideoInfoGetValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0
     * @param id 视频ID/Video ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0Call(String id, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/youtube/web/get_video_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0ValidateBeforeCall(String id, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0Call(id, _callback);
        return localVarCall;

    }

    /**
     * 获取视频信息/Get video information
     * # [中文] ### 用途: - 获取单个视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 ### 返回: - 视频信息。  # [English] ### Purpose: - Get information of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. ### Returns: - Video information.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0(String id) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0WithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * 获取视频信息/Get video information
     * # [中文] ### 用途: - 获取单个视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 ### 返回: - 视频信息。  # [English] ### Purpose: - Get information of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. ### Returns: - Video information.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0WithHttpInfo(String id) throws ApiException {
        okhttp3.Call localVarCall = getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0ValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取视频信息/Get video information (asynchronously)
     * # [中文] ### 用途: - 获取单个视频的信息。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 ### 返回: - 视频信息。  # [English] ### Purpose: - Get information of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. ### Returns: - Video information.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot;
     * @param id 视频ID/Video ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0Async(String id, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVideoInfoApiV1YoutubeWebGetVideoInfoGet_0ValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet
     * @param id 视频ID/Video ID (required)
     * @param format 字幕格式/Subtitle format (optional, default to &quot;json3&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGetCall(String id, String format, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/youtube/web/get_video_subtitles";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        if (format != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format", format));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGetValidateBeforeCall(String id, String format, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet(Async)");
        }
        

        okhttp3.Call localVarCall = getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGetCall(id, format, _callback);
        return localVarCall;

    }

    /**
     * 获取视频字幕/Get video subtitles
     * # [中文] ### 用途: - 获取单个视频的字幕。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - format: 字幕格式， - 字幕可选项：     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### 返回: - 视频字幕。  # [English] ### Purpose: - Get subtitles of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - format: Subtitle format, - Subtitle format options:     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### Returns: - Video subtitles.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot; format &#x3D; \&quot;json3\&quot;
     * @param id 视频ID/Video ID (required)
     * @param format 字幕格式/Subtitle format (optional, default to &quot;json3&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet(String id, String format) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGetWithHttpInfo(id, format);
        return localVarResp.getData();
    }

    /**
     * 获取视频字幕/Get video subtitles
     * # [中文] ### 用途: - 获取单个视频的字幕。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - format: 字幕格式， - 字幕可选项：     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### 返回: - 视频字幕。  # [English] ### Purpose: - Get subtitles of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - format: Subtitle format, - Subtitle format options:     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### Returns: - Video subtitles.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot; format &#x3D; \&quot;json3\&quot;
     * @param id 视频ID/Video ID (required)
     * @param format 字幕格式/Subtitle format (optional, default to &quot;json3&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGetWithHttpInfo(String id, String format) throws ApiException {
        okhttp3.Call localVarCall = getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGetValidateBeforeCall(id, format, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取视频字幕/Get video subtitles (asynchronously)
     * # [中文] ### 用途: - 获取单个视频的字幕。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - format: 字幕格式， - 字幕可选项：     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### 返回: - 视频字幕。  # [English] ### Purpose: - Get subtitles of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - format: Subtitle format, - Subtitle format options:     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### Returns: - Video subtitles.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot; format &#x3D; \&quot;json3\&quot;
     * @param id 视频ID/Video ID (required)
     * @param format 字幕格式/Subtitle format (optional, default to &quot;json3&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGetAsync(String id, String format, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGetValidateBeforeCall(id, format, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0
     * @param id 视频ID/Video ID (required)
     * @param format 字幕格式/Subtitle format (optional, default to &quot;json3&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0Call(String id, String format, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/youtube/web/get_video_subtitles";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (id != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("id", id));
        }

        if (format != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format", format));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0ValidateBeforeCall(String id, String format, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0Call(id, format, _callback);
        return localVarCall;

    }

    /**
     * 获取视频字幕/Get video subtitles
     * # [中文] ### 用途: - 获取单个视频的字幕。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - format: 字幕格式， - 字幕可选项：     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### 返回: - 视频字幕。  # [English] ### Purpose: - Get subtitles of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - format: Subtitle format, - Subtitle format options:     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### Returns: - Video subtitles.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot; format &#x3D; \&quot;json3\&quot;
     * @param id 视频ID/Video ID (required)
     * @param format 字幕格式/Subtitle format (optional, default to &quot;json3&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0(String id, String format) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0WithHttpInfo(id, format);
        return localVarResp.getData();
    }

    /**
     * 获取视频字幕/Get video subtitles
     * # [中文] ### 用途: - 获取单个视频的字幕。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - format: 字幕格式， - 字幕可选项：     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### 返回: - 视频字幕。  # [English] ### Purpose: - Get subtitles of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - format: Subtitle format, - Subtitle format options:     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### Returns: - Video subtitles.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot; format &#x3D; \&quot;json3\&quot;
     * @param id 视频ID/Video ID (required)
     * @param format 字幕格式/Subtitle format (optional, default to &quot;json3&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0WithHttpInfo(String id, String format) throws ApiException {
        okhttp3.Call localVarCall = getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0ValidateBeforeCall(id, format, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取视频字幕/Get video subtitles (asynchronously)
     * # [中文] ### 用途: - 获取单个视频的字幕。 ### 参数: - id: 视频ID，从URL中获取，例如：https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc，这里的id就是LuIL5JATZsc。 - format: 字幕格式， - 字幕可选项：     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### 返回: - 视频字幕。  # [English] ### Purpose: - Get subtitles of a single video. ### Parameters: - id: Video ID, get it from the URL, for example: https://www.youtube.com/watch?v&#x3D;LuIL5JATZsc, the id is LuIL5JATZsc. - format: Subtitle format, - Subtitle format options:     - json3     - srv1     - srv2     - srv3     - ttml     - vtt ### Returns: - Video subtitles.  # [示例/Example] id &#x3D; \&quot;LuIL5JATZsc\&quot; format &#x3D; \&quot;json3\&quot;
     * @param id 视频ID/Video ID (required)
     * @param format 字幕格式/Subtitle format (optional, default to &quot;json3&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0Async(String id, String format, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVideoSubtitlesApiV1YoutubeWebGetVideoSubtitlesGet_0ValidateBeforeCall(id, format, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
