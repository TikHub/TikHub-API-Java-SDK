/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ABogusModel;
import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;
import org.openapitools.client.model.XBogusModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DouyinWebApiApi {
    private ApiClient localVarApiClient;

    public DouyinWebApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DouyinWebApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet
     * @param liveRoomUrl 直播间链接/Live room link (required)
     * @param danmakuType 消息类型/Message type (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGetCall(String liveRoomUrl, String danmakuType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/douyin_live_room";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (liveRoomUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("live_room_url", liveRoomUrl));
        }

        if (danmakuType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("danmaku_type", danmakuType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGetValidateBeforeCall(String liveRoomUrl, String danmakuType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'liveRoomUrl' is set
        if (liveRoomUrl == null) {
            throw new ApiException("Missing the required parameter 'liveRoomUrl' when calling douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet(Async)");
        }
        
        // verify the required parameter 'danmakuType' is set
        if (danmakuType == null) {
            throw new ApiException("Missing the required parameter 'danmakuType' when calling douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet(Async)");
        }
        

        okhttp3.Call localVarCall = douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGetCall(liveRoomUrl, danmakuType, _callback);
        return localVarCall;

    }

    /**
     * 提取直播间弹幕/Extract live room danmaku
     * # [中文] ### 用途: - 提取直播间弹幕 #### 价格: - 每10条数据消耗0.001$，支持阶梯式计费折扣。 ### 参数: - live_room_url: 直播间链接 - danmaku_type: 消息类型     - WebcastRoomMessage：直播间消息     - WebcastLikeMessage：点赞消息     - WebcastMemberMessage：成员消息     - WebcastChatMessage：聊天消息     - WebcastGiftMessage：礼物消息     - WebcastSocialMessage：社交消息     - WebcastRoomUserSeqMessage：用户序列消息     - WebcastUpdateFanTicketMessage：更新粉丝消息     - WebcastCommonTextMessage：常规文本消息     - WebcastMatchAgainstScoreMessage：比赛得分消息     - WebcastFansclubMessage：粉丝俱乐部消息     - WebcastRanklistHourEntranceMessage：排行榜小时入口消息     - WebcastRoomStatsMessage：直播间统计消息     - WebcastLiveShoppingMessage: 直播购物消息     - WebcastLiveEcomGeneralMessage: 直播电商通用消息     - WebcastProductChangeMessage: 直播商品变更消息     - WebcastRoomStreamAdaptationMessage: 直播间流适配消息     - WebcastNotifyEffectMessage: 通知效果消息     - WebcastLightGiftMessage: 亮礼物消息     - WebcastProfitInteractionScoreMessage: 收益互动分消息     - WebcastRoomRankMessage: 直播间排行消息 ### 返回: - 弹幕数据的WebSocket连接信息，需要使用WebSocket连接获取弹幕数据，此接口不返回弹幕数据。  # [English] ### Purpose: - Extract live room danmaku #### Price: - 0.001$ per 10 data, support tiered billing discounts. ### Parameters: - live_room_url: Live room link - danmaku_type: Message type     - WebcastRoomMessage: Live room message     - WebcastLikeMessage: Like message     - WebcastMemberMessage: Member message     - WebcastChatMessage: Chat message     - WebcastGiftMessage: Gift message     - WebcastSocialMessage: Social message     - WebcastRoomUserSeqMessage: User sequence message     - WebcastUpdateFanTicketMessage: Update fan message     - WebcastCommonTextMessage: Common text message     - WebcastMatchAgainstScoreMessage: Match score message     - WebcastFansclubMessage: Fans club message     - WebcastRanklistHourEntranceMessage: Ranking list hour entrance message     - WebcastRoomStatsMessage: Live room statistics message     - WebcastLiveShoppingMessage: Live shopping message     - WebcastLiveEcomGeneralMessage: Live e-commerce general message     - WebcastProductChangeMessage: Live product change message     - WebcastRoomStreamAdaptationMessage: Live room stream adaptation message     - WebcastNotifyEffectMessage: Notification effect message     - WebcastLightGiftMessage: Light gift message     - WebcastProfitInteractionScoreMessage: Profit interaction score message     - WebcastRoomRankMessage: Live room ranking message ### Return: - WebSocket connection information of the danmaku data, you need to use WebSocket connection to get the danmaku data, this interface does not return the danmaku data.
     * @param liveRoomUrl 直播间链接/Live room link (required)
     * @param danmakuType 消息类型/Message type (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet(String liveRoomUrl, String danmakuType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGetWithHttpInfo(liveRoomUrl, danmakuType);
        return localVarResp.getData();
    }

    /**
     * 提取直播间弹幕/Extract live room danmaku
     * # [中文] ### 用途: - 提取直播间弹幕 #### 价格: - 每10条数据消耗0.001$，支持阶梯式计费折扣。 ### 参数: - live_room_url: 直播间链接 - danmaku_type: 消息类型     - WebcastRoomMessage：直播间消息     - WebcastLikeMessage：点赞消息     - WebcastMemberMessage：成员消息     - WebcastChatMessage：聊天消息     - WebcastGiftMessage：礼物消息     - WebcastSocialMessage：社交消息     - WebcastRoomUserSeqMessage：用户序列消息     - WebcastUpdateFanTicketMessage：更新粉丝消息     - WebcastCommonTextMessage：常规文本消息     - WebcastMatchAgainstScoreMessage：比赛得分消息     - WebcastFansclubMessage：粉丝俱乐部消息     - WebcastRanklistHourEntranceMessage：排行榜小时入口消息     - WebcastRoomStatsMessage：直播间统计消息     - WebcastLiveShoppingMessage: 直播购物消息     - WebcastLiveEcomGeneralMessage: 直播电商通用消息     - WebcastProductChangeMessage: 直播商品变更消息     - WebcastRoomStreamAdaptationMessage: 直播间流适配消息     - WebcastNotifyEffectMessage: 通知效果消息     - WebcastLightGiftMessage: 亮礼物消息     - WebcastProfitInteractionScoreMessage: 收益互动分消息     - WebcastRoomRankMessage: 直播间排行消息 ### 返回: - 弹幕数据的WebSocket连接信息，需要使用WebSocket连接获取弹幕数据，此接口不返回弹幕数据。  # [English] ### Purpose: - Extract live room danmaku #### Price: - 0.001$ per 10 data, support tiered billing discounts. ### Parameters: - live_room_url: Live room link - danmaku_type: Message type     - WebcastRoomMessage: Live room message     - WebcastLikeMessage: Like message     - WebcastMemberMessage: Member message     - WebcastChatMessage: Chat message     - WebcastGiftMessage: Gift message     - WebcastSocialMessage: Social message     - WebcastRoomUserSeqMessage: User sequence message     - WebcastUpdateFanTicketMessage: Update fan message     - WebcastCommonTextMessage: Common text message     - WebcastMatchAgainstScoreMessage: Match score message     - WebcastFansclubMessage: Fans club message     - WebcastRanklistHourEntranceMessage: Ranking list hour entrance message     - WebcastRoomStatsMessage: Live room statistics message     - WebcastLiveShoppingMessage: Live shopping message     - WebcastLiveEcomGeneralMessage: Live e-commerce general message     - WebcastProductChangeMessage: Live product change message     - WebcastRoomStreamAdaptationMessage: Live room stream adaptation message     - WebcastNotifyEffectMessage: Notification effect message     - WebcastLightGiftMessage: Light gift message     - WebcastProfitInteractionScoreMessage: Profit interaction score message     - WebcastRoomRankMessage: Live room ranking message ### Return: - WebSocket connection information of the danmaku data, you need to use WebSocket connection to get the danmaku data, this interface does not return the danmaku data.
     * @param liveRoomUrl 直播间链接/Live room link (required)
     * @param danmakuType 消息类型/Message type (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGetWithHttpInfo(String liveRoomUrl, String danmakuType) throws ApiException {
        okhttp3.Call localVarCall = douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGetValidateBeforeCall(liveRoomUrl, danmakuType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取直播间弹幕/Extract live room danmaku (asynchronously)
     * # [中文] ### 用途: - 提取直播间弹幕 #### 价格: - 每10条数据消耗0.001$，支持阶梯式计费折扣。 ### 参数: - live_room_url: 直播间链接 - danmaku_type: 消息类型     - WebcastRoomMessage：直播间消息     - WebcastLikeMessage：点赞消息     - WebcastMemberMessage：成员消息     - WebcastChatMessage：聊天消息     - WebcastGiftMessage：礼物消息     - WebcastSocialMessage：社交消息     - WebcastRoomUserSeqMessage：用户序列消息     - WebcastUpdateFanTicketMessage：更新粉丝消息     - WebcastCommonTextMessage：常规文本消息     - WebcastMatchAgainstScoreMessage：比赛得分消息     - WebcastFansclubMessage：粉丝俱乐部消息     - WebcastRanklistHourEntranceMessage：排行榜小时入口消息     - WebcastRoomStatsMessage：直播间统计消息     - WebcastLiveShoppingMessage: 直播购物消息     - WebcastLiveEcomGeneralMessage: 直播电商通用消息     - WebcastProductChangeMessage: 直播商品变更消息     - WebcastRoomStreamAdaptationMessage: 直播间流适配消息     - WebcastNotifyEffectMessage: 通知效果消息     - WebcastLightGiftMessage: 亮礼物消息     - WebcastProfitInteractionScoreMessage: 收益互动分消息     - WebcastRoomRankMessage: 直播间排行消息 ### 返回: - 弹幕数据的WebSocket连接信息，需要使用WebSocket连接获取弹幕数据，此接口不返回弹幕数据。  # [English] ### Purpose: - Extract live room danmaku #### Price: - 0.001$ per 10 data, support tiered billing discounts. ### Parameters: - live_room_url: Live room link - danmaku_type: Message type     - WebcastRoomMessage: Live room message     - WebcastLikeMessage: Like message     - WebcastMemberMessage: Member message     - WebcastChatMessage: Chat message     - WebcastGiftMessage: Gift message     - WebcastSocialMessage: Social message     - WebcastRoomUserSeqMessage: User sequence message     - WebcastUpdateFanTicketMessage: Update fan message     - WebcastCommonTextMessage: Common text message     - WebcastMatchAgainstScoreMessage: Match score message     - WebcastFansclubMessage: Fans club message     - WebcastRanklistHourEntranceMessage: Ranking list hour entrance message     - WebcastRoomStatsMessage: Live room statistics message     - WebcastLiveShoppingMessage: Live shopping message     - WebcastLiveEcomGeneralMessage: Live e-commerce general message     - WebcastProductChangeMessage: Live product change message     - WebcastRoomStreamAdaptationMessage: Live room stream adaptation message     - WebcastNotifyEffectMessage: Notification effect message     - WebcastLightGiftMessage: Light gift message     - WebcastProfitInteractionScoreMessage: Profit interaction score message     - WebcastRoomRankMessage: Live room ranking message ### Return: - WebSocket connection information of the danmaku data, you need to use WebSocket connection to get the danmaku data, this interface does not return the danmaku data.
     * @param liveRoomUrl 直播间链接/Live room link (required)
     * @param danmakuType 消息类型/Message type (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGetAsync(String liveRoomUrl, String danmakuType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGetValidateBeforeCall(liveRoomUrl, danmakuType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0
     * @param liveRoomUrl 直播间链接/Live room link (required)
     * @param danmakuType 消息类型/Message type (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0Call(String liveRoomUrl, String danmakuType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/douyin_live_room";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (liveRoomUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("live_room_url", liveRoomUrl));
        }

        if (danmakuType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("danmaku_type", danmakuType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0ValidateBeforeCall(String liveRoomUrl, String danmakuType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'liveRoomUrl' is set
        if (liveRoomUrl == null) {
            throw new ApiException("Missing the required parameter 'liveRoomUrl' when calling douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0(Async)");
        }
        
        // verify the required parameter 'danmakuType' is set
        if (danmakuType == null) {
            throw new ApiException("Missing the required parameter 'danmakuType' when calling douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0Call(liveRoomUrl, danmakuType, _callback);
        return localVarCall;

    }

    /**
     * 提取直播间弹幕/Extract live room danmaku
     * # [中文] ### 用途: - 提取直播间弹幕 #### 价格: - 每10条数据消耗0.001$，支持阶梯式计费折扣。 ### 参数: - live_room_url: 直播间链接 - danmaku_type: 消息类型     - WebcastRoomMessage：直播间消息     - WebcastLikeMessage：点赞消息     - WebcastMemberMessage：成员消息     - WebcastChatMessage：聊天消息     - WebcastGiftMessage：礼物消息     - WebcastSocialMessage：社交消息     - WebcastRoomUserSeqMessage：用户序列消息     - WebcastUpdateFanTicketMessage：更新粉丝消息     - WebcastCommonTextMessage：常规文本消息     - WebcastMatchAgainstScoreMessage：比赛得分消息     - WebcastFansclubMessage：粉丝俱乐部消息     - WebcastRanklistHourEntranceMessage：排行榜小时入口消息     - WebcastRoomStatsMessage：直播间统计消息     - WebcastLiveShoppingMessage: 直播购物消息     - WebcastLiveEcomGeneralMessage: 直播电商通用消息     - WebcastProductChangeMessage: 直播商品变更消息     - WebcastRoomStreamAdaptationMessage: 直播间流适配消息     - WebcastNotifyEffectMessage: 通知效果消息     - WebcastLightGiftMessage: 亮礼物消息     - WebcastProfitInteractionScoreMessage: 收益互动分消息     - WebcastRoomRankMessage: 直播间排行消息 ### 返回: - 弹幕数据的WebSocket连接信息，需要使用WebSocket连接获取弹幕数据，此接口不返回弹幕数据。  # [English] ### Purpose: - Extract live room danmaku #### Price: - 0.001$ per 10 data, support tiered billing discounts. ### Parameters: - live_room_url: Live room link - danmaku_type: Message type     - WebcastRoomMessage: Live room message     - WebcastLikeMessage: Like message     - WebcastMemberMessage: Member message     - WebcastChatMessage: Chat message     - WebcastGiftMessage: Gift message     - WebcastSocialMessage: Social message     - WebcastRoomUserSeqMessage: User sequence message     - WebcastUpdateFanTicketMessage: Update fan message     - WebcastCommonTextMessage: Common text message     - WebcastMatchAgainstScoreMessage: Match score message     - WebcastFansclubMessage: Fans club message     - WebcastRanklistHourEntranceMessage: Ranking list hour entrance message     - WebcastRoomStatsMessage: Live room statistics message     - WebcastLiveShoppingMessage: Live shopping message     - WebcastLiveEcomGeneralMessage: Live e-commerce general message     - WebcastProductChangeMessage: Live product change message     - WebcastRoomStreamAdaptationMessage: Live room stream adaptation message     - WebcastNotifyEffectMessage: Notification effect message     - WebcastLightGiftMessage: Light gift message     - WebcastProfitInteractionScoreMessage: Profit interaction score message     - WebcastRoomRankMessage: Live room ranking message ### Return: - WebSocket connection information of the danmaku data, you need to use WebSocket connection to get the danmaku data, this interface does not return the danmaku data.
     * @param liveRoomUrl 直播间链接/Live room link (required)
     * @param danmakuType 消息类型/Message type (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0(String liveRoomUrl, String danmakuType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0WithHttpInfo(liveRoomUrl, danmakuType);
        return localVarResp.getData();
    }

    /**
     * 提取直播间弹幕/Extract live room danmaku
     * # [中文] ### 用途: - 提取直播间弹幕 #### 价格: - 每10条数据消耗0.001$，支持阶梯式计费折扣。 ### 参数: - live_room_url: 直播间链接 - danmaku_type: 消息类型     - WebcastRoomMessage：直播间消息     - WebcastLikeMessage：点赞消息     - WebcastMemberMessage：成员消息     - WebcastChatMessage：聊天消息     - WebcastGiftMessage：礼物消息     - WebcastSocialMessage：社交消息     - WebcastRoomUserSeqMessage：用户序列消息     - WebcastUpdateFanTicketMessage：更新粉丝消息     - WebcastCommonTextMessage：常规文本消息     - WebcastMatchAgainstScoreMessage：比赛得分消息     - WebcastFansclubMessage：粉丝俱乐部消息     - WebcastRanklistHourEntranceMessage：排行榜小时入口消息     - WebcastRoomStatsMessage：直播间统计消息     - WebcastLiveShoppingMessage: 直播购物消息     - WebcastLiveEcomGeneralMessage: 直播电商通用消息     - WebcastProductChangeMessage: 直播商品变更消息     - WebcastRoomStreamAdaptationMessage: 直播间流适配消息     - WebcastNotifyEffectMessage: 通知效果消息     - WebcastLightGiftMessage: 亮礼物消息     - WebcastProfitInteractionScoreMessage: 收益互动分消息     - WebcastRoomRankMessage: 直播间排行消息 ### 返回: - 弹幕数据的WebSocket连接信息，需要使用WebSocket连接获取弹幕数据，此接口不返回弹幕数据。  # [English] ### Purpose: - Extract live room danmaku #### Price: - 0.001$ per 10 data, support tiered billing discounts. ### Parameters: - live_room_url: Live room link - danmaku_type: Message type     - WebcastRoomMessage: Live room message     - WebcastLikeMessage: Like message     - WebcastMemberMessage: Member message     - WebcastChatMessage: Chat message     - WebcastGiftMessage: Gift message     - WebcastSocialMessage: Social message     - WebcastRoomUserSeqMessage: User sequence message     - WebcastUpdateFanTicketMessage: Update fan message     - WebcastCommonTextMessage: Common text message     - WebcastMatchAgainstScoreMessage: Match score message     - WebcastFansclubMessage: Fans club message     - WebcastRanklistHourEntranceMessage: Ranking list hour entrance message     - WebcastRoomStatsMessage: Live room statistics message     - WebcastLiveShoppingMessage: Live shopping message     - WebcastLiveEcomGeneralMessage: Live e-commerce general message     - WebcastProductChangeMessage: Live product change message     - WebcastRoomStreamAdaptationMessage: Live room stream adaptation message     - WebcastNotifyEffectMessage: Notification effect message     - WebcastLightGiftMessage: Light gift message     - WebcastProfitInteractionScoreMessage: Profit interaction score message     - WebcastRoomRankMessage: Live room ranking message ### Return: - WebSocket connection information of the danmaku data, you need to use WebSocket connection to get the danmaku data, this interface does not return the danmaku data.
     * @param liveRoomUrl 直播间链接/Live room link (required)
     * @param danmakuType 消息类型/Message type (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0WithHttpInfo(String liveRoomUrl, String danmakuType) throws ApiException {
        okhttp3.Call localVarCall = douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0ValidateBeforeCall(liveRoomUrl, danmakuType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取直播间弹幕/Extract live room danmaku (asynchronously)
     * # [中文] ### 用途: - 提取直播间弹幕 #### 价格: - 每10条数据消耗0.001$，支持阶梯式计费折扣。 ### 参数: - live_room_url: 直播间链接 - danmaku_type: 消息类型     - WebcastRoomMessage：直播间消息     - WebcastLikeMessage：点赞消息     - WebcastMemberMessage：成员消息     - WebcastChatMessage：聊天消息     - WebcastGiftMessage：礼物消息     - WebcastSocialMessage：社交消息     - WebcastRoomUserSeqMessage：用户序列消息     - WebcastUpdateFanTicketMessage：更新粉丝消息     - WebcastCommonTextMessage：常规文本消息     - WebcastMatchAgainstScoreMessage：比赛得分消息     - WebcastFansclubMessage：粉丝俱乐部消息     - WebcastRanklistHourEntranceMessage：排行榜小时入口消息     - WebcastRoomStatsMessage：直播间统计消息     - WebcastLiveShoppingMessage: 直播购物消息     - WebcastLiveEcomGeneralMessage: 直播电商通用消息     - WebcastProductChangeMessage: 直播商品变更消息     - WebcastRoomStreamAdaptationMessage: 直播间流适配消息     - WebcastNotifyEffectMessage: 通知效果消息     - WebcastLightGiftMessage: 亮礼物消息     - WebcastProfitInteractionScoreMessage: 收益互动分消息     - WebcastRoomRankMessage: 直播间排行消息 ### 返回: - 弹幕数据的WebSocket连接信息，需要使用WebSocket连接获取弹幕数据，此接口不返回弹幕数据。  # [English] ### Purpose: - Extract live room danmaku #### Price: - 0.001$ per 10 data, support tiered billing discounts. ### Parameters: - live_room_url: Live room link - danmaku_type: Message type     - WebcastRoomMessage: Live room message     - WebcastLikeMessage: Like message     - WebcastMemberMessage: Member message     - WebcastChatMessage: Chat message     - WebcastGiftMessage: Gift message     - WebcastSocialMessage: Social message     - WebcastRoomUserSeqMessage: User sequence message     - WebcastUpdateFanTicketMessage: Update fan message     - WebcastCommonTextMessage: Common text message     - WebcastMatchAgainstScoreMessage: Match score message     - WebcastFansclubMessage: Fans club message     - WebcastRanklistHourEntranceMessage: Ranking list hour entrance message     - WebcastRoomStatsMessage: Live room statistics message     - WebcastLiveShoppingMessage: Live shopping message     - WebcastLiveEcomGeneralMessage: Live e-commerce general message     - WebcastProductChangeMessage: Live product change message     - WebcastRoomStreamAdaptationMessage: Live room stream adaptation message     - WebcastNotifyEffectMessage: Notification effect message     - WebcastLightGiftMessage: Light gift message     - WebcastProfitInteractionScoreMessage: Profit interaction score message     - WebcastRoomRankMessage: Live room ranking message ### Return: - WebSocket connection information of the danmaku data, you need to use WebSocket connection to get the danmaku data, this interface does not return the danmaku data.
     * @param liveRoomUrl 直播间链接/Live room link (required)
     * @param danmakuType 消息类型/Message type (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0Async(String liveRoomUrl, String danmakuType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = douyinLiveRoomApiV1DouyinWebDouyinLiveRoomGet_0ValidateBeforeCall(liveRoomUrl, danmakuType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet
     * @param userAgent 用户浏览器代理/User browser agent (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGetCall(String userAgent, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_douyin_web_guest_cookie";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userAgent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_agent", userAgent));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGetValidateBeforeCall(String userAgent, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userAgent' is set
        if (userAgent == null) {
            throw new ApiException("Missing the required parameter 'userAgent' when calling fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGetCall(userAgent, _callback);
        return localVarCall;

    }

    /**
     * 获取抖音Web的游客Cookie/Get the guest Cookie of Douyin Web
     * # [中文] ### 用途: - 获取抖音Web的游客Cookie - 可以用于爬取抖音Web的数据，如用户作品、合辑作品等。 - 请注意：游客Cookie无法爬取所有数据，有一定的限制。 - 可以配合开源项目使用此接口实现抖音Web的数据爬取。 ### 参数: - user_agent: 用户浏览器代理 ### 返回: - 游客Cookie  # [English] ### Purpose: - Get the guest Cookie of Douyin Web - Can be used to crawl data of Douyin Web, such as user videos, mix videos, etc. - Please note: Guest Cookie cannot crawl all data, there are certain restrictions. - Can be used with open source projects to implement data crawling of Douyin Web using this interface. ### Parameters: - user_agent: User browser agent ### Return: - Guest Cookie  # [示例/Example] user_agent &#x3D; \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot;
     * @param userAgent 用户浏览器代理/User browser agent (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet(String userAgent) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGetWithHttpInfo(userAgent);
        return localVarResp.getData();
    }

    /**
     * 获取抖音Web的游客Cookie/Get the guest Cookie of Douyin Web
     * # [中文] ### 用途: - 获取抖音Web的游客Cookie - 可以用于爬取抖音Web的数据，如用户作品、合辑作品等。 - 请注意：游客Cookie无法爬取所有数据，有一定的限制。 - 可以配合开源项目使用此接口实现抖音Web的数据爬取。 ### 参数: - user_agent: 用户浏览器代理 ### 返回: - 游客Cookie  # [English] ### Purpose: - Get the guest Cookie of Douyin Web - Can be used to crawl data of Douyin Web, such as user videos, mix videos, etc. - Please note: Guest Cookie cannot crawl all data, there are certain restrictions. - Can be used with open source projects to implement data crawling of Douyin Web using this interface. ### Parameters: - user_agent: User browser agent ### Return: - Guest Cookie  # [示例/Example] user_agent &#x3D; \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot;
     * @param userAgent 用户浏览器代理/User browser agent (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGetWithHttpInfo(String userAgent) throws ApiException {
        okhttp3.Call localVarCall = fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGetValidateBeforeCall(userAgent, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音Web的游客Cookie/Get the guest Cookie of Douyin Web (asynchronously)
     * # [中文] ### 用途: - 获取抖音Web的游客Cookie - 可以用于爬取抖音Web的数据，如用户作品、合辑作品等。 - 请注意：游客Cookie无法爬取所有数据，有一定的限制。 - 可以配合开源项目使用此接口实现抖音Web的数据爬取。 ### 参数: - user_agent: 用户浏览器代理 ### 返回: - 游客Cookie  # [English] ### Purpose: - Get the guest Cookie of Douyin Web - Can be used to crawl data of Douyin Web, such as user videos, mix videos, etc. - Please note: Guest Cookie cannot crawl all data, there are certain restrictions. - Can be used with open source projects to implement data crawling of Douyin Web using this interface. ### Parameters: - user_agent: User browser agent ### Return: - Guest Cookie  # [示例/Example] user_agent &#x3D; \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot;
     * @param userAgent 用户浏览器代理/User browser agent (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGetAsync(String userAgent, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGetValidateBeforeCall(userAgent, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0
     * @param userAgent 用户浏览器代理/User browser agent (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0Call(String userAgent, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_douyin_web_guest_cookie";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userAgent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_agent", userAgent));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0ValidateBeforeCall(String userAgent, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userAgent' is set
        if (userAgent == null) {
            throw new ApiException("Missing the required parameter 'userAgent' when calling fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0Call(userAgent, _callback);
        return localVarCall;

    }

    /**
     * 获取抖音Web的游客Cookie/Get the guest Cookie of Douyin Web
     * # [中文] ### 用途: - 获取抖音Web的游客Cookie - 可以用于爬取抖音Web的数据，如用户作品、合辑作品等。 - 请注意：游客Cookie无法爬取所有数据，有一定的限制。 - 可以配合开源项目使用此接口实现抖音Web的数据爬取。 ### 参数: - user_agent: 用户浏览器代理 ### 返回: - 游客Cookie  # [English] ### Purpose: - Get the guest Cookie of Douyin Web - Can be used to crawl data of Douyin Web, such as user videos, mix videos, etc. - Please note: Guest Cookie cannot crawl all data, there are certain restrictions. - Can be used with open source projects to implement data crawling of Douyin Web using this interface. ### Parameters: - user_agent: User browser agent ### Return: - Guest Cookie  # [示例/Example] user_agent &#x3D; \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot;
     * @param userAgent 用户浏览器代理/User browser agent (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0(String userAgent) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0WithHttpInfo(userAgent);
        return localVarResp.getData();
    }

    /**
     * 获取抖音Web的游客Cookie/Get the guest Cookie of Douyin Web
     * # [中文] ### 用途: - 获取抖音Web的游客Cookie - 可以用于爬取抖音Web的数据，如用户作品、合辑作品等。 - 请注意：游客Cookie无法爬取所有数据，有一定的限制。 - 可以配合开源项目使用此接口实现抖音Web的数据爬取。 ### 参数: - user_agent: 用户浏览器代理 ### 返回: - 游客Cookie  # [English] ### Purpose: - Get the guest Cookie of Douyin Web - Can be used to crawl data of Douyin Web, such as user videos, mix videos, etc. - Please note: Guest Cookie cannot crawl all data, there are certain restrictions. - Can be used with open source projects to implement data crawling of Douyin Web using this interface. ### Parameters: - user_agent: User browser agent ### Return: - Guest Cookie  # [示例/Example] user_agent &#x3D; \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot;
     * @param userAgent 用户浏览器代理/User browser agent (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0WithHttpInfo(String userAgent) throws ApiException {
        okhttp3.Call localVarCall = fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0ValidateBeforeCall(userAgent, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音Web的游客Cookie/Get the guest Cookie of Douyin Web (asynchronously)
     * # [中文] ### 用途: - 获取抖音Web的游客Cookie - 可以用于爬取抖音Web的数据，如用户作品、合辑作品等。 - 请注意：游客Cookie无法爬取所有数据，有一定的限制。 - 可以配合开源项目使用此接口实现抖音Web的数据爬取。 ### 参数: - user_agent: 用户浏览器代理 ### 返回: - 游客Cookie  # [English] ### Purpose: - Get the guest Cookie of Douyin Web - Can be used to crawl data of Douyin Web, such as user videos, mix videos, etc. - Please note: Guest Cookie cannot crawl all data, there are certain restrictions. - Can be used with open source projects to implement data crawling of Douyin Web using this interface. ### Parameters: - user_agent: User browser agent ### Return: - Guest Cookie  # [示例/Example] user_agent &#x3D; \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot;
     * @param userAgent 用户浏览器代理/User browser agent (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0Async(String userAgent, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchDouyinWebGuestCookieApiV1DouyinWebFetchDouyinWebGuestCookieGet_0ValidateBeforeCall(userAgent, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGetCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_general_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        if (filterDuration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_duration", filterDuration));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGetCall(keyword, offset, count, sortType, publishTime, filterDuration, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGetWithHttpInfo(keyword, offset, count, sortType, publishTime, filterDuration);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration) throws ApiException {
        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGetAsync(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0Call(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_general_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        if (filterDuration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_duration", filterDuration));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0Call(keyword, offset, count, sortType, publishTime, filterDuration, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0WithHttpInfo(keyword, offset, count, sortType, publishTime, filterDuration);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration) throws ApiException {
        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0Async(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinWebFetchGeneralSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomeFeedApiV1DouyinWebFetchHomeFeedGetCall(Integer count, Integer refreshIndex, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_home_feed";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (refreshIndex != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("refresh_index", refreshIndex));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHomeFeedApiV1DouyinWebFetchHomeFeedGetValidateBeforeCall(Integer count, Integer refreshIndex, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHomeFeedApiV1DouyinWebFetchHomeFeedGetCall(count, refreshIndex, _callback);
        return localVarCall;

    }

    /**
     * 获取首页推荐数据/Get home feed data
     * # [中文] ### 用途: - 获取首页推荐数据 ### 参数: - count: 数量，默认为10，建议保持不变。 - refresh_index: 翻页索引，默认为0，然后每次增加1用于翻页。 ### 返回: - Feed数据  # [English] ### Purpose: - Get home feed data ### Parameters: - count: Number, default is 10, it is recommended to keep it unchanged. - refresh_index: Paging index, default is 0, then increase by 1 each time for paging. ### Return: - Feed data  # [示例/Example] count &#x3D; 10 refresh_index &#x3D; 0
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 0)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet(Integer count, Integer refreshIndex) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHomeFeedApiV1DouyinWebFetchHomeFeedGetWithHttpInfo(count, refreshIndex);
        return localVarResp.getData();
    }

    /**
     * 获取首页推荐数据/Get home feed data
     * # [中文] ### 用途: - 获取首页推荐数据 ### 参数: - count: 数量，默认为10，建议保持不变。 - refresh_index: 翻页索引，默认为0，然后每次增加1用于翻页。 ### 返回: - Feed数据  # [English] ### Purpose: - Get home feed data ### Parameters: - count: Number, default is 10, it is recommended to keep it unchanged. - refresh_index: Paging index, default is 0, then increase by 1 each time for paging. ### Return: - Feed data  # [示例/Example] count &#x3D; 10 refresh_index &#x3D; 0
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 0)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHomeFeedApiV1DouyinWebFetchHomeFeedGetWithHttpInfo(Integer count, Integer refreshIndex) throws ApiException {
        okhttp3.Call localVarCall = fetchHomeFeedApiV1DouyinWebFetchHomeFeedGetValidateBeforeCall(count, refreshIndex, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取首页推荐数据/Get home feed data (asynchronously)
     * # [中文] ### 用途: - 获取首页推荐数据 ### 参数: - count: 数量，默认为10，建议保持不变。 - refresh_index: 翻页索引，默认为0，然后每次增加1用于翻页。 ### 返回: - Feed数据  # [English] ### Purpose: - Get home feed data ### Parameters: - count: Number, default is 10, it is recommended to keep it unchanged. - refresh_index: Paging index, default is 0, then increase by 1 each time for paging. ### Return: - Feed data  # [示例/Example] count &#x3D; 10 refresh_index &#x3D; 0
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomeFeedApiV1DouyinWebFetchHomeFeedGetAsync(Integer count, Integer refreshIndex, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHomeFeedApiV1DouyinWebFetchHomeFeedGetValidateBeforeCall(count, refreshIndex, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0Call(Integer count, Integer refreshIndex, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_home_feed";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (refreshIndex != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("refresh_index", refreshIndex));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0ValidateBeforeCall(Integer count, Integer refreshIndex, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0Call(count, refreshIndex, _callback);
        return localVarCall;

    }

    /**
     * 获取首页推荐数据/Get home feed data
     * # [中文] ### 用途: - 获取首页推荐数据 ### 参数: - count: 数量，默认为10，建议保持不变。 - refresh_index: 翻页索引，默认为0，然后每次增加1用于翻页。 ### 返回: - Feed数据  # [English] ### Purpose: - Get home feed data ### Parameters: - count: Number, default is 10, it is recommended to keep it unchanged. - refresh_index: Paging index, default is 0, then increase by 1 each time for paging. ### Return: - Feed data  # [示例/Example] count &#x3D; 10 refresh_index &#x3D; 0
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 0)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0(Integer count, Integer refreshIndex) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0WithHttpInfo(count, refreshIndex);
        return localVarResp.getData();
    }

    /**
     * 获取首页推荐数据/Get home feed data
     * # [中文] ### 用途: - 获取首页推荐数据 ### 参数: - count: 数量，默认为10，建议保持不变。 - refresh_index: 翻页索引，默认为0，然后每次增加1用于翻页。 ### 返回: - Feed数据  # [English] ### Purpose: - Get home feed data ### Parameters: - count: Number, default is 10, it is recommended to keep it unchanged. - refresh_index: Paging index, default is 0, then increase by 1 each time for paging. ### Return: - Feed data  # [示例/Example] count &#x3D; 10 refresh_index &#x3D; 0
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 0)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0WithHttpInfo(Integer count, Integer refreshIndex) throws ApiException {
        okhttp3.Call localVarCall = fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0ValidateBeforeCall(count, refreshIndex, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取首页推荐数据/Get home feed data (asynchronously)
     * # [中文] ### 用途: - 获取首页推荐数据 ### 参数: - count: 数量，默认为10，建议保持不变。 - refresh_index: 翻页索引，默认为0，然后每次增加1用于翻页。 ### 返回: - Feed数据  # [English] ### Purpose: - Get home feed data ### Parameters: - count: Number, default is 10, it is recommended to keep it unchanged. - refresh_index: Paging index, default is 0, then increase by 1 each time for paging. ### Return: - Feed data  # [示例/Example] count &#x3D; 10 refresh_index &#x3D; 0
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0Async(Integer count, Integer refreshIndex, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHomeFeedApiV1DouyinWebFetchHomeFeedGet_0ValidateBeforeCall(count, refreshIndex, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_hot_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGetCall(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音热榜数据/Get Douyin hot search results
     * # [中文] ### 用途: - 获取抖音热榜数据 ### 返回: - 热榜数据  # [English] ### Purpose: - Get Douyin hot search results ### Return: - Hot search results
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音热榜数据/Get Douyin hot search results
     * # [中文] ### 用途: - 获取抖音热榜数据 ### 返回: - 热榜数据  # [English] ### Purpose: - Get Douyin hot search results ### Return: - Hot search results
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音热榜数据/Get Douyin hot search results (asynchronously)
     * # [中文] ### 用途: - 获取抖音热榜数据 ### 返回: - 热榜数据  # [English] ### Purpose: - Get Douyin hot search results ### Return: - Hot search results
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_hot_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音热榜数据/Get Douyin hot search results
     * # [中文] ### 用途: - 获取抖音热榜数据 ### 返回: - 热榜数据  # [English] ### Purpose: - Get Douyin hot search results ### Return: - Hot search results
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音热榜数据/Get Douyin hot search results
     * # [中文] ### 用途: - 获取抖音热榜数据 ### 返回: - 热榜数据  # [English] ### Purpose: - Get Douyin hot search results ### Return: - Hot search results
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音热榜数据/Get Douyin hot search results (asynchronously)
     * # [中文] ### 用途: - 获取抖音热榜数据 ### 返回: - 热榜数据  # [English] ### Purpose: - Get Douyin hot search results ### Return: - Hot search results
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHotSearchResultApiV1DouyinWebFetchHotSearchResultGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet
     * @param roomId 直播间room_id/Room room_id (required)
     * @param rankType 排行类型/Leaderboard type (optional, default to 30)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGetCall(String roomId, Integer rankType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_live_gift_ranking";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        if (rankType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rank_type", rankType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGetValidateBeforeCall(String roomId, Integer rankType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGetCall(roomId, rankType, _callback);
        return localVarCall;

    }

    /**
     * 获取直播间送礼用户排行榜/Get live room gift user ranking
     * # [中文] ### 用途: - 获取直播间送礼用户排行榜 ### 参数: - room_id: 直播间room_id - rank_type: 排行类型，默认为30不用修改。 ### 返回: - 排行榜数据  # [English] ### Purpose: - Get live room gift user ranking ### Parameters: - room_id: Room room_id - rank_type: Leaderboard type, default is 30, no need to modify. ### Return: - Leaderboard data  # [示例/Example] room_id &#x3D; \&quot;7356585666190461731\&quot; rank_type &#x3D; 30
     * @param roomId 直播间room_id/Room room_id (required)
     * @param rankType 排行类型/Leaderboard type (optional, default to 30)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet(String roomId, Integer rankType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGetWithHttpInfo(roomId, rankType);
        return localVarResp.getData();
    }

    /**
     * 获取直播间送礼用户排行榜/Get live room gift user ranking
     * # [中文] ### 用途: - 获取直播间送礼用户排行榜 ### 参数: - room_id: 直播间room_id - rank_type: 排行类型，默认为30不用修改。 ### 返回: - 排行榜数据  # [English] ### Purpose: - Get live room gift user ranking ### Parameters: - room_id: Room room_id - rank_type: Leaderboard type, default is 30, no need to modify. ### Return: - Leaderboard data  # [示例/Example] room_id &#x3D; \&quot;7356585666190461731\&quot; rank_type &#x3D; 30
     * @param roomId 直播间room_id/Room room_id (required)
     * @param rankType 排行类型/Leaderboard type (optional, default to 30)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGetWithHttpInfo(String roomId, Integer rankType) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGetValidateBeforeCall(roomId, rankType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取直播间送礼用户排行榜/Get live room gift user ranking (asynchronously)
     * # [中文] ### 用途: - 获取直播间送礼用户排行榜 ### 参数: - room_id: 直播间room_id - rank_type: 排行类型，默认为30不用修改。 ### 返回: - 排行榜数据  # [English] ### Purpose: - Get live room gift user ranking ### Parameters: - room_id: Room room_id - rank_type: Leaderboard type, default is 30, no need to modify. ### Return: - Leaderboard data  # [示例/Example] room_id &#x3D; \&quot;7356585666190461731\&quot; rank_type &#x3D; 30
     * @param roomId 直播间room_id/Room room_id (required)
     * @param rankType 排行类型/Leaderboard type (optional, default to 30)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGetAsync(String roomId, Integer rankType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGetValidateBeforeCall(roomId, rankType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0
     * @param roomId 直播间room_id/Room room_id (required)
     * @param rankType 排行类型/Leaderboard type (optional, default to 30)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0Call(String roomId, Integer rankType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_live_gift_ranking";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        if (rankType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rank_type", rankType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0ValidateBeforeCall(String roomId, Integer rankType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0Call(roomId, rankType, _callback);
        return localVarCall;

    }

    /**
     * 获取直播间送礼用户排行榜/Get live room gift user ranking
     * # [中文] ### 用途: - 获取直播间送礼用户排行榜 ### 参数: - room_id: 直播间room_id - rank_type: 排行类型，默认为30不用修改。 ### 返回: - 排行榜数据  # [English] ### Purpose: - Get live room gift user ranking ### Parameters: - room_id: Room room_id - rank_type: Leaderboard type, default is 30, no need to modify. ### Return: - Leaderboard data  # [示例/Example] room_id &#x3D; \&quot;7356585666190461731\&quot; rank_type &#x3D; 30
     * @param roomId 直播间room_id/Room room_id (required)
     * @param rankType 排行类型/Leaderboard type (optional, default to 30)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0(String roomId, Integer rankType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0WithHttpInfo(roomId, rankType);
        return localVarResp.getData();
    }

    /**
     * 获取直播间送礼用户排行榜/Get live room gift user ranking
     * # [中文] ### 用途: - 获取直播间送礼用户排行榜 ### 参数: - room_id: 直播间room_id - rank_type: 排行类型，默认为30不用修改。 ### 返回: - 排行榜数据  # [English] ### Purpose: - Get live room gift user ranking ### Parameters: - room_id: Room room_id - rank_type: Leaderboard type, default is 30, no need to modify. ### Return: - Leaderboard data  # [示例/Example] room_id &#x3D; \&quot;7356585666190461731\&quot; rank_type &#x3D; 30
     * @param roomId 直播间room_id/Room room_id (required)
     * @param rankType 排行类型/Leaderboard type (optional, default to 30)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0WithHttpInfo(String roomId, Integer rankType) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0ValidateBeforeCall(roomId, rankType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取直播间送礼用户排行榜/Get live room gift user ranking (asynchronously)
     * # [中文] ### 用途: - 获取直播间送礼用户排行榜 ### 参数: - room_id: 直播间room_id - rank_type: 排行类型，默认为30不用修改。 ### 返回: - 排行榜数据  # [English] ### Purpose: - Get live room gift user ranking ### Parameters: - room_id: Room room_id - rank_type: Leaderboard type, default is 30, no need to modify. ### Return: - Leaderboard data  # [示例/Example] room_id &#x3D; \&quot;7356585666190461731\&quot; rank_type &#x3D; 30
     * @param roomId 直播间room_id/Room room_id (required)
     * @param rankType 排行类型/Leaderboard type (optional, default to 30)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0Async(String roomId, Integer rankType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveGiftRankingApiV1DouyinWebFetchLiveGiftRankingGet_0ValidateBeforeCall(roomId, rankType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet
     * @param roomId 直播间room_id/Room room_id (required)
     * @param authorId 作者id/Author id (required)
     * @param limit 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGetCall(String roomId, String authorId, Integer limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_live_room_product_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        if (authorId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("author_id", authorId));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGetValidateBeforeCall(String roomId, String authorId, Integer limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet(Async)");
        }
        
        // verify the required parameter 'authorId' is set
        if (authorId == null) {
            throw new ApiException("Missing the required parameter 'authorId' when calling fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGetCall(roomId, authorId, limit, _callback);
        return localVarCall;

    }

    /**
     * 抖音直播间商品信息/Douyin live room product information
     * # [中文] ### 用途: - 抖音直播间商品信息 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie，如获取失败请手动过一次验证码) - room_id: 直播间room_id - author_id: 作者id - limit: 数量 ### 返回: - 商品信息  # [English] ### Purpose: - Douyin live room product information ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie, if the acquisition fails, please manually pass the captcha code once) - room_id: Room room_id - author_id: Author id - limit: Number ### Return: - Product information  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; room_id &#x3D; \&quot;7356742011975715619\&quot; author_id &#x3D; \&quot;2207432981615527\&quot; limit &#x3D; 20
     * @param roomId 直播间room_id/Room room_id (required)
     * @param authorId 作者id/Author id (required)
     * @param limit 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet(String roomId, String authorId, Integer limit) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGetWithHttpInfo(roomId, authorId, limit);
        return localVarResp.getData();
    }

    /**
     * 抖音直播间商品信息/Douyin live room product information
     * # [中文] ### 用途: - 抖音直播间商品信息 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie，如获取失败请手动过一次验证码) - room_id: 直播间room_id - author_id: 作者id - limit: 数量 ### 返回: - 商品信息  # [English] ### Purpose: - Douyin live room product information ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie, if the acquisition fails, please manually pass the captcha code once) - room_id: Room room_id - author_id: Author id - limit: Number ### Return: - Product information  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; room_id &#x3D; \&quot;7356742011975715619\&quot; author_id &#x3D; \&quot;2207432981615527\&quot; limit &#x3D; 20
     * @param roomId 直播间room_id/Room room_id (required)
     * @param authorId 作者id/Author id (required)
     * @param limit 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGetWithHttpInfo(String roomId, String authorId, Integer limit) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGetValidateBeforeCall(roomId, authorId, limit, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 抖音直播间商品信息/Douyin live room product information (asynchronously)
     * # [中文] ### 用途: - 抖音直播间商品信息 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie，如获取失败请手动过一次验证码) - room_id: 直播间room_id - author_id: 作者id - limit: 数量 ### 返回: - 商品信息  # [English] ### Purpose: - Douyin live room product information ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie, if the acquisition fails, please manually pass the captcha code once) - room_id: Room room_id - author_id: Author id - limit: Number ### Return: - Product information  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; room_id &#x3D; \&quot;7356742011975715619\&quot; author_id &#x3D; \&quot;2207432981615527\&quot; limit &#x3D; 20
     * @param roomId 直播间room_id/Room room_id (required)
     * @param authorId 作者id/Author id (required)
     * @param limit 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGetAsync(String roomId, String authorId, Integer limit, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGetValidateBeforeCall(roomId, authorId, limit, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0
     * @param roomId 直播间room_id/Room room_id (required)
     * @param authorId 作者id/Author id (required)
     * @param limit 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0Call(String roomId, String authorId, Integer limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_live_room_product_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        if (authorId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("author_id", authorId));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0ValidateBeforeCall(String roomId, String authorId, Integer limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0(Async)");
        }
        
        // verify the required parameter 'authorId' is set
        if (authorId == null) {
            throw new ApiException("Missing the required parameter 'authorId' when calling fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0Call(roomId, authorId, limit, _callback);
        return localVarCall;

    }

    /**
     * 抖音直播间商品信息/Douyin live room product information
     * # [中文] ### 用途: - 抖音直播间商品信息 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie，如获取失败请手动过一次验证码) - room_id: 直播间room_id - author_id: 作者id - limit: 数量 ### 返回: - 商品信息  # [English] ### Purpose: - Douyin live room product information ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie, if the acquisition fails, please manually pass the captcha code once) - room_id: Room room_id - author_id: Author id - limit: Number ### Return: - Product information  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; room_id &#x3D; \&quot;7356742011975715619\&quot; author_id &#x3D; \&quot;2207432981615527\&quot; limit &#x3D; 20
     * @param roomId 直播间room_id/Room room_id (required)
     * @param authorId 作者id/Author id (required)
     * @param limit 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0(String roomId, String authorId, Integer limit) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0WithHttpInfo(roomId, authorId, limit);
        return localVarResp.getData();
    }

    /**
     * 抖音直播间商品信息/Douyin live room product information
     * # [中文] ### 用途: - 抖音直播间商品信息 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie，如获取失败请手动过一次验证码) - room_id: 直播间room_id - author_id: 作者id - limit: 数量 ### 返回: - 商品信息  # [English] ### Purpose: - Douyin live room product information ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie, if the acquisition fails, please manually pass the captcha code once) - room_id: Room room_id - author_id: Author id - limit: Number ### Return: - Product information  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; room_id &#x3D; \&quot;7356742011975715619\&quot; author_id &#x3D; \&quot;2207432981615527\&quot; limit &#x3D; 20
     * @param roomId 直播间room_id/Room room_id (required)
     * @param authorId 作者id/Author id (required)
     * @param limit 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0WithHttpInfo(String roomId, String authorId, Integer limit) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0ValidateBeforeCall(roomId, authorId, limit, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 抖音直播间商品信息/Douyin live room product information (asynchronously)
     * # [中文] ### 用途: - 抖音直播间商品信息 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie，如获取失败请手动过一次验证码) - room_id: 直播间room_id - author_id: 作者id - limit: 数量 ### 返回: - 商品信息  # [English] ### Purpose: - Douyin live room product information ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie, if the acquisition fails, please manually pass the captcha code once) - room_id: Room room_id - author_id: Author id - limit: Number ### Return: - Product information  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; room_id &#x3D; \&quot;7356742011975715619\&quot; author_id &#x3D; \&quot;2207432981615527\&quot; limit &#x3D; 20
     * @param roomId 直播间room_id/Room room_id (required)
     * @param authorId 作者id/Author id (required)
     * @param limit 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0Async(String roomId, String authorId, Integer limit, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveRoomProductResultApiV1DouyinWebFetchLiveRoomProductResultGet_0ValidateBeforeCall(roomId, authorId, limit, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGetCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_live_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGetCall(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGetWithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGetValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGetAsync(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGetValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0Call(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_live_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0Call(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0WithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0ValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0Async(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinWebFetchLiveSearchResultGet_0ValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1DouyinWebFetchOneVideoGet
     * @param awemeId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoGetCall(String awemeId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_one_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoGetValidateBeforeCall(String awemeId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchOneVideoApiV1DouyinWebFetchOneVideoGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoGetCall(awemeId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据，此接口即将废弃，请使用APP接口/Get single video data, this endpoint will be deprecated soon, please use APP endpoint
     * # [中文] ### 用途: - 获取单个作品数据 - 此接口无法保障稳定性，如果有爬取单一视频需求，请使用下面的接口。 - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data - This interface cannot guarantee stability. If you need to crawl a single video, please use the following interface. - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchOneVideoApiV1DouyinWebFetchOneVideoGet(String awemeId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1DouyinWebFetchOneVideoGetWithHttpInfo(awemeId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据，此接口即将废弃，请使用APP接口/Get single video data, this endpoint will be deprecated soon, please use APP endpoint
     * # [中文] ### 用途: - 获取单个作品数据 - 此接口无法保障稳定性，如果有爬取单一视频需求，请使用下面的接口。 - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data - This interface cannot guarantee stability. If you need to crawl a single video, please use the following interface. - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchOneVideoApiV1DouyinWebFetchOneVideoGetWithHttpInfo(String awemeId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoGetValidateBeforeCall(awemeId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据，此接口即将废弃，请使用APP接口/Get single video data, this endpoint will be deprecated soon, please use APP endpoint (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据 - 此接口无法保障稳定性，如果有爬取单一视频需求，请使用下面的接口。 - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data - This interface cannot guarantee stability. If you need to crawl a single video, please use the following interface. - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoGetAsync(String awemeId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoGetValidateBeforeCall(awemeId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0
     * @param awemeId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0Call(String awemeId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_one_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0ValidateBeforeCall(String awemeId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0Call(awemeId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据，此接口即将废弃，请使用APP接口/Get single video data, this endpoint will be deprecated soon, please use APP endpoint
     * # [中文] ### 用途: - 获取单个作品数据 - 此接口无法保障稳定性，如果有爬取单一视频需求，请使用下面的接口。 - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data - This interface cannot guarantee stability. If you need to crawl a single video, please use the following interface. - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0(String awemeId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0WithHttpInfo(awemeId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据，此接口即将废弃，请使用APP接口/Get single video data, this endpoint will be deprecated soon, please use APP endpoint
     * # [中文] ### 用途: - 获取单个作品数据 - 此接口无法保障稳定性，如果有爬取单一视频需求，请使用下面的接口。 - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data - This interface cannot guarantee stability. If you need to crawl a single video, please use the following interface. - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0WithHttpInfo(String awemeId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0ValidateBeforeCall(awemeId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据，此接口即将废弃，请使用APP接口/Get single video data, this endpoint will be deprecated soon, please use APP endpoint (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据 - 此接口无法保障稳定性，如果有爬取单一视频需求，请使用下面的接口。 - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data - This interface cannot guarantee stability. If you need to crawl a single video, please use the following interface. - /api/v1/douyin/app/v1/fetch_one_video - /api/v1/douyin/app/v2/fetch_one_video - /api/v1/douyin/app/v3/fetch_one_video ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0Async(String awemeId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoGet_0ValidateBeforeCall(awemeId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get
     * @param awemeId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoV2GetCall(String awemeId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_one_video_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoV2GetValidateBeforeCall(String awemeId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoV2GetCall(awemeId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据 V2/Get single video data V2
     * # [中文] ### 用途: - 获取单个作品数据V2 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data V2 ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get(String awemeId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1DouyinWebFetchOneVideoV2GetWithHttpInfo(awemeId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据 V2/Get single video data V2
     * # [中文] ### 用途: - 获取单个作品数据V2 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data V2 ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoApiV1DouyinWebFetchOneVideoV2GetWithHttpInfo(String awemeId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoV2GetValidateBeforeCall(awemeId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据 V2/Get single video data V2 (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据V2 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data V2 ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoV2GetAsync(String awemeId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoV2GetValidateBeforeCall(awemeId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0
     * @param awemeId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0Call(String awemeId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_one_video_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0ValidateBeforeCall(String awemeId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0Call(awemeId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据 V2/Get single video data V2
     * # [中文] ### 用途: - 获取单个作品数据V2 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data V2 ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0(String awemeId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0WithHttpInfo(awemeId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据 V2/Get single video data V2
     * # [中文] ### 用途: - 获取单个作品数据V2 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data V2 ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0WithHttpInfo(String awemeId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0ValidateBeforeCall(awemeId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据 V2/Get single video data V2 (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据V2 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data V2 ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0Async(String awemeId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinWebFetchOneVideoV2Get_0ValidateBeforeCall(awemeId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet
     * @param itemId 作品id/Video id (required)
     * @param duration 视频总时长/Video total duration (required)
     * @param endTime 结束时间/End time (required)
     * @param startTime 开始时间/Start time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGetCall(String itemId, Integer duration, Integer endTime, Integer startTime, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_one_video_danmaku";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (itemId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_id", itemId));
        }

        if (duration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("duration", duration));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("end_time", endTime));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("start_time", startTime));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGetValidateBeforeCall(String itemId, Integer duration, Integer endTime, Integer startTime, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'itemId' is set
        if (itemId == null) {
            throw new ApiException("Missing the required parameter 'itemId' when calling fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet(Async)");
        }
        
        // verify the required parameter 'duration' is set
        if (duration == null) {
            throw new ApiException("Missing the required parameter 'duration' when calling fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet(Async)");
        }
        
        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException("Missing the required parameter 'endTime' when calling fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet(Async)");
        }
        
        // verify the required parameter 'startTime' is set
        if (startTime == null) {
            throw new ApiException("Missing the required parameter 'startTime' when calling fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGetCall(itemId, duration, endTime, startTime, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品视频弹幕数据/Get single video danmaku data
     * # [中文] ### 用途: - 获取单个作品视频弹幕数据 ### 参数: - item_id: 作品id - duration: 视频总时长 - end_time: 结束时间 - start_time: 开始时间 ### 返回: - 视频弹幕数据  # [English] ### Purpose: - Get single video danmaku data ### Parameters: - item_id: Video id - duration: Video total duration - end_time: End time - start_time: Start time ### Return: - Video danmaku data  # [示例/Example] item_id &#x3D; \&quot;7355433624046472498\&quot; duration &#x3D; 15134 end_time &#x3D; 15133 start_time &#x3D; 0
     * @param itemId 作品id/Video id (required)
     * @param duration 视频总时长/Video total duration (required)
     * @param endTime 结束时间/End time (required)
     * @param startTime 开始时间/Start time (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet(String itemId, Integer duration, Integer endTime, Integer startTime) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGetWithHttpInfo(itemId, duration, endTime, startTime);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品视频弹幕数据/Get single video danmaku data
     * # [中文] ### 用途: - 获取单个作品视频弹幕数据 ### 参数: - item_id: 作品id - duration: 视频总时长 - end_time: 结束时间 - start_time: 开始时间 ### 返回: - 视频弹幕数据  # [English] ### Purpose: - Get single video danmaku data ### Parameters: - item_id: Video id - duration: Video total duration - end_time: End time - start_time: Start time ### Return: - Video danmaku data  # [示例/Example] item_id &#x3D; \&quot;7355433624046472498\&quot; duration &#x3D; 15134 end_time &#x3D; 15133 start_time &#x3D; 0
     * @param itemId 作品id/Video id (required)
     * @param duration 视频总时长/Video total duration (required)
     * @param endTime 结束时间/End time (required)
     * @param startTime 开始时间/Start time (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGetWithHttpInfo(String itemId, Integer duration, Integer endTime, Integer startTime) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGetValidateBeforeCall(itemId, duration, endTime, startTime, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品视频弹幕数据/Get single video danmaku data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品视频弹幕数据 ### 参数: - item_id: 作品id - duration: 视频总时长 - end_time: 结束时间 - start_time: 开始时间 ### 返回: - 视频弹幕数据  # [English] ### Purpose: - Get single video danmaku data ### Parameters: - item_id: Video id - duration: Video total duration - end_time: End time - start_time: Start time ### Return: - Video danmaku data  # [示例/Example] item_id &#x3D; \&quot;7355433624046472498\&quot; duration &#x3D; 15134 end_time &#x3D; 15133 start_time &#x3D; 0
     * @param itemId 作品id/Video id (required)
     * @param duration 视频总时长/Video total duration (required)
     * @param endTime 结束时间/End time (required)
     * @param startTime 开始时间/Start time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGetAsync(String itemId, Integer duration, Integer endTime, Integer startTime, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGetValidateBeforeCall(itemId, duration, endTime, startTime, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0
     * @param itemId 作品id/Video id (required)
     * @param duration 视频总时长/Video total duration (required)
     * @param endTime 结束时间/End time (required)
     * @param startTime 开始时间/Start time (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0Call(String itemId, Integer duration, Integer endTime, Integer startTime, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_one_video_danmaku";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (itemId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_id", itemId));
        }

        if (duration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("duration", duration));
        }

        if (endTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("end_time", endTime));
        }

        if (startTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("start_time", startTime));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0ValidateBeforeCall(String itemId, Integer duration, Integer endTime, Integer startTime, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'itemId' is set
        if (itemId == null) {
            throw new ApiException("Missing the required parameter 'itemId' when calling fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0(Async)");
        }
        
        // verify the required parameter 'duration' is set
        if (duration == null) {
            throw new ApiException("Missing the required parameter 'duration' when calling fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0(Async)");
        }
        
        // verify the required parameter 'endTime' is set
        if (endTime == null) {
            throw new ApiException("Missing the required parameter 'endTime' when calling fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0(Async)");
        }
        
        // verify the required parameter 'startTime' is set
        if (startTime == null) {
            throw new ApiException("Missing the required parameter 'startTime' when calling fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0Call(itemId, duration, endTime, startTime, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品视频弹幕数据/Get single video danmaku data
     * # [中文] ### 用途: - 获取单个作品视频弹幕数据 ### 参数: - item_id: 作品id - duration: 视频总时长 - end_time: 结束时间 - start_time: 开始时间 ### 返回: - 视频弹幕数据  # [English] ### Purpose: - Get single video danmaku data ### Parameters: - item_id: Video id - duration: Video total duration - end_time: End time - start_time: Start time ### Return: - Video danmaku data  # [示例/Example] item_id &#x3D; \&quot;7355433624046472498\&quot; duration &#x3D; 15134 end_time &#x3D; 15133 start_time &#x3D; 0
     * @param itemId 作品id/Video id (required)
     * @param duration 视频总时长/Video total duration (required)
     * @param endTime 结束时间/End time (required)
     * @param startTime 开始时间/Start time (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0(String itemId, Integer duration, Integer endTime, Integer startTime) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0WithHttpInfo(itemId, duration, endTime, startTime);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品视频弹幕数据/Get single video danmaku data
     * # [中文] ### 用途: - 获取单个作品视频弹幕数据 ### 参数: - item_id: 作品id - duration: 视频总时长 - end_time: 结束时间 - start_time: 开始时间 ### 返回: - 视频弹幕数据  # [English] ### Purpose: - Get single video danmaku data ### Parameters: - item_id: Video id - duration: Video total duration - end_time: End time - start_time: Start time ### Return: - Video danmaku data  # [示例/Example] item_id &#x3D; \&quot;7355433624046472498\&quot; duration &#x3D; 15134 end_time &#x3D; 15133 start_time &#x3D; 0
     * @param itemId 作品id/Video id (required)
     * @param duration 视频总时长/Video total duration (required)
     * @param endTime 结束时间/End time (required)
     * @param startTime 开始时间/Start time (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0WithHttpInfo(String itemId, Integer duration, Integer endTime, Integer startTime) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0ValidateBeforeCall(itemId, duration, endTime, startTime, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品视频弹幕数据/Get single video danmaku data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品视频弹幕数据 ### 参数: - item_id: 作品id - duration: 视频总时长 - end_time: 结束时间 - start_time: 开始时间 ### 返回: - 视频弹幕数据  # [English] ### Purpose: - Get single video danmaku data ### Parameters: - item_id: Video id - duration: Video total duration - end_time: End time - start_time: Start time ### Return: - Video danmaku data  # [示例/Example] item_id &#x3D; \&quot;7355433624046472498\&quot; duration &#x3D; 15134 end_time &#x3D; 15133 start_time &#x3D; 0
     * @param itemId 作品id/Video id (required)
     * @param duration 视频总时长/Video total duration (required)
     * @param endTime 结束时间/End time (required)
     * @param startTime 开始时间/Start time (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0Async(String itemId, Integer duration, Integer endTime, Integer startTime, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoDanmakuApiV1DouyinWebFetchOneVideoDanmakuGet_0ValidateBeforeCall(itemId, duration, endTime, startTime, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet
     * @param awemeId 作品id/Video id (required)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 1)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGetCall(String awemeId, Integer refreshIndex, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_related_posts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        if (refreshIndex != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("refresh_index", refreshIndex));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGetValidateBeforeCall(String awemeId, Integer refreshIndex, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGetCall(awemeId, refreshIndex, count, _callback);
        return localVarCall;

    }

    /**
     * 获取相关作品推荐数据/Get related posts recommendation data
     * # [中文] ### 用途: - 获取相关作品推荐数据 ### 参数: - aweme_id: 作品id - refresh_index: 翻页索引，默认为1，然后每次增加1用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 作品数据  # [English] ### Purpose: - Get related posts recommendation data ### Parameters: - aweme_id: Video id - refresh_index: Paging index, default is 1, then increase by 1 each time for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7393365489105358132\&quot; refresh_index &#x3D; 1 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 1)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet(String awemeId, Integer refreshIndex, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGetWithHttpInfo(awemeId, refreshIndex, count);
        return localVarResp.getData();
    }

    /**
     * 获取相关作品推荐数据/Get related posts recommendation data
     * # [中文] ### 用途: - 获取相关作品推荐数据 ### 参数: - aweme_id: 作品id - refresh_index: 翻页索引，默认为1，然后每次增加1用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 作品数据  # [English] ### Purpose: - Get related posts recommendation data ### Parameters: - aweme_id: Video id - refresh_index: Paging index, default is 1, then increase by 1 each time for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7393365489105358132\&quot; refresh_index &#x3D; 1 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 1)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGetWithHttpInfo(String awemeId, Integer refreshIndex, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGetValidateBeforeCall(awemeId, refreshIndex, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取相关作品推荐数据/Get related posts recommendation data (asynchronously)
     * # [中文] ### 用途: - 获取相关作品推荐数据 ### 参数: - aweme_id: 作品id - refresh_index: 翻页索引，默认为1，然后每次增加1用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 作品数据  # [English] ### Purpose: - Get related posts recommendation data ### Parameters: - aweme_id: Video id - refresh_index: Paging index, default is 1, then increase by 1 each time for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7393365489105358132\&quot; refresh_index &#x3D; 1 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 1)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGetAsync(String awemeId, Integer refreshIndex, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGetValidateBeforeCall(awemeId, refreshIndex, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0
     * @param awemeId 作品id/Video id (required)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 1)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0Call(String awemeId, Integer refreshIndex, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_related_posts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        if (refreshIndex != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("refresh_index", refreshIndex));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0ValidateBeforeCall(String awemeId, Integer refreshIndex, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0Call(awemeId, refreshIndex, count, _callback);
        return localVarCall;

    }

    /**
     * 获取相关作品推荐数据/Get related posts recommendation data
     * # [中文] ### 用途: - 获取相关作品推荐数据 ### 参数: - aweme_id: 作品id - refresh_index: 翻页索引，默认为1，然后每次增加1用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 作品数据  # [English] ### Purpose: - Get related posts recommendation data ### Parameters: - aweme_id: Video id - refresh_index: Paging index, default is 1, then increase by 1 each time for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7393365489105358132\&quot; refresh_index &#x3D; 1 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 1)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0(String awemeId, Integer refreshIndex, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0WithHttpInfo(awemeId, refreshIndex, count);
        return localVarResp.getData();
    }

    /**
     * 获取相关作品推荐数据/Get related posts recommendation data
     * # [中文] ### 用途: - 获取相关作品推荐数据 ### 参数: - aweme_id: 作品id - refresh_index: 翻页索引，默认为1，然后每次增加1用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 作品数据  # [English] ### Purpose: - Get related posts recommendation data ### Parameters: - aweme_id: Video id - refresh_index: Paging index, default is 1, then increase by 1 each time for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7393365489105358132\&quot; refresh_index &#x3D; 1 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 1)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0WithHttpInfo(String awemeId, Integer refreshIndex, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0ValidateBeforeCall(awemeId, refreshIndex, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取相关作品推荐数据/Get related posts recommendation data (asynchronously)
     * # [中文] ### 用途: - 获取相关作品推荐数据 ### 参数: - aweme_id: 作品id - refresh_index: 翻页索引，默认为1，然后每次增加1用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 作品数据  # [English] ### Purpose: - Get related posts recommendation data ### Parameters: - aweme_id: Video id - refresh_index: Paging index, default is 1, then increase by 1 each time for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7393365489105358132\&quot; refresh_index &#x3D; 1 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param refreshIndex 翻页索引/Paging index (optional, default to 1)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0Async(String awemeId, Integer refreshIndex, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchRelatedPostsApiV1DouyinWebFetchRelatedPostsGet_0ValidateBeforeCall(awemeId, refreshIndex, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 30)
     * @param cookie 用户自行提供的Cookie/User provided Cookie (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGetCall(String keyword, Integer cursor, Integer count, String cookie, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_search_challenge";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (cookie != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cookie", cookie));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGetValidateBeforeCall(String keyword, Integer cursor, Integer count, String cookie, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGetCall(keyword, cursor, count, cookie, _callback);
        return localVarCall;

    }

    /**
     * 搜索话题/Search Challenge
     * # [中文] ### 用途: - 搜索话题，此接口不带Cookie请求时只能获取到前30条数据，建议自行提供Cookie获取更多数据。 - Cookie获取方式：打开网页抖音，登录后，按F12打开开发者工具，点击Network，刷新页面，找到第一个请求，复制Cookie。 ### 参数: - keyword: 关键词 - cursor: 偏移量 - count: 数量 - cookie: 用户自行提供的Cookie，用于获取更多数据。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Search Challenge, when this interface is requested without Cookie, only the first 30 data can be obtained, it is recommended to provide Cookie to get more data. - Cookie acquisition method: Open the Douyin webpage, log in, press F12 to open the developer tool, click Network, refresh the page, find the first request, copy the Cookie. ### Parameters: - keyword: Keyword - cursor: Offset - count: Number - cookie: User provided Cookie, used to get more data. ### Return: - Challenge search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 30)
     * @param cookie 用户自行提供的Cookie/User provided Cookie (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet(String keyword, Integer cursor, Integer count, String cookie) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGetWithHttpInfo(keyword, cursor, count, cookie);
        return localVarResp.getData();
    }

    /**
     * 搜索话题/Search Challenge
     * # [中文] ### 用途: - 搜索话题，此接口不带Cookie请求时只能获取到前30条数据，建议自行提供Cookie获取更多数据。 - Cookie获取方式：打开网页抖音，登录后，按F12打开开发者工具，点击Network，刷新页面，找到第一个请求，复制Cookie。 ### 参数: - keyword: 关键词 - cursor: 偏移量 - count: 数量 - cookie: 用户自行提供的Cookie，用于获取更多数据。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Search Challenge, when this interface is requested without Cookie, only the first 30 data can be obtained, it is recommended to provide Cookie to get more data. - Cookie acquisition method: Open the Douyin webpage, log in, press F12 to open the developer tool, click Network, refresh the page, find the first request, copy the Cookie. ### Parameters: - keyword: Keyword - cursor: Offset - count: Number - cookie: User provided Cookie, used to get more data. ### Return: - Challenge search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 30)
     * @param cookie 用户自行提供的Cookie/User provided Cookie (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGetWithHttpInfo(String keyword, Integer cursor, Integer count, String cookie) throws ApiException {
        okhttp3.Call localVarCall = fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGetValidateBeforeCall(keyword, cursor, count, cookie, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索话题/Search Challenge (asynchronously)
     * # [中文] ### 用途: - 搜索话题，此接口不带Cookie请求时只能获取到前30条数据，建议自行提供Cookie获取更多数据。 - Cookie获取方式：打开网页抖音，登录后，按F12打开开发者工具，点击Network，刷新页面，找到第一个请求，复制Cookie。 ### 参数: - keyword: 关键词 - cursor: 偏移量 - count: 数量 - cookie: 用户自行提供的Cookie，用于获取更多数据。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Search Challenge, when this interface is requested without Cookie, only the first 30 data can be obtained, it is recommended to provide Cookie to get more data. - Cookie acquisition method: Open the Douyin webpage, log in, press F12 to open the developer tool, click Network, refresh the page, find the first request, copy the Cookie. ### Parameters: - keyword: Keyword - cursor: Offset - count: Number - cookie: User provided Cookie, used to get more data. ### Return: - Challenge search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 30)
     * @param cookie 用户自行提供的Cookie/User provided Cookie (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGetAsync(String keyword, Integer cursor, Integer count, String cookie, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGetValidateBeforeCall(keyword, cursor, count, cookie, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 30)
     * @param cookie 用户自行提供的Cookie/User provided Cookie (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0Call(String keyword, Integer cursor, Integer count, String cookie, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_search_challenge";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (cookie != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cookie", cookie));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0ValidateBeforeCall(String keyword, Integer cursor, Integer count, String cookie, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0Call(keyword, cursor, count, cookie, _callback);
        return localVarCall;

    }

    /**
     * 搜索话题/Search Challenge
     * # [中文] ### 用途: - 搜索话题，此接口不带Cookie请求时只能获取到前30条数据，建议自行提供Cookie获取更多数据。 - Cookie获取方式：打开网页抖音，登录后，按F12打开开发者工具，点击Network，刷新页面，找到第一个请求，复制Cookie。 ### 参数: - keyword: 关键词 - cursor: 偏移量 - count: 数量 - cookie: 用户自行提供的Cookie，用于获取更多数据。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Search Challenge, when this interface is requested without Cookie, only the first 30 data can be obtained, it is recommended to provide Cookie to get more data. - Cookie acquisition method: Open the Douyin webpage, log in, press F12 to open the developer tool, click Network, refresh the page, find the first request, copy the Cookie. ### Parameters: - keyword: Keyword - cursor: Offset - count: Number - cookie: User provided Cookie, used to get more data. ### Return: - Challenge search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 30)
     * @param cookie 用户自行提供的Cookie/User provided Cookie (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0(String keyword, Integer cursor, Integer count, String cookie) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0WithHttpInfo(keyword, cursor, count, cookie);
        return localVarResp.getData();
    }

    /**
     * 搜索话题/Search Challenge
     * # [中文] ### 用途: - 搜索话题，此接口不带Cookie请求时只能获取到前30条数据，建议自行提供Cookie获取更多数据。 - Cookie获取方式：打开网页抖音，登录后，按F12打开开发者工具，点击Network，刷新页面，找到第一个请求，复制Cookie。 ### 参数: - keyword: 关键词 - cursor: 偏移量 - count: 数量 - cookie: 用户自行提供的Cookie，用于获取更多数据。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Search Challenge, when this interface is requested without Cookie, only the first 30 data can be obtained, it is recommended to provide Cookie to get more data. - Cookie acquisition method: Open the Douyin webpage, log in, press F12 to open the developer tool, click Network, refresh the page, find the first request, copy the Cookie. ### Parameters: - keyword: Keyword - cursor: Offset - count: Number - cookie: User provided Cookie, used to get more data. ### Return: - Challenge search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 30)
     * @param cookie 用户自行提供的Cookie/User provided Cookie (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0WithHttpInfo(String keyword, Integer cursor, Integer count, String cookie) throws ApiException {
        okhttp3.Call localVarCall = fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0ValidateBeforeCall(keyword, cursor, count, cookie, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索话题/Search Challenge (asynchronously)
     * # [中文] ### 用途: - 搜索话题，此接口不带Cookie请求时只能获取到前30条数据，建议自行提供Cookie获取更多数据。 - Cookie获取方式：打开网页抖音，登录后，按F12打开开发者工具，点击Network，刷新页面，找到第一个请求，复制Cookie。 ### 参数: - keyword: 关键词 - cursor: 偏移量 - count: 数量 - cookie: 用户自行提供的Cookie，用于获取更多数据。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Search Challenge, when this interface is requested without Cookie, only the first 30 data can be obtained, it is recommended to provide Cookie to get more data. - Cookie acquisition method: Open the Douyin webpage, log in, press F12 to open the developer tool, click Network, refresh the page, find the first request, copy the Cookie. ### Parameters: - keyword: Keyword - cursor: Offset - count: Number - cookie: User provided Cookie, used to get more data. ### Return: - Challenge search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 30)
     * @param cookie 用户自行提供的Cookie/User provided Cookie (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0Async(String keyword, Integer cursor, Integer count, String cookie, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchSearchChallengeApiV1DouyinWebFetchSearchChallengeGet_0ValidateBeforeCall(keyword, cursor, count, cookie, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet
     * @param cookie 用户网页版抖音Cookie/Your web version of Douyin Cookie (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGetCall(String cookie, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_collection_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (cookie != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cookie", cookie));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGetValidateBeforeCall(String cookie, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'cookie' is set
        if (cookie == null) {
            throw new ApiException("Missing the required parameter 'cookie' when calling fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGetCall(cookie, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户收藏作品数据/Get user collection video data
     * # [中文] ### 用途: - 获取用户收藏作品数据 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie) - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user collection video data ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie) - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param cookie 用户网页版抖音Cookie/Your web version of Douyin Cookie (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet(String cookie, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGetWithHttpInfo(cookie, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户收藏作品数据/Get user collection video data
     * # [中文] ### 用途: - 获取用户收藏作品数据 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie) - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user collection video data ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie) - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param cookie 用户网页版抖音Cookie/Your web version of Douyin Cookie (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGetWithHttpInfo(String cookie, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGetValidateBeforeCall(cookie, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户收藏作品数据/Get user collection video data (asynchronously)
     * # [中文] ### 用途: - 获取用户收藏作品数据 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie) - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user collection video data ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie) - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param cookie 用户网页版抖音Cookie/Your web version of Douyin Cookie (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGetAsync(String cookie, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGetValidateBeforeCall(cookie, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0
     * @param cookie 用户网页版抖音Cookie/Your web version of Douyin Cookie (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0Call(String cookie, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_collection_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (cookie != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cookie", cookie));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0ValidateBeforeCall(String cookie, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'cookie' is set
        if (cookie == null) {
            throw new ApiException("Missing the required parameter 'cookie' when calling fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0Call(cookie, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户收藏作品数据/Get user collection video data
     * # [中文] ### 用途: - 获取用户收藏作品数据 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie) - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user collection video data ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie) - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param cookie 用户网页版抖音Cookie/Your web version of Douyin Cookie (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0(String cookie, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0WithHttpInfo(cookie, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户收藏作品数据/Get user collection video data
     * # [中文] ### 用途: - 获取用户收藏作品数据 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie) - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user collection video data ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie) - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param cookie 用户网页版抖音Cookie/Your web version of Douyin Cookie (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0WithHttpInfo(String cookie, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0ValidateBeforeCall(cookie, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户收藏作品数据/Get user collection video data (asynchronously)
     * # [中文] ### 用途: - 获取用户收藏作品数据 ### 参数: - cookie: 用户网页版抖音Cookie(此接口需要用户提供自己的Cookie) - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user collection video data ### Parameters: - cookie: User&#39;s web version of Douyin Cookie (This interface requires users to provide their own Cookie) - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] cookie &#x3D; \&quot;YOUR_COOKIE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param cookie 用户网页版抖音Cookie/Your web version of Douyin Cookie (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0Async(String cookie, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserCollectionVideosApiV1DouyinWebFetchUserCollectionVideosGet_0ValidateBeforeCall(cookie, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFansListApiV1DouyinWebFetchUserFansListGet
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFansListApiV1DouyinWebFetchUserFansListGetCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_fans_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_time", maxTime));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFansListApiV1DouyinWebFetchUserFansListGetValidateBeforeCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinWebFetchUserFansListGetCall(secUserId, maxTime, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户粉丝列表/Get user fans list
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFansListApiV1DouyinWebFetchUserFansListGet(String secUserId, String maxTime, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFansListApiV1DouyinWebFetchUserFansListGetWithHttpInfo(secUserId, maxTime, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户粉丝列表/Get user fans list
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFansListApiV1DouyinWebFetchUserFansListGetWithHttpInfo(String secUserId, String maxTime, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinWebFetchUserFansListGetValidateBeforeCall(secUserId, maxTime, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户粉丝列表/Get user fans list (asynchronously)
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFansListApiV1DouyinWebFetchUserFansListGetAsync(String secUserId, String maxTime, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinWebFetchUserFansListGetValidateBeforeCall(secUserId, maxTime, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0Call(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_fans_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_time", maxTime));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0ValidateBeforeCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0Call(secUserId, maxTime, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户粉丝列表/Get user fans list
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0(String secUserId, String maxTime, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0WithHttpInfo(secUserId, maxTime, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户粉丝列表/Get user fans list
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0WithHttpInfo(String secUserId, String maxTime, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0ValidateBeforeCall(secUserId, maxTime, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户粉丝列表/Get user fans list (asynchronously)
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0Async(String secUserId, String maxTime, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinWebFetchUserFansListGet_0ValidateBeforeCall(secUserId, maxTime, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGetCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_following_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_time", maxTime));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGetValidateBeforeCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGetCall(secUserId, maxTime, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户关注列表/Get user following list
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet(String secUserId, String maxTime, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGetWithHttpInfo(secUserId, maxTime, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户关注列表/Get user following list
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGetWithHttpInfo(String secUserId, String maxTime, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGetValidateBeforeCall(secUserId, maxTime, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户关注列表/Get user following list (asynchronously)
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGetAsync(String secUserId, String maxTime, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGetValidateBeforeCall(secUserId, maxTime, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0Call(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_following_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_time", maxTime));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0ValidateBeforeCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0Call(secUserId, maxTime, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户关注列表/Get user following list
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0(String secUserId, String maxTime, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0WithHttpInfo(secUserId, maxTime, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户关注列表/Get user following list
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0WithHttpInfo(String secUserId, String maxTime, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0ValidateBeforeCall(secUserId, maxTime, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户关注列表/Get user following list (asynchronously)
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0Async(String secUserId, String maxTime, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinWebFetchUserFollowingListGet_0ValidateBeforeCall(secUserId, maxTime, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGetCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_like_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGetValidateBeforeCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGetCall(secUserId, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGetWithHttpInfo(secUserId, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGetWithHttpInfo(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGetValidateBeforeCall(secUserId, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data (asynchronously)
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGetAsync(String secUserId, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGetValidateBeforeCall(secUserId, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0Call(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_like_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0ValidateBeforeCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0Call(secUserId, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0WithHttpInfo(secUserId, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0WithHttpInfo(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0ValidateBeforeCall(secUserId, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data (asynchronously)
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0Async(String secUserId, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinWebFetchUserLikeVideosGet_0ValidateBeforeCall(secUserId, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet
     * @param webcastId 直播间webcast_id/Room webcast_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGetCall(String webcastId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_live_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (webcastId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("webcast_id", webcastId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGetValidateBeforeCall(String webcastId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'webcastId' is set
        if (webcastId == null) {
            throw new ApiException("Missing the required parameter 'webcastId' when calling fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGetCall(webcastId, _callback);
        return localVarCall;

    }

    /**
     * 获取用户直播流数据/Get user live video data
     * # [中文] ### 用途: - 获取用户直播流数据 ### 参数: - webcast_id: 直播间webcast_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get user live video data ### Parameters: - webcast_id: Room webcast_id ### Return: - Live stream data  # [示例/Example] webcast_id &#x3D; \&quot;285520721194\&quot;
     * @param webcastId 直播间webcast_id/Room webcast_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet(String webcastId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGetWithHttpInfo(webcastId);
        return localVarResp.getData();
    }

    /**
     * 获取用户直播流数据/Get user live video data
     * # [中文] ### 用途: - 获取用户直播流数据 ### 参数: - webcast_id: 直播间webcast_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get user live video data ### Parameters: - webcast_id: Room webcast_id ### Return: - Live stream data  # [示例/Example] webcast_id &#x3D; \&quot;285520721194\&quot;
     * @param webcastId 直播间webcast_id/Room webcast_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGetWithHttpInfo(String webcastId) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGetValidateBeforeCall(webcastId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户直播流数据/Get user live video data (asynchronously)
     * # [中文] ### 用途: - 获取用户直播流数据 ### 参数: - webcast_id: 直播间webcast_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get user live video data ### Parameters: - webcast_id: Room webcast_id ### Return: - Live stream data  # [示例/Example] webcast_id &#x3D; \&quot;285520721194\&quot;
     * @param webcastId 直播间webcast_id/Room webcast_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGetAsync(String webcastId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGetValidateBeforeCall(webcastId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0
     * @param webcastId 直播间webcast_id/Room webcast_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0Call(String webcastId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_live_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (webcastId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("webcast_id", webcastId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0ValidateBeforeCall(String webcastId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'webcastId' is set
        if (webcastId == null) {
            throw new ApiException("Missing the required parameter 'webcastId' when calling fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0Call(webcastId, _callback);
        return localVarCall;

    }

    /**
     * 获取用户直播流数据/Get user live video data
     * # [中文] ### 用途: - 获取用户直播流数据 ### 参数: - webcast_id: 直播间webcast_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get user live video data ### Parameters: - webcast_id: Room webcast_id ### Return: - Live stream data  # [示例/Example] webcast_id &#x3D; \&quot;285520721194\&quot;
     * @param webcastId 直播间webcast_id/Room webcast_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0(String webcastId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0WithHttpInfo(webcastId);
        return localVarResp.getData();
    }

    /**
     * 获取用户直播流数据/Get user live video data
     * # [中文] ### 用途: - 获取用户直播流数据 ### 参数: - webcast_id: 直播间webcast_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get user live video data ### Parameters: - webcast_id: Room webcast_id ### Return: - Live stream data  # [示例/Example] webcast_id &#x3D; \&quot;285520721194\&quot;
     * @param webcastId 直播间webcast_id/Room webcast_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0WithHttpInfo(String webcastId) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0ValidateBeforeCall(webcastId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户直播流数据/Get user live video data (asynchronously)
     * # [中文] ### 用途: - 获取用户直播流数据 ### 参数: - webcast_id: 直播间webcast_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get user live video data ### Parameters: - webcast_id: Room webcast_id ### Return: - Live stream data  # [示例/Example] webcast_id &#x3D; \&quot;285520721194\&quot;
     * @param webcastId 直播间webcast_id/Room webcast_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0Async(String webcastId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLiveVideosApiV1DouyinWebFetchUserLiveVideosGet_0ValidateBeforeCall(webcastId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet
     * @param roomId 直播间room_id/Room room_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGetCall(String roomId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_live_videos_by_room_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGetValidateBeforeCall(String roomId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGetCall(roomId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的直播流数据/Get live video data of specified user
     * # [中文] ### 用途: - 获取指定用户的直播流数据 ### 参数: - room_id: 直播间room_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get live video data of specified user ### Parameters: - room_id: Room room_id ### Return: - Live stream data  # [示例/Example] room_id &#x3D; \&quot;7318296342189919011\&quot;
     * @param roomId 直播间room_id/Room room_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet(String roomId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGetWithHttpInfo(roomId);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的直播流数据/Get live video data of specified user
     * # [中文] ### 用途: - 获取指定用户的直播流数据 ### 参数: - room_id: 直播间room_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get live video data of specified user ### Parameters: - room_id: Room room_id ### Return: - Live stream data  # [示例/Example] room_id &#x3D; \&quot;7318296342189919011\&quot;
     * @param roomId 直播间room_id/Room room_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGetWithHttpInfo(String roomId) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGetValidateBeforeCall(roomId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的直播流数据/Get live video data of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的直播流数据 ### 参数: - room_id: 直播间room_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get live video data of specified user ### Parameters: - room_id: Room room_id ### Return: - Live stream data  # [示例/Example] room_id &#x3D; \&quot;7318296342189919011\&quot;
     * @param roomId 直播间room_id/Room room_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGetAsync(String roomId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGetValidateBeforeCall(roomId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0
     * @param roomId 直播间room_id/Room room_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0Call(String roomId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_live_videos_by_room_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0ValidateBeforeCall(String roomId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0Call(roomId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的直播流数据/Get live video data of specified user
     * # [中文] ### 用途: - 获取指定用户的直播流数据 ### 参数: - room_id: 直播间room_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get live video data of specified user ### Parameters: - room_id: Room room_id ### Return: - Live stream data  # [示例/Example] room_id &#x3D; \&quot;7318296342189919011\&quot;
     * @param roomId 直播间room_id/Room room_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0(String roomId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0WithHttpInfo(roomId);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的直播流数据/Get live video data of specified user
     * # [中文] ### 用途: - 获取指定用户的直播流数据 ### 参数: - room_id: 直播间room_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get live video data of specified user ### Parameters: - room_id: Room room_id ### Return: - Live stream data  # [示例/Example] room_id &#x3D; \&quot;7318296342189919011\&quot;
     * @param roomId 直播间room_id/Room room_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0WithHttpInfo(String roomId) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0ValidateBeforeCall(roomId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的直播流数据/Get live video data of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的直播流数据 ### 参数: - room_id: 直播间room_id ### 返回: - 直播流数据  # [English] ### Purpose: - Get live video data of specified user ### Parameters: - room_id: Room room_id ### Return: - Live stream data  # [示例/Example] room_id &#x3D; \&quot;7318296342189919011\&quot;
     * @param roomId 直播间room_id/Room room_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0Async(String roomId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLiveVideosByRoomIdApiV1DouyinWebFetchUserLiveVideosByRoomIdGet_0ValidateBeforeCall(roomId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet
     * @param mixId 合辑id/Mix id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGetCall(String mixId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_mix_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (mixId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mix_id", mixId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGetValidateBeforeCall(String mixId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mixId' is set
        if (mixId == null) {
            throw new ApiException("Missing the required parameter 'mixId' when calling fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGetCall(mixId, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户合辑作品数据/Get user mix video data
     * # [中文] ### 用途: - 获取用户合辑作品数据 ### 参数: - mix_id: 合辑id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user mix video data ### Parameters: - mix_id: Mix id - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] url &#x3D; https://www.douyin.com/collection/7348687990509553679 mix_id &#x3D; \&quot;7348687990509553679\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param mixId 合辑id/Mix id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet(String mixId, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGetWithHttpInfo(mixId, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户合辑作品数据/Get user mix video data
     * # [中文] ### 用途: - 获取用户合辑作品数据 ### 参数: - mix_id: 合辑id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user mix video data ### Parameters: - mix_id: Mix id - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] url &#x3D; https://www.douyin.com/collection/7348687990509553679 mix_id &#x3D; \&quot;7348687990509553679\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param mixId 合辑id/Mix id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGetWithHttpInfo(String mixId, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGetValidateBeforeCall(mixId, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户合辑作品数据/Get user mix video data (asynchronously)
     * # [中文] ### 用途: - 获取用户合辑作品数据 ### 参数: - mix_id: 合辑id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user mix video data ### Parameters: - mix_id: Mix id - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] url &#x3D; https://www.douyin.com/collection/7348687990509553679 mix_id &#x3D; \&quot;7348687990509553679\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param mixId 合辑id/Mix id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGetAsync(String mixId, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGetValidateBeforeCall(mixId, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0
     * @param mixId 合辑id/Mix id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0Call(String mixId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_mix_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (mixId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mix_id", mixId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0ValidateBeforeCall(String mixId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mixId' is set
        if (mixId == null) {
            throw new ApiException("Missing the required parameter 'mixId' when calling fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0Call(mixId, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户合辑作品数据/Get user mix video data
     * # [中文] ### 用途: - 获取用户合辑作品数据 ### 参数: - mix_id: 合辑id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user mix video data ### Parameters: - mix_id: Mix id - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] url &#x3D; https://www.douyin.com/collection/7348687990509553679 mix_id &#x3D; \&quot;7348687990509553679\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param mixId 合辑id/Mix id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0(String mixId, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0WithHttpInfo(mixId, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户合辑作品数据/Get user mix video data
     * # [中文] ### 用途: - 获取用户合辑作品数据 ### 参数: - mix_id: 合辑id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user mix video data ### Parameters: - mix_id: Mix id - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] url &#x3D; https://www.douyin.com/collection/7348687990509553679 mix_id &#x3D; \&quot;7348687990509553679\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param mixId 合辑id/Mix id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0WithHttpInfo(String mixId, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0ValidateBeforeCall(mixId, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户合辑作品数据/Get user mix video data (asynchronously)
     * # [中文] ### 用途: - 获取用户合辑作品数据 ### 参数: - mix_id: 合辑id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user mix video data ### Parameters: - mix_id: Mix id - max_cursor: Maximum cursor - count: Maximum number ### Return: - User video data  # [示例/Example] url &#x3D; https://www.douyin.com/collection/7348687990509553679 mix_id &#x3D; \&quot;7348687990509553679\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param mixId 合辑id/Mix id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0Async(String mixId, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserMixVideosApiV1DouyinWebFetchUserMixVideosGet_0ValidateBeforeCall(mixId, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGetCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_post_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGetValidateBeforeCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGetCall(secUserId, maxCursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 - 注意：请尽量使用APP的接口而不是WEB的接口，因为WEB的接口可能会被不稳定。 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data - Note: Please try to use the APP interface instead of the WEB API, because the WEB API may be unstable. ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGetWithHttpInfo(secUserId, maxCursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 - 注意：请尽量使用APP的接口而不是WEB的接口，因为WEB的接口可能会被不稳定。 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data - Note: Please try to use the APP interface instead of the WEB API, because the WEB API may be unstable. ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGetWithHttpInfo(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGetValidateBeforeCall(secUserId, maxCursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data (asynchronously)
     * # [中文] ### 用途: - 获取用户主页作品数据 - 注意：请尽量使用APP的接口而不是WEB的接口，因为WEB的接口可能会被不稳定。 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data - Note: Please try to use the APP interface instead of the WEB API, because the WEB API may be unstable. ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGetAsync(String secUserId, Integer maxCursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGetValidateBeforeCall(secUserId, maxCursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0Call(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_post_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0ValidateBeforeCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0Call(secUserId, maxCursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 - 注意：请尽量使用APP的接口而不是WEB的接口，因为WEB的接口可能会被不稳定。 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data - Note: Please try to use the APP interface instead of the WEB API, because the WEB API may be unstable. ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0WithHttpInfo(secUserId, maxCursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 - 注意：请尽量使用APP的接口而不是WEB的接口，因为WEB的接口可能会被不稳定。 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data - Note: Please try to use the APP interface instead of the WEB API, because the WEB API may be unstable. ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0WithHttpInfo(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0ValidateBeforeCall(secUserId, maxCursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data (asynchronously)
     * # [中文] ### 用途: - 获取用户主页作品数据 - 注意：请尽量使用APP的接口而不是WEB的接口，因为WEB的接口可能会被不稳定。 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data - Note: Please try to use the APP interface instead of the WEB API, because the WEB API may be unstable. ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0Async(String secUserId, Integer maxCursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinWebFetchUserPostVideosGet_0ValidateBeforeCall(secUserId, maxCursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGetCall(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (douyinUserFans != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("douyin_user_fans", douyinUserFans));
        }

        if (douyinUserType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("douyin_user_type", douyinUserType));
        }

        if (searchId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_id", searchId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGetCall(keyword, offset, count, douyinUserFans, douyinUserType, searchId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - douyin_user_fans: 留空:不限, \&quot;0_1k\&quot;: 1000以下, \&quot;1k_1w\&quot;: 1000-1万, \&quot;1w_10w\&quot;: 1w-10w, \&quot;10w_100w\&quot;: 10w-100w，\&quot;100w_\&quot;: 100w以上 - douyin_user_type: 留空:不限, \&quot;common_user\&quot;: 普通用户, \&quot;enterprise_user\&quot;: 企业认证, \&quot;personal_user\&quot;: 个人认证 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - douyin_user_fans: Leave blank: Unlimited, \&quot;0_1k\&quot;: Below 1000, \&quot;1k_1w\&quot;: 1000-10,000, \&quot;1w_10w\&quot;: 10,000-100,000, \&quot;10w_100w\&quot;: 100,000-1 million, \&quot;100w_\&quot;: More than 1 million - douyin_user_type: Leave blank: Unlimited, \&quot;common_user\&quot;: Ordinary user, \&quot;enterprise_user\&quot;: Enterprise certification, \&quot;personal_user\&quot;: Personal certification - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20 douyin_user_fans &#x3D; \&quot;\&quot; douyin_user_type &#x3D; \&quot;\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGetWithHttpInfo(keyword, offset, count, douyinUserFans, douyinUserType, searchId);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - douyin_user_fans: 留空:不限, \&quot;0_1k\&quot;: 1000以下, \&quot;1k_1w\&quot;: 1000-1万, \&quot;1w_10w\&quot;: 1w-10w, \&quot;10w_100w\&quot;: 10w-100w，\&quot;100w_\&quot;: 100w以上 - douyin_user_type: 留空:不限, \&quot;common_user\&quot;: 普通用户, \&quot;enterprise_user\&quot;: 企业认证, \&quot;personal_user\&quot;: 个人认证 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - douyin_user_fans: Leave blank: Unlimited, \&quot;0_1k\&quot;: Below 1000, \&quot;1k_1w\&quot;: 1000-10,000, \&quot;1w_10w\&quot;: 10,000-100,000, \&quot;10w_100w\&quot;: 100,000-1 million, \&quot;100w_\&quot;: More than 1 million - douyin_user_type: Leave blank: Unlimited, \&quot;common_user\&quot;: Ordinary user, \&quot;enterprise_user\&quot;: Enterprise certification, \&quot;personal_user\&quot;: Personal certification - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20 douyin_user_fans &#x3D; \&quot;\&quot; douyin_user_type &#x3D; \&quot;\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId) throws ApiException {
        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGetValidateBeforeCall(keyword, offset, count, douyinUserFans, douyinUserType, searchId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - douyin_user_fans: 留空:不限, \&quot;0_1k\&quot;: 1000以下, \&quot;1k_1w\&quot;: 1000-1万, \&quot;1w_10w\&quot;: 1w-10w, \&quot;10w_100w\&quot;: 10w-100w，\&quot;100w_\&quot;: 100w以上 - douyin_user_type: 留空:不限, \&quot;common_user\&quot;: 普通用户, \&quot;enterprise_user\&quot;: 企业认证, \&quot;personal_user\&quot;: 个人认证 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - douyin_user_fans: Leave blank: Unlimited, \&quot;0_1k\&quot;: Below 1000, \&quot;1k_1w\&quot;: 1000-10,000, \&quot;1w_10w\&quot;: 10,000-100,000, \&quot;10w_100w\&quot;: 100,000-1 million, \&quot;100w_\&quot;: More than 1 million - douyin_user_type: Leave blank: Unlimited, \&quot;common_user\&quot;: Ordinary user, \&quot;enterprise_user\&quot;: Enterprise certification, \&quot;personal_user\&quot;: Personal certification - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20 douyin_user_fans &#x3D; \&quot;\&quot; douyin_user_type &#x3D; \&quot;\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGetAsync(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGetValidateBeforeCall(keyword, offset, count, douyinUserFans, douyinUserType, searchId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0Call(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (douyinUserFans != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("douyin_user_fans", douyinUserFans));
        }

        if (douyinUserType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("douyin_user_type", douyinUserType));
        }

        if (searchId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_id", searchId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0Call(keyword, offset, count, douyinUserFans, douyinUserType, searchId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - douyin_user_fans: 留空:不限, \&quot;0_1k\&quot;: 1000以下, \&quot;1k_1w\&quot;: 1000-1万, \&quot;1w_10w\&quot;: 1w-10w, \&quot;10w_100w\&quot;: 10w-100w，\&quot;100w_\&quot;: 100w以上 - douyin_user_type: 留空:不限, \&quot;common_user\&quot;: 普通用户, \&quot;enterprise_user\&quot;: 企业认证, \&quot;personal_user\&quot;: 个人认证 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - douyin_user_fans: Leave blank: Unlimited, \&quot;0_1k\&quot;: Below 1000, \&quot;1k_1w\&quot;: 1000-10,000, \&quot;1w_10w\&quot;: 10,000-100,000, \&quot;10w_100w\&quot;: 100,000-1 million, \&quot;100w_\&quot;: More than 1 million - douyin_user_type: Leave blank: Unlimited, \&quot;common_user\&quot;: Ordinary user, \&quot;enterprise_user\&quot;: Enterprise certification, \&quot;personal_user\&quot;: Personal certification - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20 douyin_user_fans &#x3D; \&quot;\&quot; douyin_user_type &#x3D; \&quot;\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0WithHttpInfo(keyword, offset, count, douyinUserFans, douyinUserType, searchId);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - douyin_user_fans: 留空:不限, \&quot;0_1k\&quot;: 1000以下, \&quot;1k_1w\&quot;: 1000-1万, \&quot;1w_10w\&quot;: 1w-10w, \&quot;10w_100w\&quot;: 10w-100w，\&quot;100w_\&quot;: 100w以上 - douyin_user_type: 留空:不限, \&quot;common_user\&quot;: 普通用户, \&quot;enterprise_user\&quot;: 企业认证, \&quot;personal_user\&quot;: 个人认证 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - douyin_user_fans: Leave blank: Unlimited, \&quot;0_1k\&quot;: Below 1000, \&quot;1k_1w\&quot;: 1000-10,000, \&quot;1w_10w\&quot;: 10,000-100,000, \&quot;10w_100w\&quot;: 100,000-1 million, \&quot;100w_\&quot;: More than 1 million - douyin_user_type: Leave blank: Unlimited, \&quot;common_user\&quot;: Ordinary user, \&quot;enterprise_user\&quot;: Enterprise certification, \&quot;personal_user\&quot;: Personal certification - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20 douyin_user_fans &#x3D; \&quot;\&quot; douyin_user_type &#x3D; \&quot;\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId) throws ApiException {
        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0ValidateBeforeCall(keyword, offset, count, douyinUserFans, douyinUserType, searchId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - douyin_user_fans: 留空:不限, \&quot;0_1k\&quot;: 1000以下, \&quot;1k_1w\&quot;: 1000-1万, \&quot;1w_10w\&quot;: 1w-10w, \&quot;10w_100w\&quot;: 10w-100w，\&quot;100w_\&quot;: 100w以上 - douyin_user_type: 留空:不限, \&quot;common_user\&quot;: 普通用户, \&quot;enterprise_user\&quot;: 企业认证, \&quot;personal_user\&quot;: 个人认证 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - douyin_user_fans: Leave blank: Unlimited, \&quot;0_1k\&quot;: Below 1000, \&quot;1k_1w\&quot;: 1000-10,000, \&quot;1w_10w\&quot;: 10,000-100,000, \&quot;10w_100w\&quot;: 100,000-1 million, \&quot;100w_\&quot;: More than 1 million - douyin_user_type: Leave blank: Unlimited, \&quot;common_user\&quot;: Ordinary user, \&quot;enterprise_user\&quot;: Enterprise certification, \&quot;personal_user\&quot;: Personal certification - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20 douyin_user_fans &#x3D; \&quot;\&quot; douyin_user_type &#x3D; \&quot;\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0Async(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, String searchId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinWebFetchUserSearchResultGet_0ValidateBeforeCall(keyword, offset, count, douyinUserFans, douyinUserType, searchId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get
     * @param keyword 关键词/Keyword (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2GetCall(String keyword, Integer cursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_search_result_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2GetValidateBeforeCall(String keyword, Integer cursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2GetCall(keyword, cursor, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的用户搜索结果V2/Get user search results of specified keywords V2
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果V2 ### 参数: - keyword: 关键词 - cursor: 游标，第一次请求时为0，后续从返回数据中获取，用于翻页。 ### 返回: - 用户搜索结果V2  # [English] ### Purpose: - Get user search results of specified keywords V2 ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - User search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; cursor &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get(String keyword, Integer cursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2GetWithHttpInfo(keyword, cursor);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的用户搜索结果V2/Get user search results of specified keywords V2
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果V2 ### 参数: - keyword: 关键词 - cursor: 游标，第一次请求时为0，后续从返回数据中获取，用于翻页。 ### 返回: - 用户搜索结果V2  # [English] ### Purpose: - Get user search results of specified keywords V2 ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - User search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; cursor &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2GetWithHttpInfo(String keyword, Integer cursor) throws ApiException {
        okhttp3.Call localVarCall = fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2GetValidateBeforeCall(keyword, cursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的用户搜索结果V2/Get user search results of specified keywords V2 (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果V2 ### 参数: - keyword: 关键词 - cursor: 游标，第一次请求时为0，后续从返回数据中获取，用于翻页。 ### 返回: - 用户搜索结果V2  # [English] ### Purpose: - Get user search results of specified keywords V2 ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - User search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; cursor &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2GetAsync(String keyword, Integer cursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2GetValidateBeforeCall(keyword, cursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0Call(String keyword, Integer cursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_user_search_result_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0ValidateBeforeCall(String keyword, Integer cursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0Call(keyword, cursor, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的用户搜索结果V2/Get user search results of specified keywords V2
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果V2 ### 参数: - keyword: 关键词 - cursor: 游标，第一次请求时为0，后续从返回数据中获取，用于翻页。 ### 返回: - 用户搜索结果V2  # [English] ### Purpose: - Get user search results of specified keywords V2 ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - User search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; cursor &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0(String keyword, Integer cursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0WithHttpInfo(keyword, cursor);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的用户搜索结果V2/Get user search results of specified keywords V2
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果V2 ### 参数: - keyword: 关键词 - cursor: 游标，第一次请求时为0，后续从返回数据中获取，用于翻页。 ### 返回: - 用户搜索结果V2  # [English] ### Purpose: - Get user search results of specified keywords V2 ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - User search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; cursor &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0WithHttpInfo(String keyword, Integer cursor) throws ApiException {
        okhttp3.Call localVarCall = fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0ValidateBeforeCall(keyword, cursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的用户搜索结果V2/Get user search results of specified keywords V2 (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果V2 ### 参数: - keyword: 关键词 - cursor: 游标，第一次请求时为0，后续从返回数据中获取，用于翻页。 ### 返回: - 用户搜索结果V2  # [English] ### Purpose: - Get user search results of specified keywords V2 ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - User search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; cursor &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0Async(String keyword, Integer cursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserSearchResultV2ApiV1DouyinWebFetchUserSearchResultV2Get_0ValidateBeforeCall(keyword, cursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet
     * @param tagId 标签id/Tag id (required)
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 刷新索引/Refresh index (optional, default to 1)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGetCall(Integer tagId, Integer count, Integer refreshIndex, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_channel_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (tagId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tag_id", tagId));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (refreshIndex != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("refresh_index", refreshIndex));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGetValidateBeforeCall(Integer tagId, Integer count, Integer refreshIndex, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'tagId' is set
        if (tagId == null) {
            throw new ApiException("Missing the required parameter 'tagId' when calling fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGetCall(tagId, count, refreshIndex, _callback);
        return localVarCall;

    }

    /**
     * 抖音视频频道数据/Douyin video channel data
     * # [中文] ### 用途: - 抖音视频频道数据 ### 参数: - tag_id: 标签id - count: 数量 - refresh_index: 刷新索引 ### 返回: - 视频频道数据  # [English] ### Purpose: - Douyin video channel data ### Parameters: - tag_id: Tag id - count: Number - refresh_index: Refresh index ### Return: - Video channel data  # [示例/Example] tag_id &#x3D; 300203 count &#x3D; 10 refresh_index &#x3D; 1
     * @param tagId 标签id/Tag id (required)
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 刷新索引/Refresh index (optional, default to 1)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet(Integer tagId, Integer count, Integer refreshIndex) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGetWithHttpInfo(tagId, count, refreshIndex);
        return localVarResp.getData();
    }

    /**
     * 抖音视频频道数据/Douyin video channel data
     * # [中文] ### 用途: - 抖音视频频道数据 ### 参数: - tag_id: 标签id - count: 数量 - refresh_index: 刷新索引 ### 返回: - 视频频道数据  # [English] ### Purpose: - Douyin video channel data ### Parameters: - tag_id: Tag id - count: Number - refresh_index: Refresh index ### Return: - Video channel data  # [示例/Example] tag_id &#x3D; 300203 count &#x3D; 10 refresh_index &#x3D; 1
     * @param tagId 标签id/Tag id (required)
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 刷新索引/Refresh index (optional, default to 1)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGetWithHttpInfo(Integer tagId, Integer count, Integer refreshIndex) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGetValidateBeforeCall(tagId, count, refreshIndex, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 抖音视频频道数据/Douyin video channel data (asynchronously)
     * # [中文] ### 用途: - 抖音视频频道数据 ### 参数: - tag_id: 标签id - count: 数量 - refresh_index: 刷新索引 ### 返回: - 视频频道数据  # [English] ### Purpose: - Douyin video channel data ### Parameters: - tag_id: Tag id - count: Number - refresh_index: Refresh index ### Return: - Video channel data  # [示例/Example] tag_id &#x3D; 300203 count &#x3D; 10 refresh_index &#x3D; 1
     * @param tagId 标签id/Tag id (required)
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 刷新索引/Refresh index (optional, default to 1)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGetAsync(Integer tagId, Integer count, Integer refreshIndex, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGetValidateBeforeCall(tagId, count, refreshIndex, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0
     * @param tagId 标签id/Tag id (required)
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 刷新索引/Refresh index (optional, default to 1)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0Call(Integer tagId, Integer count, Integer refreshIndex, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_channel_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (tagId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tag_id", tagId));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (refreshIndex != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("refresh_index", refreshIndex));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0ValidateBeforeCall(Integer tagId, Integer count, Integer refreshIndex, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'tagId' is set
        if (tagId == null) {
            throw new ApiException("Missing the required parameter 'tagId' when calling fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0Call(tagId, count, refreshIndex, _callback);
        return localVarCall;

    }

    /**
     * 抖音视频频道数据/Douyin video channel data
     * # [中文] ### 用途: - 抖音视频频道数据 ### 参数: - tag_id: 标签id - count: 数量 - refresh_index: 刷新索引 ### 返回: - 视频频道数据  # [English] ### Purpose: - Douyin video channel data ### Parameters: - tag_id: Tag id - count: Number - refresh_index: Refresh index ### Return: - Video channel data  # [示例/Example] tag_id &#x3D; 300203 count &#x3D; 10 refresh_index &#x3D; 1
     * @param tagId 标签id/Tag id (required)
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 刷新索引/Refresh index (optional, default to 1)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0(Integer tagId, Integer count, Integer refreshIndex) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0WithHttpInfo(tagId, count, refreshIndex);
        return localVarResp.getData();
    }

    /**
     * 抖音视频频道数据/Douyin video channel data
     * # [中文] ### 用途: - 抖音视频频道数据 ### 参数: - tag_id: 标签id - count: 数量 - refresh_index: 刷新索引 ### 返回: - 视频频道数据  # [English] ### Purpose: - Douyin video channel data ### Parameters: - tag_id: Tag id - count: Number - refresh_index: Refresh index ### Return: - Video channel data  # [示例/Example] tag_id &#x3D; 300203 count &#x3D; 10 refresh_index &#x3D; 1
     * @param tagId 标签id/Tag id (required)
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 刷新索引/Refresh index (optional, default to 1)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0WithHttpInfo(Integer tagId, Integer count, Integer refreshIndex) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0ValidateBeforeCall(tagId, count, refreshIndex, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 抖音视频频道数据/Douyin video channel data (asynchronously)
     * # [中文] ### 用途: - 抖音视频频道数据 ### 参数: - tag_id: 标签id - count: 数量 - refresh_index: 刷新索引 ### 返回: - 视频频道数据  # [English] ### Purpose: - Douyin video channel data ### Parameters: - tag_id: Tag id - count: Number - refresh_index: Refresh index ### Return: - Video channel data  # [示例/Example] tag_id &#x3D; 300203 count &#x3D; 10 refresh_index &#x3D; 1
     * @param tagId 标签id/Tag id (required)
     * @param count 数量/Number (optional, default to 10)
     * @param refreshIndex 刷新索引/Refresh index (optional, default to 1)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0Async(Integer tagId, Integer count, Integer refreshIndex, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoChannelResultApiV1DouyinWebFetchVideoChannelResultGet_0ValidateBeforeCall(tagId, count, refreshIndex, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGetCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGetValidateBeforeCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGetCall(awemeId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet(String awemeId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGetWithHttpInfo(awemeId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGetWithHttpInfo(String awemeId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGetValidateBeforeCall(awemeId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个视频评论数据/Get single video comments data (asynchronously)
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGetAsync(String awemeId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGetValidateBeforeCall(awemeId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0Call(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0ValidateBeforeCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0Call(awemeId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0(String awemeId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0WithHttpInfo(awemeId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0WithHttpInfo(String awemeId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0ValidateBeforeCall(awemeId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个视频评论数据/Get single video comments data (asynchronously)
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0Async(String awemeId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinWebFetchVideoCommentsGet_0ValidateBeforeCall(awemeId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGetCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_comment_replies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (itemId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_id", itemId));
        }

        if (commentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("comment_id", commentId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGetValidateBeforeCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'itemId' is set
        if (itemId == null) {
            throw new ApiException("Missing the required parameter 'itemId' when calling fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet(Async)");
        }
        
        // verify the required parameter 'commentId' is set
        if (commentId == null) {
            throw new ApiException("Missing the required parameter 'commentId' when calling fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGetCall(itemId, commentId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGetWithHttpInfo(itemId, commentId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGetWithHttpInfo(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGetValidateBeforeCall(itemId, commentId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video (asynchronously)
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGetAsync(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGetValidateBeforeCall(itemId, commentId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0Call(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_comment_replies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (itemId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_id", itemId));
        }

        if (commentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("comment_id", commentId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0ValidateBeforeCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'itemId' is set
        if (itemId == null) {
            throw new ApiException("Missing the required parameter 'itemId' when calling fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0(Async)");
        }
        
        // verify the required parameter 'commentId' is set
        if (commentId == null) {
            throw new ApiException("Missing the required parameter 'commentId' when calling fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0Call(itemId, commentId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0WithHttpInfo(itemId, commentId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0WithHttpInfo(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0ValidateBeforeCall(itemId, commentId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video (asynchronously)
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0Async(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinWebFetchVideoCommentRepliesGet_0ValidateBeforeCall(itemId, commentId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGetCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        if (filterDuration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_duration", filterDuration));
        }

        if (searchId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_id", searchId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGetCall(keyword, offset, count, sortType, publishTime, filterDuration, searchId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量，第一次请求时为0，后续从返回数据中获取，用于翻页。     - 例如: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: 数量，默认为10，建议保持不变。 - sort_type:     - 0:综合排序     - 1:最多点赞     - 2:最新发布 - publish_time:     - 0:不限     - 1:最近一天     - 7:最近一周     - 180:最近半年 - filter_duration:     - 0:不限 0-1:1分钟以内     - 1-5:1-5分钟     - 5-10000:5分钟以上 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset, 0 for the first request, get from the returned data later, used for paging.     - For example: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: Number, default is 10, it is recommended to keep it unchanged. - sort_type:     - 0: Comprehensive sorting     - 1: Most likes     - 2: Latest release - publish_time:     - 0: Unlimited     - 1: Last day     - 7: Last week     - 180: Last half year - filter_duration:     - 0: Unlimited     - 0-1: Within 1 minute     - 1-5: 1-5 minutes     - 5-10000: More than 5 minutes - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;游戏\&quot; offset &#x3D; 0 count &#x3D; 10 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGetWithHttpInfo(keyword, offset, count, sortType, publishTime, filterDuration, searchId);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量，第一次请求时为0，后续从返回数据中获取，用于翻页。     - 例如: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: 数量，默认为10，建议保持不变。 - sort_type:     - 0:综合排序     - 1:最多点赞     - 2:最新发布 - publish_time:     - 0:不限     - 1:最近一天     - 7:最近一周     - 180:最近半年 - filter_duration:     - 0:不限 0-1:1分钟以内     - 1-5:1-5分钟     - 5-10000:5分钟以上 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset, 0 for the first request, get from the returned data later, used for paging.     - For example: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: Number, default is 10, it is recommended to keep it unchanged. - sort_type:     - 0: Comprehensive sorting     - 1: Most likes     - 2: Latest release - publish_time:     - 0: Unlimited     - 1: Last day     - 7: Last week     - 180: Last half year - filter_duration:     - 0: Unlimited     - 0-1: Within 1 minute     - 1-5: 1-5 minutes     - 5-10000: More than 5 minutes - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;游戏\&quot; offset &#x3D; 0 count &#x3D; 10 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, searchId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量，第一次请求时为0，后续从返回数据中获取，用于翻页。     - 例如: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: 数量，默认为10，建议保持不变。 - sort_type:     - 0:综合排序     - 1:最多点赞     - 2:最新发布 - publish_time:     - 0:不限     - 1:最近一天     - 7:最近一周     - 180:最近半年 - filter_duration:     - 0:不限 0-1:1分钟以内     - 1-5:1-5分钟     - 5-10000:5分钟以上 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset, 0 for the first request, get from the returned data later, used for paging.     - For example: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: Number, default is 10, it is recommended to keep it unchanged. - sort_type:     - 0: Comprehensive sorting     - 1: Most likes     - 2: Latest release - publish_time:     - 0: Unlimited     - 1: Last day     - 7: Last week     - 180: Last half year - filter_duration:     - 0: Unlimited     - 0-1: Within 1 minute     - 1-5: 1-5 minutes     - 5-10000: More than 5 minutes - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;游戏\&quot; offset &#x3D; 0 count &#x3D; 10 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGetAsync(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, searchId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0Call(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        if (filterDuration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_duration", filterDuration));
        }

        if (searchId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("search_id", searchId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0Call(keyword, offset, count, sortType, publishTime, filterDuration, searchId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量，第一次请求时为0，后续从返回数据中获取，用于翻页。     - 例如: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: 数量，默认为10，建议保持不变。 - sort_type:     - 0:综合排序     - 1:最多点赞     - 2:最新发布 - publish_time:     - 0:不限     - 1:最近一天     - 7:最近一周     - 180:最近半年 - filter_duration:     - 0:不限 0-1:1分钟以内     - 1-5:1-5分钟     - 5-10000:5分钟以上 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset, 0 for the first request, get from the returned data later, used for paging.     - For example: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: Number, default is 10, it is recommended to keep it unchanged. - sort_type:     - 0: Comprehensive sorting     - 1: Most likes     - 2: Latest release - publish_time:     - 0: Unlimited     - 1: Last day     - 7: Last week     - 180: Last half year - filter_duration:     - 0: Unlimited     - 0-1: Within 1 minute     - 1-5: 1-5 minutes     - 5-10000: More than 5 minutes - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;游戏\&quot; offset &#x3D; 0 count &#x3D; 10 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0WithHttpInfo(keyword, offset, count, sortType, publishTime, filterDuration, searchId);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量，第一次请求时为0，后续从返回数据中获取，用于翻页。     - 例如: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: 数量，默认为10，建议保持不变。 - sort_type:     - 0:综合排序     - 1:最多点赞     - 2:最新发布 - publish_time:     - 0:不限     - 1:最近一天     - 7:最近一周     - 180:最近半年 - filter_duration:     - 0:不限 0-1:1分钟以内     - 1-5:1-5分钟     - 5-10000:5分钟以上 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset, 0 for the first request, get from the returned data later, used for paging.     - For example: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: Number, default is 10, it is recommended to keep it unchanged. - sort_type:     - 0: Comprehensive sorting     - 1: Most likes     - 2: Latest release - publish_time:     - 0: Unlimited     - 1: Last day     - 7: Last week     - 180: Last half year - filter_duration:     - 0: Unlimited     - 0-1: Within 1 minute     - 1-5: 1-5 minutes     - 5-10000: More than 5 minutes - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;游戏\&quot; offset &#x3D; 0 count &#x3D; 10 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, searchId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量，第一次请求时为0，后续从返回数据中获取，用于翻页。     - 例如: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: 数量，默认为10，建议保持不变。 - sort_type:     - 0:综合排序     - 1:最多点赞     - 2:最新发布 - publish_time:     - 0:不限     - 1:最近一天     - 7:最近一周     - 180:最近半年 - filter_duration:     - 0:不限 0-1:1分钟以内     - 1-5:1-5分钟     - 5-10000:5分钟以上 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset, 0 for the first request, get from the returned data later, used for paging.     - For example: offset &#x3D; 10     - JSON Path-1 : $.data.cursor - count: Number, default is 10, it is recommended to keep it unchanged. - sort_type:     - 0: Comprehensive sorting     - 1: Most likes     - 2: Latest release - publish_time:     - 0: Unlimited     - 1: Last day     - 7: Last week     - 180: Last half year - filter_duration:     - 0: Unlimited     - 0-1: Within 1 minute     - 1-5: 1-5 minutes     - 5-10000: More than 5 minutes - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;2024083107320448E367ECDCCC6B71F7F3\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;游戏\&quot; offset &#x3D; 0 count &#x3D; 10 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; search_id &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 视频时长/Duration filter (optional, default to &quot;0&quot;)
     * @param searchId 搜索id，翻页时需要提供/Search id, need to provide when paging (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0Async(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String searchId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinWebFetchVideoSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, searchId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get
     * @param keyword 关键词/Keyword (required)
     * @param offset 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2GetCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_search_result_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2GetValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2GetCall(keyword, offset, count, sortType, publishTime, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的视频搜索结果V2/Get video search results of specified keywords V2
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果V2，因为稳定性不佳，此接口暂时标记为已废弃，请使用&#x60;/api/v1/douyin/web/fetch_video_search_result&#x60;接口。 ### 参数: - keyword: 关键词 - offset: 游标, 0为第一次请求，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 ### 返回: - 视频搜索结果V2  # [English] ### Purpose: - Get video search results of specified keywords V2, because the stability is not good, this interface is temporarily marked as deprecated, please use the &#x60;/api/v1/douyin/web/fetch_video_search_result&#x60; interface. ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - Video search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get(String keyword, Integer offset, Integer count, String sortType, String publishTime) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2GetWithHttpInfo(keyword, offset, count, sortType, publishTime);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的视频搜索结果V2/Get video search results of specified keywords V2
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果V2，因为稳定性不佳，此接口暂时标记为已废弃，请使用&#x60;/api/v1/douyin/web/fetch_video_search_result&#x60;接口。 ### 参数: - keyword: 关键词 - offset: 游标, 0为第一次请求，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 ### 返回: - 视频搜索结果V2  # [English] ### Purpose: - Get video search results of specified keywords V2, because the stability is not good, this interface is temporarily marked as deprecated, please use the &#x60;/api/v1/douyin/web/fetch_video_search_result&#x60; interface. ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - Video search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2GetWithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2GetValidateBeforeCall(keyword, offset, count, sortType, publishTime, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的视频搜索结果V2/Get video search results of specified keywords V2 (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果V2，因为稳定性不佳，此接口暂时标记为已废弃，请使用&#x60;/api/v1/douyin/web/fetch_video_search_result&#x60;接口。 ### 参数: - keyword: 关键词 - offset: 游标, 0为第一次请求，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 ### 返回: - 视频搜索结果V2  # [English] ### Purpose: - Get video search results of specified keywords V2, because the stability is not good, this interface is temporarily marked as deprecated, please use the &#x60;/api/v1/douyin/web/fetch_video_search_result&#x60; interface. ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - Video search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2GetAsync(String keyword, Integer offset, Integer count, String sortType, String publishTime, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2GetValidateBeforeCall(keyword, offset, count, sortType, publishTime, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0Call(String keyword, Integer offset, Integer count, String sortType, String publishTime, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/fetch_video_search_result_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0ValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0Call(keyword, offset, count, sortType, publishTime, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的视频搜索结果V2/Get video search results of specified keywords V2
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果V2，因为稳定性不佳，此接口暂时标记为已废弃，请使用&#x60;/api/v1/douyin/web/fetch_video_search_result&#x60;接口。 ### 参数: - keyword: 关键词 - offset: 游标, 0为第一次请求，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 ### 返回: - 视频搜索结果V2  # [English] ### Purpose: - Get video search results of specified keywords V2, because the stability is not good, this interface is temporarily marked as deprecated, please use the &#x60;/api/v1/douyin/web/fetch_video_search_result&#x60; interface. ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - Video search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0(String keyword, Integer offset, Integer count, String sortType, String publishTime) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0WithHttpInfo(keyword, offset, count, sortType, publishTime);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的视频搜索结果V2/Get video search results of specified keywords V2
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果V2，因为稳定性不佳，此接口暂时标记为已废弃，请使用&#x60;/api/v1/douyin/web/fetch_video_search_result&#x60;接口。 ### 参数: - keyword: 关键词 - offset: 游标, 0为第一次请求，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 ### 返回: - 视频搜索结果V2  # [English] ### Purpose: - Get video search results of specified keywords V2, because the stability is not good, this interface is temporarily marked as deprecated, please use the &#x60;/api/v1/douyin/web/fetch_video_search_result&#x60; interface. ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - Video search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0WithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的视频搜索结果V2/Get video search results of specified keywords V2 (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果V2，因为稳定性不佳，此接口暂时标记为已废弃，请使用&#x60;/api/v1/douyin/web/fetch_video_search_result&#x60;接口。 ### 参数: - keyword: 关键词 - offset: 游标, 0为第一次请求，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 ### 返回: - 视频搜索结果V2  # [English] ### Purpose: - Get video search results of specified keywords V2, because the stability is not good, this interface is temporarily marked as deprecated, please use the &#x60;/api/v1/douyin/web/fetch_video_search_result&#x60; interface. ### Parameters: - keyword: Keyword - cursor: Cursor, 0 for the first request, get from the returned data later, used for paging. ### Return: - Video search results V2  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0Async(String keyword, Integer offset, Integer count, String sortType, String publishTime, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoSearchResultV2ApiV1DouyinWebFetchVideoSearchResultV2Get_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateABogusApiV1DouyinWebGenerateABogusPost
     * @param abogusModel  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateABogusApiV1DouyinWebGenerateABogusPostCall(ABogusModel abogusModel, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = abogusModel;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_a_bogus";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateABogusApiV1DouyinWebGenerateABogusPostValidateBeforeCall(ABogusModel abogusModel, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateABogusApiV1DouyinWebGenerateABogusPostCall(abogusModel, _callback);
        return localVarCall;

    }

    /**
     * 使用接口网址生成A-Bogus参数/Generate A-Bogus parameter using API URL
     * # [中文] ### 用途: - 使用接口网址生成A-Bogus参数，提交的URL不能带有a_bogus参数，同时a_bogus参数与请求头中的User-Agent有关，需要一起提交和请求。 ### 参数: - url: API链接，请去除url中的原本的a_boogus参数(如有)。 - data: 请求载荷，只有在POST请求中才需要提交，GET请求中使用空字符串即可。 - user_agent: user-agent，需要提交你请求头中的User-Agent，该值参与a_bogus参数的计算。 - index_0: 加密明文列表的第一个值，无特殊要求，默认为0，不要随意修改。 - index_1: 加密明文列表的第二个值，无特殊要求，默认为1，不要随意修改。 - index_2: 加密明文列表的第三个值，无特殊要求，默认为14，不要随意修改。 ### 返回: - A-Bogus参数  # [English] ### Purpose: - Generate A-Bogus parameter using API URL, the submitted URL cannot contain the original a_boogus parameter, and the a_bogus parameter is related to the User-Agent in the request header, which needs to be submitted and requested together. ### Parameters: - url: API link, please remove the original a_boogus parameter from the url (if any). - data: Request payload, only need to submit in POST request, use an empty string in GET request. - user_agent: user-agent, you need to submit the User-Agent in your request header, which is involved in the calculation of the a_bogus parameter. - index_0: The first value of the encrypted plaintext list, no special requirements, the default is 0, do not modify it at will. - index_1: The second value of the encrypted plaintext list, no special requirements, the default is 1, do not modify it at will. - index_2: The third value of the encrypted plaintext list, no special requirements, the default is 14, do not modify it at will. ### Return: - A-Bogus parameter  # [示例/Example] &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/general/search/single/?device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;search_channel&#x3D;aweme_general&amp;enable_history&#x3D;1&amp;keyword&#x3D;%E4%B8%AD%E5%8D%8E%E5%A8%98&amp;search_source&#x3D;normal_search&amp;query_correct_type&#x3D;1&amp;is_filter_search&#x3D;0&amp;from_group_id&#x3D;7346905902554844468&amp;offset&#x3D;0&amp;count&#x3D;15&amp;need_filter_settings&#x3D;1&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;190600&amp;version_name&#x3D;19.6.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1280&amp;screen_height&#x3D;800&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Firefox&amp;browser_version&#x3D;124.0&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Gecko&amp;engine_version&#x3D;124.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;16&amp;device_memory&#x3D;&amp;platform&#x3D;PC&amp;webid&#x3D;7348962975497324070&amp;msToken&#x3D;YCTVM6YGmjFdIpQAN9ykXLBXiSiuHdZkOkEQWTeqVOHBEPmOcM0lNwE0Kd9vgHPMPigSndZDHfAq9k-6lDmH3Jqz6mHHxmn-BzQjmLMIfLIPgirgnOixM9x4PwgcNQ%3D%3D\&quot;, \&quot;data\&quot;: \&quot;\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\&quot;, \&quot;index_0\&quot;: 0, \&quot;index_1\&quot;: 1, \&quot;index_2\&quot;: 14 } &#x60;&#x60;&#x60;
     * @param abogusModel  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateABogusApiV1DouyinWebGenerateABogusPost(ABogusModel abogusModel) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateABogusApiV1DouyinWebGenerateABogusPostWithHttpInfo(abogusModel);
        return localVarResp.getData();
    }

    /**
     * 使用接口网址生成A-Bogus参数/Generate A-Bogus parameter using API URL
     * # [中文] ### 用途: - 使用接口网址生成A-Bogus参数，提交的URL不能带有a_bogus参数，同时a_bogus参数与请求头中的User-Agent有关，需要一起提交和请求。 ### 参数: - url: API链接，请去除url中的原本的a_boogus参数(如有)。 - data: 请求载荷，只有在POST请求中才需要提交，GET请求中使用空字符串即可。 - user_agent: user-agent，需要提交你请求头中的User-Agent，该值参与a_bogus参数的计算。 - index_0: 加密明文列表的第一个值，无特殊要求，默认为0，不要随意修改。 - index_1: 加密明文列表的第二个值，无特殊要求，默认为1，不要随意修改。 - index_2: 加密明文列表的第三个值，无特殊要求，默认为14，不要随意修改。 ### 返回: - A-Bogus参数  # [English] ### Purpose: - Generate A-Bogus parameter using API URL, the submitted URL cannot contain the original a_boogus parameter, and the a_bogus parameter is related to the User-Agent in the request header, which needs to be submitted and requested together. ### Parameters: - url: API link, please remove the original a_boogus parameter from the url (if any). - data: Request payload, only need to submit in POST request, use an empty string in GET request. - user_agent: user-agent, you need to submit the User-Agent in your request header, which is involved in the calculation of the a_bogus parameter. - index_0: The first value of the encrypted plaintext list, no special requirements, the default is 0, do not modify it at will. - index_1: The second value of the encrypted plaintext list, no special requirements, the default is 1, do not modify it at will. - index_2: The third value of the encrypted plaintext list, no special requirements, the default is 14, do not modify it at will. ### Return: - A-Bogus parameter  # [示例/Example] &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/general/search/single/?device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;search_channel&#x3D;aweme_general&amp;enable_history&#x3D;1&amp;keyword&#x3D;%E4%B8%AD%E5%8D%8E%E5%A8%98&amp;search_source&#x3D;normal_search&amp;query_correct_type&#x3D;1&amp;is_filter_search&#x3D;0&amp;from_group_id&#x3D;7346905902554844468&amp;offset&#x3D;0&amp;count&#x3D;15&amp;need_filter_settings&#x3D;1&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;190600&amp;version_name&#x3D;19.6.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1280&amp;screen_height&#x3D;800&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Firefox&amp;browser_version&#x3D;124.0&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Gecko&amp;engine_version&#x3D;124.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;16&amp;device_memory&#x3D;&amp;platform&#x3D;PC&amp;webid&#x3D;7348962975497324070&amp;msToken&#x3D;YCTVM6YGmjFdIpQAN9ykXLBXiSiuHdZkOkEQWTeqVOHBEPmOcM0lNwE0Kd9vgHPMPigSndZDHfAq9k-6lDmH3Jqz6mHHxmn-BzQjmLMIfLIPgirgnOixM9x4PwgcNQ%3D%3D\&quot;, \&quot;data\&quot;: \&quot;\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\&quot;, \&quot;index_0\&quot;: 0, \&quot;index_1\&quot;: 1, \&quot;index_2\&quot;: 14 } &#x60;&#x60;&#x60;
     * @param abogusModel  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateABogusApiV1DouyinWebGenerateABogusPostWithHttpInfo(ABogusModel abogusModel) throws ApiException {
        okhttp3.Call localVarCall = generateABogusApiV1DouyinWebGenerateABogusPostValidateBeforeCall(abogusModel, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 使用接口网址生成A-Bogus参数/Generate A-Bogus parameter using API URL (asynchronously)
     * # [中文] ### 用途: - 使用接口网址生成A-Bogus参数，提交的URL不能带有a_bogus参数，同时a_bogus参数与请求头中的User-Agent有关，需要一起提交和请求。 ### 参数: - url: API链接，请去除url中的原本的a_boogus参数(如有)。 - data: 请求载荷，只有在POST请求中才需要提交，GET请求中使用空字符串即可。 - user_agent: user-agent，需要提交你请求头中的User-Agent，该值参与a_bogus参数的计算。 - index_0: 加密明文列表的第一个值，无特殊要求，默认为0，不要随意修改。 - index_1: 加密明文列表的第二个值，无特殊要求，默认为1，不要随意修改。 - index_2: 加密明文列表的第三个值，无特殊要求，默认为14，不要随意修改。 ### 返回: - A-Bogus参数  # [English] ### Purpose: - Generate A-Bogus parameter using API URL, the submitted URL cannot contain the original a_boogus parameter, and the a_bogus parameter is related to the User-Agent in the request header, which needs to be submitted and requested together. ### Parameters: - url: API link, please remove the original a_boogus parameter from the url (if any). - data: Request payload, only need to submit in POST request, use an empty string in GET request. - user_agent: user-agent, you need to submit the User-Agent in your request header, which is involved in the calculation of the a_bogus parameter. - index_0: The first value of the encrypted plaintext list, no special requirements, the default is 0, do not modify it at will. - index_1: The second value of the encrypted plaintext list, no special requirements, the default is 1, do not modify it at will. - index_2: The third value of the encrypted plaintext list, no special requirements, the default is 14, do not modify it at will. ### Return: - A-Bogus parameter  # [示例/Example] &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/general/search/single/?device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;search_channel&#x3D;aweme_general&amp;enable_history&#x3D;1&amp;keyword&#x3D;%E4%B8%AD%E5%8D%8E%E5%A8%98&amp;search_source&#x3D;normal_search&amp;query_correct_type&#x3D;1&amp;is_filter_search&#x3D;0&amp;from_group_id&#x3D;7346905902554844468&amp;offset&#x3D;0&amp;count&#x3D;15&amp;need_filter_settings&#x3D;1&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;190600&amp;version_name&#x3D;19.6.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1280&amp;screen_height&#x3D;800&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Firefox&amp;browser_version&#x3D;124.0&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Gecko&amp;engine_version&#x3D;124.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;16&amp;device_memory&#x3D;&amp;platform&#x3D;PC&amp;webid&#x3D;7348962975497324070&amp;msToken&#x3D;YCTVM6YGmjFdIpQAN9ykXLBXiSiuHdZkOkEQWTeqVOHBEPmOcM0lNwE0Kd9vgHPMPigSndZDHfAq9k-6lDmH3Jqz6mHHxmn-BzQjmLMIfLIPgirgnOixM9x4PwgcNQ%3D%3D\&quot;, \&quot;data\&quot;: \&quot;\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\&quot;, \&quot;index_0\&quot;: 0, \&quot;index_1\&quot;: 1, \&quot;index_2\&quot;: 14 } &#x60;&#x60;&#x60;
     * @param abogusModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateABogusApiV1DouyinWebGenerateABogusPostAsync(ABogusModel abogusModel, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateABogusApiV1DouyinWebGenerateABogusPostValidateBeforeCall(abogusModel, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateABogusApiV1DouyinWebGenerateABogusPost_0
     * @param abogusModel  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateABogusApiV1DouyinWebGenerateABogusPost_0Call(ABogusModel abogusModel, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = abogusModel;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_a_bogus";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateABogusApiV1DouyinWebGenerateABogusPost_0ValidateBeforeCall(ABogusModel abogusModel, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateABogusApiV1DouyinWebGenerateABogusPost_0Call(abogusModel, _callback);
        return localVarCall;

    }

    /**
     * 使用接口网址生成A-Bogus参数/Generate A-Bogus parameter using API URL
     * # [中文] ### 用途: - 使用接口网址生成A-Bogus参数，提交的URL不能带有a_bogus参数，同时a_bogus参数与请求头中的User-Agent有关，需要一起提交和请求。 ### 参数: - url: API链接，请去除url中的原本的a_boogus参数(如有)。 - data: 请求载荷，只有在POST请求中才需要提交，GET请求中使用空字符串即可。 - user_agent: user-agent，需要提交你请求头中的User-Agent，该值参与a_bogus参数的计算。 - index_0: 加密明文列表的第一个值，无特殊要求，默认为0，不要随意修改。 - index_1: 加密明文列表的第二个值，无特殊要求，默认为1，不要随意修改。 - index_2: 加密明文列表的第三个值，无特殊要求，默认为14，不要随意修改。 ### 返回: - A-Bogus参数  # [English] ### Purpose: - Generate A-Bogus parameter using API URL, the submitted URL cannot contain the original a_boogus parameter, and the a_bogus parameter is related to the User-Agent in the request header, which needs to be submitted and requested together. ### Parameters: - url: API link, please remove the original a_boogus parameter from the url (if any). - data: Request payload, only need to submit in POST request, use an empty string in GET request. - user_agent: user-agent, you need to submit the User-Agent in your request header, which is involved in the calculation of the a_bogus parameter. - index_0: The first value of the encrypted plaintext list, no special requirements, the default is 0, do not modify it at will. - index_1: The second value of the encrypted plaintext list, no special requirements, the default is 1, do not modify it at will. - index_2: The third value of the encrypted plaintext list, no special requirements, the default is 14, do not modify it at will. ### Return: - A-Bogus parameter  # [示例/Example] &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/general/search/single/?device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;search_channel&#x3D;aweme_general&amp;enable_history&#x3D;1&amp;keyword&#x3D;%E4%B8%AD%E5%8D%8E%E5%A8%98&amp;search_source&#x3D;normal_search&amp;query_correct_type&#x3D;1&amp;is_filter_search&#x3D;0&amp;from_group_id&#x3D;7346905902554844468&amp;offset&#x3D;0&amp;count&#x3D;15&amp;need_filter_settings&#x3D;1&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;190600&amp;version_name&#x3D;19.6.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1280&amp;screen_height&#x3D;800&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Firefox&amp;browser_version&#x3D;124.0&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Gecko&amp;engine_version&#x3D;124.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;16&amp;device_memory&#x3D;&amp;platform&#x3D;PC&amp;webid&#x3D;7348962975497324070&amp;msToken&#x3D;YCTVM6YGmjFdIpQAN9ykXLBXiSiuHdZkOkEQWTeqVOHBEPmOcM0lNwE0Kd9vgHPMPigSndZDHfAq9k-6lDmH3Jqz6mHHxmn-BzQjmLMIfLIPgirgnOixM9x4PwgcNQ%3D%3D\&quot;, \&quot;data\&quot;: \&quot;\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\&quot;, \&quot;index_0\&quot;: 0, \&quot;index_1\&quot;: 1, \&quot;index_2\&quot;: 14 } &#x60;&#x60;&#x60;
     * @param abogusModel  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateABogusApiV1DouyinWebGenerateABogusPost_0(ABogusModel abogusModel) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateABogusApiV1DouyinWebGenerateABogusPost_0WithHttpInfo(abogusModel);
        return localVarResp.getData();
    }

    /**
     * 使用接口网址生成A-Bogus参数/Generate A-Bogus parameter using API URL
     * # [中文] ### 用途: - 使用接口网址生成A-Bogus参数，提交的URL不能带有a_bogus参数，同时a_bogus参数与请求头中的User-Agent有关，需要一起提交和请求。 ### 参数: - url: API链接，请去除url中的原本的a_boogus参数(如有)。 - data: 请求载荷，只有在POST请求中才需要提交，GET请求中使用空字符串即可。 - user_agent: user-agent，需要提交你请求头中的User-Agent，该值参与a_bogus参数的计算。 - index_0: 加密明文列表的第一个值，无特殊要求，默认为0，不要随意修改。 - index_1: 加密明文列表的第二个值，无特殊要求，默认为1，不要随意修改。 - index_2: 加密明文列表的第三个值，无特殊要求，默认为14，不要随意修改。 ### 返回: - A-Bogus参数  # [English] ### Purpose: - Generate A-Bogus parameter using API URL, the submitted URL cannot contain the original a_boogus parameter, and the a_bogus parameter is related to the User-Agent in the request header, which needs to be submitted and requested together. ### Parameters: - url: API link, please remove the original a_boogus parameter from the url (if any). - data: Request payload, only need to submit in POST request, use an empty string in GET request. - user_agent: user-agent, you need to submit the User-Agent in your request header, which is involved in the calculation of the a_bogus parameter. - index_0: The first value of the encrypted plaintext list, no special requirements, the default is 0, do not modify it at will. - index_1: The second value of the encrypted plaintext list, no special requirements, the default is 1, do not modify it at will. - index_2: The third value of the encrypted plaintext list, no special requirements, the default is 14, do not modify it at will. ### Return: - A-Bogus parameter  # [示例/Example] &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/general/search/single/?device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;search_channel&#x3D;aweme_general&amp;enable_history&#x3D;1&amp;keyword&#x3D;%E4%B8%AD%E5%8D%8E%E5%A8%98&amp;search_source&#x3D;normal_search&amp;query_correct_type&#x3D;1&amp;is_filter_search&#x3D;0&amp;from_group_id&#x3D;7346905902554844468&amp;offset&#x3D;0&amp;count&#x3D;15&amp;need_filter_settings&#x3D;1&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;190600&amp;version_name&#x3D;19.6.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1280&amp;screen_height&#x3D;800&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Firefox&amp;browser_version&#x3D;124.0&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Gecko&amp;engine_version&#x3D;124.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;16&amp;device_memory&#x3D;&amp;platform&#x3D;PC&amp;webid&#x3D;7348962975497324070&amp;msToken&#x3D;YCTVM6YGmjFdIpQAN9ykXLBXiSiuHdZkOkEQWTeqVOHBEPmOcM0lNwE0Kd9vgHPMPigSndZDHfAq9k-6lDmH3Jqz6mHHxmn-BzQjmLMIfLIPgirgnOixM9x4PwgcNQ%3D%3D\&quot;, \&quot;data\&quot;: \&quot;\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\&quot;, \&quot;index_0\&quot;: 0, \&quot;index_1\&quot;: 1, \&quot;index_2\&quot;: 14 } &#x60;&#x60;&#x60;
     * @param abogusModel  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateABogusApiV1DouyinWebGenerateABogusPost_0WithHttpInfo(ABogusModel abogusModel) throws ApiException {
        okhttp3.Call localVarCall = generateABogusApiV1DouyinWebGenerateABogusPost_0ValidateBeforeCall(abogusModel, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 使用接口网址生成A-Bogus参数/Generate A-Bogus parameter using API URL (asynchronously)
     * # [中文] ### 用途: - 使用接口网址生成A-Bogus参数，提交的URL不能带有a_bogus参数，同时a_bogus参数与请求头中的User-Agent有关，需要一起提交和请求。 ### 参数: - url: API链接，请去除url中的原本的a_boogus参数(如有)。 - data: 请求载荷，只有在POST请求中才需要提交，GET请求中使用空字符串即可。 - user_agent: user-agent，需要提交你请求头中的User-Agent，该值参与a_bogus参数的计算。 - index_0: 加密明文列表的第一个值，无特殊要求，默认为0，不要随意修改。 - index_1: 加密明文列表的第二个值，无特殊要求，默认为1，不要随意修改。 - index_2: 加密明文列表的第三个值，无特殊要求，默认为14，不要随意修改。 ### 返回: - A-Bogus参数  # [English] ### Purpose: - Generate A-Bogus parameter using API URL, the submitted URL cannot contain the original a_boogus parameter, and the a_bogus parameter is related to the User-Agent in the request header, which needs to be submitted and requested together. ### Parameters: - url: API link, please remove the original a_boogus parameter from the url (if any). - data: Request payload, only need to submit in POST request, use an empty string in GET request. - user_agent: user-agent, you need to submit the User-Agent in your request header, which is involved in the calculation of the a_bogus parameter. - index_0: The first value of the encrypted plaintext list, no special requirements, the default is 0, do not modify it at will. - index_1: The second value of the encrypted plaintext list, no special requirements, the default is 1, do not modify it at will. - index_2: The third value of the encrypted plaintext list, no special requirements, the default is 14, do not modify it at will. ### Return: - A-Bogus parameter  # [示例/Example] &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/general/search/single/?device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;search_channel&#x3D;aweme_general&amp;enable_history&#x3D;1&amp;keyword&#x3D;%E4%B8%AD%E5%8D%8E%E5%A8%98&amp;search_source&#x3D;normal_search&amp;query_correct_type&#x3D;1&amp;is_filter_search&#x3D;0&amp;from_group_id&#x3D;7346905902554844468&amp;offset&#x3D;0&amp;count&#x3D;15&amp;need_filter_settings&#x3D;1&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;190600&amp;version_name&#x3D;19.6.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1280&amp;screen_height&#x3D;800&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Firefox&amp;browser_version&#x3D;124.0&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Gecko&amp;engine_version&#x3D;124.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;16&amp;device_memory&#x3D;&amp;platform&#x3D;PC&amp;webid&#x3D;7348962975497324070&amp;msToken&#x3D;YCTVM6YGmjFdIpQAN9ykXLBXiSiuHdZkOkEQWTeqVOHBEPmOcM0lNwE0Kd9vgHPMPigSndZDHfAq9k-6lDmH3Jqz6mHHxmn-BzQjmLMIfLIPgirgnOixM9x4PwgcNQ%3D%3D\&quot;, \&quot;data\&quot;: \&quot;\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36\&quot;, \&quot;index_0\&quot;: 0, \&quot;index_1\&quot;: 1, \&quot;index_2\&quot;: 14 } &#x60;&#x60;&#x60;
     * @param abogusModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateABogusApiV1DouyinWebGenerateABogusPost_0Async(ABogusModel abogusModel, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateABogusApiV1DouyinWebGenerateABogusPost_0ValidateBeforeCall(abogusModel, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_real_msToken";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGetCall(_callback);
        return localVarCall;

    }

    /**
     * 生成真实msToken/Generate real msToken
     * # [中文] ### 用途: - 生成真实msToken ### 返回: - msToken  # [English] ### Purpose: - Generate real msToken ### Return: - msToken
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 生成真实msToken/Generate real msToken
     * # [中文] ### 用途: - 生成真实msToken ### 返回: - msToken  # [English] ### Purpose: - Generate real msToken ### Return: - msToken
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成真实msToken/Generate real msToken (asynchronously)
     * # [中文] ### 用途: - 生成真实msToken ### 返回: - msToken  # [English] ### Purpose: - Generate real msToken ### Return: - msToken
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_real_msToken";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 生成真实msToken/Generate real msToken
     * # [中文] ### 用途: - 生成真实msToken ### 返回: - msToken  # [English] ### Purpose: - Generate real msToken ### Return: - msToken
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 生成真实msToken/Generate real msToken
     * # [中文] ### 用途: - 生成真实msToken ### 返回: - msToken  # [English] ### Purpose: - Generate real msToken ### Return: - msToken
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成真实msToken/Generate real msToken (asynchronously)
     * # [中文] ### 用途: - 生成真实msToken ### 返回: - msToken  # [English] ### Purpose: - Generate real msToken ### Return: - msToken
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateRealMsTokenApiV1DouyinWebGenerateRealMsTokenGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateSVWebIdApiV1DouyinWebGenerateSVWebIdGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_s_v_web_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateSVWebIdApiV1DouyinWebGenerateSVWebIdGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateSVWebIdApiV1DouyinWebGenerateSVWebIdGetCall(_callback);
        return localVarCall;

    }

    /**
     * 生成s_v_web_id/Generate s_v_web_id
     * # [中文] ### 用途: - 生成s_v_web_id ### 返回: - s_v_web_id  # [English] ### Purpose: - Generate s_v_web_id ### Return: - s_v_web_id
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateSVWebIdApiV1DouyinWebGenerateSVWebIdGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 生成s_v_web_id/Generate s_v_web_id
     * # [中文] ### 用途: - 生成s_v_web_id ### 返回: - s_v_web_id  # [English] ### Purpose: - Generate s_v_web_id ### Return: - s_v_web_id
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateSVWebIdApiV1DouyinWebGenerateSVWebIdGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = generateSVWebIdApiV1DouyinWebGenerateSVWebIdGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成s_v_web_id/Generate s_v_web_id (asynchronously)
     * # [中文] ### 用途: - 生成s_v_web_id ### 返回: - s_v_web_id  # [English] ### Purpose: - Generate s_v_web_id ### Return: - s_v_web_id
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateSVWebIdApiV1DouyinWebGenerateSVWebIdGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateSVWebIdApiV1DouyinWebGenerateSVWebIdGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_s_v_web_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 生成s_v_web_id/Generate s_v_web_id
     * # [中文] ### 用途: - 生成s_v_web_id ### 返回: - s_v_web_id  # [English] ### Purpose: - Generate s_v_web_id ### Return: - s_v_web_id
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 生成s_v_web_id/Generate s_v_web_id
     * # [中文] ### 用途: - 生成s_v_web_id ### 返回: - s_v_web_id  # [English] ### Purpose: - Generate s_v_web_id ### Return: - s_v_web_id
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成s_v_web_id/Generate s_v_web_id (asynchronously)
     * # [中文] ### 用途: - 生成s_v_web_id ### 返回: - s_v_web_id  # [English] ### Purpose: - Generate s_v_web_id ### Return: - s_v_web_id
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateSVWebIdApiV1DouyinWebGenerateSVWebIdGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateTtwidApiV1DouyinWebGenerateTtwidGet
     * @param userAgent  (optional, default to &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateTtwidApiV1DouyinWebGenerateTtwidGetCall(String userAgent, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_ttwid";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userAgent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_agent", userAgent));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateTtwidApiV1DouyinWebGenerateTtwidGetValidateBeforeCall(String userAgent, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateTtwidApiV1DouyinWebGenerateTtwidGetCall(userAgent, _callback);
        return localVarCall;

    }

    /**
     * 生成ttwid/Generate ttwid
     * # [中文] ### 用途: - 生成ttwid ### 返回: - ttwid  # [English] ### Purpose: - Generate ttwid ### Return: - ttwid
     * @param userAgent  (optional, default to &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateTtwidApiV1DouyinWebGenerateTtwidGet(String userAgent) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateTtwidApiV1DouyinWebGenerateTtwidGetWithHttpInfo(userAgent);
        return localVarResp.getData();
    }

    /**
     * 生成ttwid/Generate ttwid
     * # [中文] ### 用途: - 生成ttwid ### 返回: - ttwid  # [English] ### Purpose: - Generate ttwid ### Return: - ttwid
     * @param userAgent  (optional, default to &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateTtwidApiV1DouyinWebGenerateTtwidGetWithHttpInfo(String userAgent) throws ApiException {
        okhttp3.Call localVarCall = generateTtwidApiV1DouyinWebGenerateTtwidGetValidateBeforeCall(userAgent, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成ttwid/Generate ttwid (asynchronously)
     * # [中文] ### 用途: - 生成ttwid ### 返回: - ttwid  # [English] ### Purpose: - Generate ttwid ### Return: - ttwid
     * @param userAgent  (optional, default to &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateTtwidApiV1DouyinWebGenerateTtwidGetAsync(String userAgent, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateTtwidApiV1DouyinWebGenerateTtwidGetValidateBeforeCall(userAgent, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateTtwidApiV1DouyinWebGenerateTtwidGet_0
     * @param userAgent  (optional, default to &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateTtwidApiV1DouyinWebGenerateTtwidGet_0Call(String userAgent, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_ttwid";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userAgent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_agent", userAgent));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateTtwidApiV1DouyinWebGenerateTtwidGet_0ValidateBeforeCall(String userAgent, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateTtwidApiV1DouyinWebGenerateTtwidGet_0Call(userAgent, _callback);
        return localVarCall;

    }

    /**
     * 生成ttwid/Generate ttwid
     * # [中文] ### 用途: - 生成ttwid ### 返回: - ttwid  # [English] ### Purpose: - Generate ttwid ### Return: - ttwid
     * @param userAgent  (optional, default to &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateTtwidApiV1DouyinWebGenerateTtwidGet_0(String userAgent) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateTtwidApiV1DouyinWebGenerateTtwidGet_0WithHttpInfo(userAgent);
        return localVarResp.getData();
    }

    /**
     * 生成ttwid/Generate ttwid
     * # [中文] ### 用途: - 生成ttwid ### 返回: - ttwid  # [English] ### Purpose: - Generate ttwid ### Return: - ttwid
     * @param userAgent  (optional, default to &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateTtwidApiV1DouyinWebGenerateTtwidGet_0WithHttpInfo(String userAgent) throws ApiException {
        okhttp3.Call localVarCall = generateTtwidApiV1DouyinWebGenerateTtwidGet_0ValidateBeforeCall(userAgent, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成ttwid/Generate ttwid (asynchronously)
     * # [中文] ### 用途: - 生成ttwid ### 返回: - ttwid  # [English] ### Purpose: - Generate ttwid ### Return: - ttwid
     * @param userAgent  (optional, default to &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:125.0) Gecko/20100101 Firefox/125.0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateTtwidApiV1DouyinWebGenerateTtwidGet_0Async(String userAgent, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateTtwidApiV1DouyinWebGenerateTtwidGet_0ValidateBeforeCall(userAgent, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateVerifyFpApiV1DouyinWebGenerateVerifyFpGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_verify_fp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateVerifyFpApiV1DouyinWebGenerateVerifyFpGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateVerifyFpApiV1DouyinWebGenerateVerifyFpGetCall(_callback);
        return localVarCall;

    }

    /**
     * 生成verify_fp/Generate verify_fp
     * # [中文] ### 用途: - 生成verify_fp ### 返回: - verify_fp  # [English] ### Purpose: - Generate verify_fp ### Return: - verify_fp
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateVerifyFpApiV1DouyinWebGenerateVerifyFpGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 生成verify_fp/Generate verify_fp
     * # [中文] ### 用途: - 生成verify_fp ### 返回: - verify_fp  # [English] ### Purpose: - Generate verify_fp ### Return: - verify_fp
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateVerifyFpApiV1DouyinWebGenerateVerifyFpGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = generateVerifyFpApiV1DouyinWebGenerateVerifyFpGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成verify_fp/Generate verify_fp (asynchronously)
     * # [中文] ### 用途: - 生成verify_fp ### 返回: - verify_fp  # [English] ### Purpose: - Generate verify_fp ### Return: - verify_fp
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateVerifyFpApiV1DouyinWebGenerateVerifyFpGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateVerifyFpApiV1DouyinWebGenerateVerifyFpGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_verify_fp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 生成verify_fp/Generate verify_fp
     * # [中文] ### 用途: - 生成verify_fp ### 返回: - verify_fp  # [English] ### Purpose: - Generate verify_fp ### Return: - verify_fp
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 生成verify_fp/Generate verify_fp
     * # [中文] ### 用途: - 生成verify_fp ### 返回: - verify_fp  # [English] ### Purpose: - Generate verify_fp ### Return: - verify_fp
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成verify_fp/Generate verify_fp (asynchronously)
     * # [中文] ### 用途: - 生成verify_fp ### 返回: - verify_fp  # [English] ### Purpose: - Generate verify_fp ### Return: - verify_fp
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateVerifyFpApiV1DouyinWebGenerateVerifyFpGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateXBogusApiV1DouyinWebGenerateXBogusPost
     * @param xbogusModel  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateXBogusApiV1DouyinWebGenerateXBogusPostCall(XBogusModel xbogusModel, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = xbogusModel;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_x_bogus";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateXBogusApiV1DouyinWebGenerateXBogusPostValidateBeforeCall(XBogusModel xbogusModel, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateXBogusApiV1DouyinWebGenerateXBogusPostCall(xbogusModel, _callback);
        return localVarCall;

    }

    /**
     * 使用接口网址生成X-Bogus参数/Generate X-Bogus parameter using API URL
     * # [中文] ### 用途: - 使用接口网址生成X-Bogus参数 ### 参数: - url: 接口网址  # [English] ### Purpose: - Generate X-Bogus parameter using API URL ### Parameters: - url: API URL  # [示例/Example]  &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/aweme/detail/?aweme_id&#x3D;7148736076176215311&amp;device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;170400&amp;version_name&#x3D;17.4.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1920&amp;screen_height&#x3D;1080&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Edge&amp;browser_version&#x3D;117.0.2045.47&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Blink&amp;engine_version&#x3D;117.0.0.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;128&amp;device_memory&#x3D;10240&amp;platform&#x3D;PC&amp;downlink&#x3D;10&amp;effective_type&#x3D;4g&amp;round_trip_time&#x3D;100\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot; } &#x60;&#x60;&#x60;
     * @param xbogusModel  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateXBogusApiV1DouyinWebGenerateXBogusPost(XBogusModel xbogusModel) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateXBogusApiV1DouyinWebGenerateXBogusPostWithHttpInfo(xbogusModel);
        return localVarResp.getData();
    }

    /**
     * 使用接口网址生成X-Bogus参数/Generate X-Bogus parameter using API URL
     * # [中文] ### 用途: - 使用接口网址生成X-Bogus参数 ### 参数: - url: 接口网址  # [English] ### Purpose: - Generate X-Bogus parameter using API URL ### Parameters: - url: API URL  # [示例/Example]  &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/aweme/detail/?aweme_id&#x3D;7148736076176215311&amp;device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;170400&amp;version_name&#x3D;17.4.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1920&amp;screen_height&#x3D;1080&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Edge&amp;browser_version&#x3D;117.0.2045.47&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Blink&amp;engine_version&#x3D;117.0.0.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;128&amp;device_memory&#x3D;10240&amp;platform&#x3D;PC&amp;downlink&#x3D;10&amp;effective_type&#x3D;4g&amp;round_trip_time&#x3D;100\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot; } &#x60;&#x60;&#x60;
     * @param xbogusModel  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateXBogusApiV1DouyinWebGenerateXBogusPostWithHttpInfo(XBogusModel xbogusModel) throws ApiException {
        okhttp3.Call localVarCall = generateXBogusApiV1DouyinWebGenerateXBogusPostValidateBeforeCall(xbogusModel, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 使用接口网址生成X-Bogus参数/Generate X-Bogus parameter using API URL (asynchronously)
     * # [中文] ### 用途: - 使用接口网址生成X-Bogus参数 ### 参数: - url: 接口网址  # [English] ### Purpose: - Generate X-Bogus parameter using API URL ### Parameters: - url: API URL  # [示例/Example]  &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/aweme/detail/?aweme_id&#x3D;7148736076176215311&amp;device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;170400&amp;version_name&#x3D;17.4.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1920&amp;screen_height&#x3D;1080&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Edge&amp;browser_version&#x3D;117.0.2045.47&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Blink&amp;engine_version&#x3D;117.0.0.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;128&amp;device_memory&#x3D;10240&amp;platform&#x3D;PC&amp;downlink&#x3D;10&amp;effective_type&#x3D;4g&amp;round_trip_time&#x3D;100\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot; } &#x60;&#x60;&#x60;
     * @param xbogusModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateXBogusApiV1DouyinWebGenerateXBogusPostAsync(XBogusModel xbogusModel, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateXBogusApiV1DouyinWebGenerateXBogusPostValidateBeforeCall(xbogusModel, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateXBogusApiV1DouyinWebGenerateXBogusPost_0
     * @param xbogusModel  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateXBogusApiV1DouyinWebGenerateXBogusPost_0Call(XBogusModel xbogusModel, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = xbogusModel;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/generate_x_bogus";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateXBogusApiV1DouyinWebGenerateXBogusPost_0ValidateBeforeCall(XBogusModel xbogusModel, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = generateXBogusApiV1DouyinWebGenerateXBogusPost_0Call(xbogusModel, _callback);
        return localVarCall;

    }

    /**
     * 使用接口网址生成X-Bogus参数/Generate X-Bogus parameter using API URL
     * # [中文] ### 用途: - 使用接口网址生成X-Bogus参数 ### 参数: - url: 接口网址  # [English] ### Purpose: - Generate X-Bogus parameter using API URL ### Parameters: - url: API URL  # [示例/Example]  &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/aweme/detail/?aweme_id&#x3D;7148736076176215311&amp;device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;170400&amp;version_name&#x3D;17.4.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1920&amp;screen_height&#x3D;1080&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Edge&amp;browser_version&#x3D;117.0.2045.47&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Blink&amp;engine_version&#x3D;117.0.0.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;128&amp;device_memory&#x3D;10240&amp;platform&#x3D;PC&amp;downlink&#x3D;10&amp;effective_type&#x3D;4g&amp;round_trip_time&#x3D;100\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot; } &#x60;&#x60;&#x60;
     * @param xbogusModel  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateXBogusApiV1DouyinWebGenerateXBogusPost_0(XBogusModel xbogusModel) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateXBogusApiV1DouyinWebGenerateXBogusPost_0WithHttpInfo(xbogusModel);
        return localVarResp.getData();
    }

    /**
     * 使用接口网址生成X-Bogus参数/Generate X-Bogus parameter using API URL
     * # [中文] ### 用途: - 使用接口网址生成X-Bogus参数 ### 参数: - url: 接口网址  # [English] ### Purpose: - Generate X-Bogus parameter using API URL ### Parameters: - url: API URL  # [示例/Example]  &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/aweme/detail/?aweme_id&#x3D;7148736076176215311&amp;device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;170400&amp;version_name&#x3D;17.4.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1920&amp;screen_height&#x3D;1080&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Edge&amp;browser_version&#x3D;117.0.2045.47&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Blink&amp;engine_version&#x3D;117.0.0.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;128&amp;device_memory&#x3D;10240&amp;platform&#x3D;PC&amp;downlink&#x3D;10&amp;effective_type&#x3D;4g&amp;round_trip_time&#x3D;100\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot; } &#x60;&#x60;&#x60;
     * @param xbogusModel  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateXBogusApiV1DouyinWebGenerateXBogusPost_0WithHttpInfo(XBogusModel xbogusModel) throws ApiException {
        okhttp3.Call localVarCall = generateXBogusApiV1DouyinWebGenerateXBogusPost_0ValidateBeforeCall(xbogusModel, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 使用接口网址生成X-Bogus参数/Generate X-Bogus parameter using API URL (asynchronously)
     * # [中文] ### 用途: - 使用接口网址生成X-Bogus参数 ### 参数: - url: 接口网址  # [English] ### Purpose: - Generate X-Bogus parameter using API URL ### Parameters: - url: API URL  # [示例/Example]  &#x60;&#x60;&#x60;json { \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/aweme/detail/?aweme_id&#x3D;7148736076176215311&amp;device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;170400&amp;version_name&#x3D;17.4.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1920&amp;screen_height&#x3D;1080&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Edge&amp;browser_version&#x3D;117.0.2045.47&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Blink&amp;engine_version&#x3D;117.0.0.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;128&amp;device_memory&#x3D;10240&amp;platform&#x3D;PC&amp;downlink&#x3D;10&amp;effective_type&#x3D;4g&amp;round_trip_time&#x3D;100\&quot;, \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot; } &#x60;&#x60;&#x60;
     * @param xbogusModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateXBogusApiV1DouyinWebGenerateXBogusPost_0Async(XBogusModel xbogusModel, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateXBogusApiV1DouyinWebGenerateXBogusPost_0ValidateBeforeCall(xbogusModel, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost
     * @param requestBody  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPostCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_all_aweme_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPostValidateBeforeCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPostCall(requestBody, _callback);
        return localVarCall;

    }

    /**
     * 提取列表作品id/Extract list video id
     * # [中文]  ### 用途:  - 提取列表作品id（最多支持20个链接）  ### 参数:  - url: 作品链接列表  ### 返回:  - 作品id列表   # [English]  ### Purpose:  - Extract list video id (supports up to 20 links)  ### Parameters:  - url: Video link list  ### Return:  - Video id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[     \&quot;0.53 02/26 I@v.sE Fus:/ 你别太帅了郑润泽# 现场版live # 音乐节 # 郑润泽  https://v.douyin.com/iRNBho6u/ 复制此链接，打开Dou音搜索，直接观看视频!\&quot;,     \&quot;https://v.douyin.com/iRNBho6u/\&quot;,     \&quot;https://www.iesdouyin.com/share/video/7298145681699622182/?region&#x3D;CN&amp;mid&#x3D;7298145762238565171&amp;u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAtqpCx0hpOERbdSzQdjRZw-wFPxaqdbAzsKDmbJMUI3KWlMGQHC-n6dXAqa-dM2EP&amp;iid&#x3D;MS4wLjABAAAANwkJuWIRFOzg5uCpDRpMj4OX-QryoDgn-yYlXQnRwQQ&amp;with_sec_did&#x3D;1&amp;titleType&#x3D;title&amp;share_sign&#x3D;05kGlqGmR4_IwCX.ZGk6xuL0osNA..5ur7b0jbOx6cc-&amp;share_version&#x3D;170400&amp;ts&#x3D;1699262937&amp;from_aid&#x3D;6383&amp;from_ssr&#x3D;1&amp;from&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182?previous_page&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182\&quot;,  ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost(List<String> requestBody) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPostWithHttpInfo(requestBody);
        return localVarResp.getData();
    }

    /**
     * 提取列表作品id/Extract list video id
     * # [中文]  ### 用途:  - 提取列表作品id（最多支持20个链接）  ### 参数:  - url: 作品链接列表  ### 返回:  - 作品id列表   # [English]  ### Purpose:  - Extract list video id (supports up to 20 links)  ### Parameters:  - url: Video link list  ### Return:  - Video id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[     \&quot;0.53 02/26 I@v.sE Fus:/ 你别太帅了郑润泽# 现场版live # 音乐节 # 郑润泽  https://v.douyin.com/iRNBho6u/ 复制此链接，打开Dou音搜索，直接观看视频!\&quot;,     \&quot;https://v.douyin.com/iRNBho6u/\&quot;,     \&quot;https://www.iesdouyin.com/share/video/7298145681699622182/?region&#x3D;CN&amp;mid&#x3D;7298145762238565171&amp;u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAtqpCx0hpOERbdSzQdjRZw-wFPxaqdbAzsKDmbJMUI3KWlMGQHC-n6dXAqa-dM2EP&amp;iid&#x3D;MS4wLjABAAAANwkJuWIRFOzg5uCpDRpMj4OX-QryoDgn-yYlXQnRwQQ&amp;with_sec_did&#x3D;1&amp;titleType&#x3D;title&amp;share_sign&#x3D;05kGlqGmR4_IwCX.ZGk6xuL0osNA..5ur7b0jbOx6cc-&amp;share_version&#x3D;170400&amp;ts&#x3D;1699262937&amp;from_aid&#x3D;6383&amp;from_ssr&#x3D;1&amp;from&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182?previous_page&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182\&quot;,  ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPostWithHttpInfo(List<String> requestBody) throws ApiException {
        okhttp3.Call localVarCall = getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPostValidateBeforeCall(requestBody, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取列表作品id/Extract list video id (asynchronously)
     * # [中文]  ### 用途:  - 提取列表作品id（最多支持20个链接）  ### 参数:  - url: 作品链接列表  ### 返回:  - 作品id列表   # [English]  ### Purpose:  - Extract list video id (supports up to 20 links)  ### Parameters:  - url: Video link list  ### Return:  - Video id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[     \&quot;0.53 02/26 I@v.sE Fus:/ 你别太帅了郑润泽# 现场版live # 音乐节 # 郑润泽  https://v.douyin.com/iRNBho6u/ 复制此链接，打开Dou音搜索，直接观看视频!\&quot;,     \&quot;https://v.douyin.com/iRNBho6u/\&quot;,     \&quot;https://www.iesdouyin.com/share/video/7298145681699622182/?region&#x3D;CN&amp;mid&#x3D;7298145762238565171&amp;u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAtqpCx0hpOERbdSzQdjRZw-wFPxaqdbAzsKDmbJMUI3KWlMGQHC-n6dXAqa-dM2EP&amp;iid&#x3D;MS4wLjABAAAANwkJuWIRFOzg5uCpDRpMj4OX-QryoDgn-yYlXQnRwQQ&amp;with_sec_did&#x3D;1&amp;titleType&#x3D;title&amp;share_sign&#x3D;05kGlqGmR4_IwCX.ZGk6xuL0osNA..5ur7b0jbOx6cc-&amp;share_version&#x3D;170400&amp;ts&#x3D;1699262937&amp;from_aid&#x3D;6383&amp;from_ssr&#x3D;1&amp;from&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182?previous_page&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182\&quot;,  ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPostAsync(List<String> requestBody, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPostValidateBeforeCall(requestBody, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0
     * @param requestBody  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0Call(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_all_aweme_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0ValidateBeforeCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0Call(requestBody, _callback);
        return localVarCall;

    }

    /**
     * 提取列表作品id/Extract list video id
     * # [中文]  ### 用途:  - 提取列表作品id（最多支持20个链接）  ### 参数:  - url: 作品链接列表  ### 返回:  - 作品id列表   # [English]  ### Purpose:  - Extract list video id (supports up to 20 links)  ### Parameters:  - url: Video link list  ### Return:  - Video id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[     \&quot;0.53 02/26 I@v.sE Fus:/ 你别太帅了郑润泽# 现场版live # 音乐节 # 郑润泽  https://v.douyin.com/iRNBho6u/ 复制此链接，打开Dou音搜索，直接观看视频!\&quot;,     \&quot;https://v.douyin.com/iRNBho6u/\&quot;,     \&quot;https://www.iesdouyin.com/share/video/7298145681699622182/?region&#x3D;CN&amp;mid&#x3D;7298145762238565171&amp;u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAtqpCx0hpOERbdSzQdjRZw-wFPxaqdbAzsKDmbJMUI3KWlMGQHC-n6dXAqa-dM2EP&amp;iid&#x3D;MS4wLjABAAAANwkJuWIRFOzg5uCpDRpMj4OX-QryoDgn-yYlXQnRwQQ&amp;with_sec_did&#x3D;1&amp;titleType&#x3D;title&amp;share_sign&#x3D;05kGlqGmR4_IwCX.ZGk6xuL0osNA..5ur7b0jbOx6cc-&amp;share_version&#x3D;170400&amp;ts&#x3D;1699262937&amp;from_aid&#x3D;6383&amp;from_ssr&#x3D;1&amp;from&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182?previous_page&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182\&quot;,  ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0(List<String> requestBody) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0WithHttpInfo(requestBody);
        return localVarResp.getData();
    }

    /**
     * 提取列表作品id/Extract list video id
     * # [中文]  ### 用途:  - 提取列表作品id（最多支持20个链接）  ### 参数:  - url: 作品链接列表  ### 返回:  - 作品id列表   # [English]  ### Purpose:  - Extract list video id (supports up to 20 links)  ### Parameters:  - url: Video link list  ### Return:  - Video id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[     \&quot;0.53 02/26 I@v.sE Fus:/ 你别太帅了郑润泽# 现场版live # 音乐节 # 郑润泽  https://v.douyin.com/iRNBho6u/ 复制此链接，打开Dou音搜索，直接观看视频!\&quot;,     \&quot;https://v.douyin.com/iRNBho6u/\&quot;,     \&quot;https://www.iesdouyin.com/share/video/7298145681699622182/?region&#x3D;CN&amp;mid&#x3D;7298145762238565171&amp;u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAtqpCx0hpOERbdSzQdjRZw-wFPxaqdbAzsKDmbJMUI3KWlMGQHC-n6dXAqa-dM2EP&amp;iid&#x3D;MS4wLjABAAAANwkJuWIRFOzg5uCpDRpMj4OX-QryoDgn-yYlXQnRwQQ&amp;with_sec_did&#x3D;1&amp;titleType&#x3D;title&amp;share_sign&#x3D;05kGlqGmR4_IwCX.ZGk6xuL0osNA..5ur7b0jbOx6cc-&amp;share_version&#x3D;170400&amp;ts&#x3D;1699262937&amp;from_aid&#x3D;6383&amp;from_ssr&#x3D;1&amp;from&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182?previous_page&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182\&quot;,  ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0WithHttpInfo(List<String> requestBody) throws ApiException {
        okhttp3.Call localVarCall = getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0ValidateBeforeCall(requestBody, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取列表作品id/Extract list video id (asynchronously)
     * # [中文]  ### 用途:  - 提取列表作品id（最多支持20个链接）  ### 参数:  - url: 作品链接列表  ### 返回:  - 作品id列表   # [English]  ### Purpose:  - Extract list video id (supports up to 20 links)  ### Parameters:  - url: Video link list  ### Return:  - Video id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[     \&quot;0.53 02/26 I@v.sE Fus:/ 你别太帅了郑润泽# 现场版live # 音乐节 # 郑润泽  https://v.douyin.com/iRNBho6u/ 复制此链接，打开Dou音搜索，直接观看视频!\&quot;,     \&quot;https://v.douyin.com/iRNBho6u/\&quot;,     \&quot;https://www.iesdouyin.com/share/video/7298145681699622182/?region&#x3D;CN&amp;mid&#x3D;7298145762238565171&amp;u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAtqpCx0hpOERbdSzQdjRZw-wFPxaqdbAzsKDmbJMUI3KWlMGQHC-n6dXAqa-dM2EP&amp;iid&#x3D;MS4wLjABAAAANwkJuWIRFOzg5uCpDRpMj4OX-QryoDgn-yYlXQnRwQQ&amp;with_sec_did&#x3D;1&amp;titleType&#x3D;title&amp;share_sign&#x3D;05kGlqGmR4_IwCX.ZGk6xuL0osNA..5ur7b0jbOx6cc-&amp;share_version&#x3D;170400&amp;ts&#x3D;1699262937&amp;from_aid&#x3D;6383&amp;from_ssr&#x3D;1&amp;from&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182?previous_page&#x3D;web_code_link\&quot;,     \&quot;https://www.douyin.com/video/7298145681699622182\&quot;,  ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0Async(List<String> requestBody, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllAwemeIdApiV1DouyinWebGetAllAwemeIdPost_0ValidateBeforeCall(requestBody, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost
     * @param requestBody  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPostCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_all_sec_user_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPostValidateBeforeCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPostCall(requestBody, _callback);
        return localVarCall;

    }

    /**
     * 提取列表用户id/Extract list user id
     * # [中文]  ### 用途:  - 提取列表用户id  ### 参数:  - url: 用户主页链接列表（最多支持20个链接）  ### 返回:  - 用户sec_user_id列表   # [English]  ### Purpose:  - Extract list user id  ### Parameters:  - url: User homepage link list (supports up to 20 links)  ### Return:  - User sec_user_id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[    \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE?vid&#x3D;7285950278132616463\&quot;,    \&quot;https://www.douyin.com/user/MS4wLjABAAAAVsneOf144eGDFf8Xp9QNb1VW6ovXnNT5SqJBhJfe8KQBKWKDTWK5Hh-_i9mJzb8C\&quot;,    \&quot;长按复制此条消息，打开抖音搜索，查看TA的更多作品。 https://v.douyin.com/idFqvUms/\&quot;,    \&quot;https://v.douyin.com/idFqvUms/\&quot;     ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost(List<String> requestBody) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPostWithHttpInfo(requestBody);
        return localVarResp.getData();
    }

    /**
     * 提取列表用户id/Extract list user id
     * # [中文]  ### 用途:  - 提取列表用户id  ### 参数:  - url: 用户主页链接列表（最多支持20个链接）  ### 返回:  - 用户sec_user_id列表   # [English]  ### Purpose:  - Extract list user id  ### Parameters:  - url: User homepage link list (supports up to 20 links)  ### Return:  - User sec_user_id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[    \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE?vid&#x3D;7285950278132616463\&quot;,    \&quot;https://www.douyin.com/user/MS4wLjABAAAAVsneOf144eGDFf8Xp9QNb1VW6ovXnNT5SqJBhJfe8KQBKWKDTWK5Hh-_i9mJzb8C\&quot;,    \&quot;长按复制此条消息，打开抖音搜索，查看TA的更多作品。 https://v.douyin.com/idFqvUms/\&quot;,    \&quot;https://v.douyin.com/idFqvUms/\&quot;     ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPostWithHttpInfo(List<String> requestBody) throws ApiException {
        okhttp3.Call localVarCall = getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPostValidateBeforeCall(requestBody, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取列表用户id/Extract list user id (asynchronously)
     * # [中文]  ### 用途:  - 提取列表用户id  ### 参数:  - url: 用户主页链接列表（最多支持20个链接）  ### 返回:  - 用户sec_user_id列表   # [English]  ### Purpose:  - Extract list user id  ### Parameters:  - url: User homepage link list (supports up to 20 links)  ### Return:  - User sec_user_id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[    \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE?vid&#x3D;7285950278132616463\&quot;,    \&quot;https://www.douyin.com/user/MS4wLjABAAAAVsneOf144eGDFf8Xp9QNb1VW6ovXnNT5SqJBhJfe8KQBKWKDTWK5Hh-_i9mJzb8C\&quot;,    \&quot;长按复制此条消息，打开抖音搜索，查看TA的更多作品。 https://v.douyin.com/idFqvUms/\&quot;,    \&quot;https://v.douyin.com/idFqvUms/\&quot;     ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPostAsync(List<String> requestBody, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPostValidateBeforeCall(requestBody, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0
     * @param requestBody  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0Call(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_all_sec_user_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0ValidateBeforeCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0Call(requestBody, _callback);
        return localVarCall;

    }

    /**
     * 提取列表用户id/Extract list user id
     * # [中文]  ### 用途:  - 提取列表用户id  ### 参数:  - url: 用户主页链接列表（最多支持20个链接）  ### 返回:  - 用户sec_user_id列表   # [English]  ### Purpose:  - Extract list user id  ### Parameters:  - url: User homepage link list (supports up to 20 links)  ### Return:  - User sec_user_id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[    \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE?vid&#x3D;7285950278132616463\&quot;,    \&quot;https://www.douyin.com/user/MS4wLjABAAAAVsneOf144eGDFf8Xp9QNb1VW6ovXnNT5SqJBhJfe8KQBKWKDTWK5Hh-_i9mJzb8C\&quot;,    \&quot;长按复制此条消息，打开抖音搜索，查看TA的更多作品。 https://v.douyin.com/idFqvUms/\&quot;,    \&quot;https://v.douyin.com/idFqvUms/\&quot;     ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0(List<String> requestBody) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0WithHttpInfo(requestBody);
        return localVarResp.getData();
    }

    /**
     * 提取列表用户id/Extract list user id
     * # [中文]  ### 用途:  - 提取列表用户id  ### 参数:  - url: 用户主页链接列表（最多支持20个链接）  ### 返回:  - 用户sec_user_id列表   # [English]  ### Purpose:  - Extract list user id  ### Parameters:  - url: User homepage link list (supports up to 20 links)  ### Return:  - User sec_user_id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[    \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE?vid&#x3D;7285950278132616463\&quot;,    \&quot;https://www.douyin.com/user/MS4wLjABAAAAVsneOf144eGDFf8Xp9QNb1VW6ovXnNT5SqJBhJfe8KQBKWKDTWK5Hh-_i9mJzb8C\&quot;,    \&quot;长按复制此条消息，打开抖音搜索，查看TA的更多作品。 https://v.douyin.com/idFqvUms/\&quot;,    \&quot;https://v.douyin.com/idFqvUms/\&quot;     ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0WithHttpInfo(List<String> requestBody) throws ApiException {
        okhttp3.Call localVarCall = getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0ValidateBeforeCall(requestBody, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取列表用户id/Extract list user id (asynchronously)
     * # [中文]  ### 用途:  - 提取列表用户id  ### 参数:  - url: 用户主页链接列表（最多支持20个链接）  ### 返回:  - 用户sec_user_id列表   # [English]  ### Purpose:  - Extract list user id  ### Parameters:  - url: User homepage link list (supports up to 20 links)  ### Return:  - User sec_user_id list   # [示例/Example]  &#x60;&#x60;&#x60;json  { \&quot;urls\&quot;:[    \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE?vid&#x3D;7285950278132616463\&quot;,    \&quot;https://www.douyin.com/user/MS4wLjABAAAAVsneOf144eGDFf8Xp9QNb1VW6ovXnNT5SqJBhJfe8KQBKWKDTWK5Hh-_i9mJzb8C\&quot;,    \&quot;长按复制此条消息，打开抖音搜索，查看TA的更多作品。 https://v.douyin.com/idFqvUms/\&quot;,    \&quot;https://v.douyin.com/idFqvUms/\&quot;     ]  }  &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0Async(List<String> requestBody, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllSecUserIdApiV1DouyinWebGetAllSecUserIdPost_0ValidateBeforeCall(requestBody, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost
     * @param requestBody  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPostCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_all_webcast_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPostValidateBeforeCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPostCall(requestBody, _callback);
        return localVarCall;

    }

    /**
     * 提取列表直播间号/Extract list webcast id
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接列表（最多支持20个链接） ### 返回: - 直播间号列表  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link list (supports up to 20 links) ### Return: - Room id list  # [示例/Example] &#x60;&#x60;&#x60;json {   \&quot;urls\&quot;: [         \&quot;https://live.douyin.com/775841227732\&quot;,         \&quot;https://live.douyin.com/775841227732?room_id&#x3D;7318296342189919011&amp;enter_from_merge&#x3D;web_share_link&amp;enter_method&#x3D;web_share_link&amp;previous_page&#x3D;app_code_link\&quot;,         &#39;https://webcast.amemv.com/douyin/webcast/reflow/7318296342189919011?u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAEs86TBQPNwAo-RGrcxWyCdwKhI66AK3Pqf3ieo6HaxI&amp;iid&#x3D;MS4wLjABAAAA0ptpM-zzoliLEeyvWOCUt-_dQza4uSjlIvbtIazXnCY&amp;with_sec_did&#x3D;1&amp;use_link_command&#x3D;1&amp;ecom_share_track_params&#x3D;&amp;extra_params&#x3D;{\&quot;from_request_id\&quot;:\&quot;20231230162057EC005772A8EAA0199906\&quot;,\&quot;im_channel_invite_id\&quot;:\&quot;0\&quot;}&amp;user_id&#x3D;3644207898042206&amp;liveId&#x3D;7318296342189919011&amp;from&#x3D;share&amp;style&#x3D;share&amp;enter_method&#x3D;click_share&amp;roomId&#x3D;7318296342189919011&amp;activity_info&#x3D;{}&#39;,         \&quot;6i- Q@x.Sl 03/23 【醒子8ke的直播间】  点击打开👉https://v.douyin.com/i8tBR7hX/  或长按复制此条消息，打开抖音，看TA直播\&quot;,         \&quot;https://v.douyin.com/i8tBR7hX/\&quot;,         ] } &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost(List<String> requestBody) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPostWithHttpInfo(requestBody);
        return localVarResp.getData();
    }

    /**
     * 提取列表直播间号/Extract list webcast id
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接列表（最多支持20个链接） ### 返回: - 直播间号列表  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link list (supports up to 20 links) ### Return: - Room id list  # [示例/Example] &#x60;&#x60;&#x60;json {   \&quot;urls\&quot;: [         \&quot;https://live.douyin.com/775841227732\&quot;,         \&quot;https://live.douyin.com/775841227732?room_id&#x3D;7318296342189919011&amp;enter_from_merge&#x3D;web_share_link&amp;enter_method&#x3D;web_share_link&amp;previous_page&#x3D;app_code_link\&quot;,         &#39;https://webcast.amemv.com/douyin/webcast/reflow/7318296342189919011?u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAEs86TBQPNwAo-RGrcxWyCdwKhI66AK3Pqf3ieo6HaxI&amp;iid&#x3D;MS4wLjABAAAA0ptpM-zzoliLEeyvWOCUt-_dQza4uSjlIvbtIazXnCY&amp;with_sec_did&#x3D;1&amp;use_link_command&#x3D;1&amp;ecom_share_track_params&#x3D;&amp;extra_params&#x3D;{\&quot;from_request_id\&quot;:\&quot;20231230162057EC005772A8EAA0199906\&quot;,\&quot;im_channel_invite_id\&quot;:\&quot;0\&quot;}&amp;user_id&#x3D;3644207898042206&amp;liveId&#x3D;7318296342189919011&amp;from&#x3D;share&amp;style&#x3D;share&amp;enter_method&#x3D;click_share&amp;roomId&#x3D;7318296342189919011&amp;activity_info&#x3D;{}&#39;,         \&quot;6i- Q@x.Sl 03/23 【醒子8ke的直播间】  点击打开👉https://v.douyin.com/i8tBR7hX/  或长按复制此条消息，打开抖音，看TA直播\&quot;,         \&quot;https://v.douyin.com/i8tBR7hX/\&quot;,         ] } &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPostWithHttpInfo(List<String> requestBody) throws ApiException {
        okhttp3.Call localVarCall = getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPostValidateBeforeCall(requestBody, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取列表直播间号/Extract list webcast id (asynchronously)
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接列表（最多支持20个链接） ### 返回: - 直播间号列表  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link list (supports up to 20 links) ### Return: - Room id list  # [示例/Example] &#x60;&#x60;&#x60;json {   \&quot;urls\&quot;: [         \&quot;https://live.douyin.com/775841227732\&quot;,         \&quot;https://live.douyin.com/775841227732?room_id&#x3D;7318296342189919011&amp;enter_from_merge&#x3D;web_share_link&amp;enter_method&#x3D;web_share_link&amp;previous_page&#x3D;app_code_link\&quot;,         &#39;https://webcast.amemv.com/douyin/webcast/reflow/7318296342189919011?u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAEs86TBQPNwAo-RGrcxWyCdwKhI66AK3Pqf3ieo6HaxI&amp;iid&#x3D;MS4wLjABAAAA0ptpM-zzoliLEeyvWOCUt-_dQza4uSjlIvbtIazXnCY&amp;with_sec_did&#x3D;1&amp;use_link_command&#x3D;1&amp;ecom_share_track_params&#x3D;&amp;extra_params&#x3D;{\&quot;from_request_id\&quot;:\&quot;20231230162057EC005772A8EAA0199906\&quot;,\&quot;im_channel_invite_id\&quot;:\&quot;0\&quot;}&amp;user_id&#x3D;3644207898042206&amp;liveId&#x3D;7318296342189919011&amp;from&#x3D;share&amp;style&#x3D;share&amp;enter_method&#x3D;click_share&amp;roomId&#x3D;7318296342189919011&amp;activity_info&#x3D;{}&#39;,         \&quot;6i- Q@x.Sl 03/23 【醒子8ke的直播间】  点击打开👉https://v.douyin.com/i8tBR7hX/  或长按复制此条消息，打开抖音，看TA直播\&quot;,         \&quot;https://v.douyin.com/i8tBR7hX/\&quot;,         ] } &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPostAsync(List<String> requestBody, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPostValidateBeforeCall(requestBody, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0
     * @param requestBody  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0Call(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_all_webcast_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0ValidateBeforeCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0Call(requestBody, _callback);
        return localVarCall;

    }

    /**
     * 提取列表直播间号/Extract list webcast id
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接列表（最多支持20个链接） ### 返回: - 直播间号列表  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link list (supports up to 20 links) ### Return: - Room id list  # [示例/Example] &#x60;&#x60;&#x60;json {   \&quot;urls\&quot;: [         \&quot;https://live.douyin.com/775841227732\&quot;,         \&quot;https://live.douyin.com/775841227732?room_id&#x3D;7318296342189919011&amp;enter_from_merge&#x3D;web_share_link&amp;enter_method&#x3D;web_share_link&amp;previous_page&#x3D;app_code_link\&quot;,         &#39;https://webcast.amemv.com/douyin/webcast/reflow/7318296342189919011?u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAEs86TBQPNwAo-RGrcxWyCdwKhI66AK3Pqf3ieo6HaxI&amp;iid&#x3D;MS4wLjABAAAA0ptpM-zzoliLEeyvWOCUt-_dQza4uSjlIvbtIazXnCY&amp;with_sec_did&#x3D;1&amp;use_link_command&#x3D;1&amp;ecom_share_track_params&#x3D;&amp;extra_params&#x3D;{\&quot;from_request_id\&quot;:\&quot;20231230162057EC005772A8EAA0199906\&quot;,\&quot;im_channel_invite_id\&quot;:\&quot;0\&quot;}&amp;user_id&#x3D;3644207898042206&amp;liveId&#x3D;7318296342189919011&amp;from&#x3D;share&amp;style&#x3D;share&amp;enter_method&#x3D;click_share&amp;roomId&#x3D;7318296342189919011&amp;activity_info&#x3D;{}&#39;,         \&quot;6i- Q@x.Sl 03/23 【醒子8ke的直播间】  点击打开👉https://v.douyin.com/i8tBR7hX/  或长按复制此条消息，打开抖音，看TA直播\&quot;,         \&quot;https://v.douyin.com/i8tBR7hX/\&quot;,         ] } &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0(List<String> requestBody) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0WithHttpInfo(requestBody);
        return localVarResp.getData();
    }

    /**
     * 提取列表直播间号/Extract list webcast id
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接列表（最多支持20个链接） ### 返回: - 直播间号列表  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link list (supports up to 20 links) ### Return: - Room id list  # [示例/Example] &#x60;&#x60;&#x60;json {   \&quot;urls\&quot;: [         \&quot;https://live.douyin.com/775841227732\&quot;,         \&quot;https://live.douyin.com/775841227732?room_id&#x3D;7318296342189919011&amp;enter_from_merge&#x3D;web_share_link&amp;enter_method&#x3D;web_share_link&amp;previous_page&#x3D;app_code_link\&quot;,         &#39;https://webcast.amemv.com/douyin/webcast/reflow/7318296342189919011?u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAEs86TBQPNwAo-RGrcxWyCdwKhI66AK3Pqf3ieo6HaxI&amp;iid&#x3D;MS4wLjABAAAA0ptpM-zzoliLEeyvWOCUt-_dQza4uSjlIvbtIazXnCY&amp;with_sec_did&#x3D;1&amp;use_link_command&#x3D;1&amp;ecom_share_track_params&#x3D;&amp;extra_params&#x3D;{\&quot;from_request_id\&quot;:\&quot;20231230162057EC005772A8EAA0199906\&quot;,\&quot;im_channel_invite_id\&quot;:\&quot;0\&quot;}&amp;user_id&#x3D;3644207898042206&amp;liveId&#x3D;7318296342189919011&amp;from&#x3D;share&amp;style&#x3D;share&amp;enter_method&#x3D;click_share&amp;roomId&#x3D;7318296342189919011&amp;activity_info&#x3D;{}&#39;,         \&quot;6i- Q@x.Sl 03/23 【醒子8ke的直播间】  点击打开👉https://v.douyin.com/i8tBR7hX/  或长按复制此条消息，打开抖音，看TA直播\&quot;,         \&quot;https://v.douyin.com/i8tBR7hX/\&quot;,         ] } &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0WithHttpInfo(List<String> requestBody) throws ApiException {
        okhttp3.Call localVarCall = getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0ValidateBeforeCall(requestBody, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取列表直播间号/Extract list webcast id (asynchronously)
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接列表（最多支持20个链接） ### 返回: - 直播间号列表  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link list (supports up to 20 links) ### Return: - Room id list  # [示例/Example] &#x60;&#x60;&#x60;json {   \&quot;urls\&quot;: [         \&quot;https://live.douyin.com/775841227732\&quot;,         \&quot;https://live.douyin.com/775841227732?room_id&#x3D;7318296342189919011&amp;enter_from_merge&#x3D;web_share_link&amp;enter_method&#x3D;web_share_link&amp;previous_page&#x3D;app_code_link\&quot;,         &#39;https://webcast.amemv.com/douyin/webcast/reflow/7318296342189919011?u_code&#x3D;l1j9bkbd&amp;did&#x3D;MS4wLjABAAAAEs86TBQPNwAo-RGrcxWyCdwKhI66AK3Pqf3ieo6HaxI&amp;iid&#x3D;MS4wLjABAAAA0ptpM-zzoliLEeyvWOCUt-_dQza4uSjlIvbtIazXnCY&amp;with_sec_did&#x3D;1&amp;use_link_command&#x3D;1&amp;ecom_share_track_params&#x3D;&amp;extra_params&#x3D;{\&quot;from_request_id\&quot;:\&quot;20231230162057EC005772A8EAA0199906\&quot;,\&quot;im_channel_invite_id\&quot;:\&quot;0\&quot;}&amp;user_id&#x3D;3644207898042206&amp;liveId&#x3D;7318296342189919011&amp;from&#x3D;share&amp;style&#x3D;share&amp;enter_method&#x3D;click_share&amp;roomId&#x3D;7318296342189919011&amp;activity_info&#x3D;{}&#39;,         \&quot;6i- Q@x.Sl 03/23 【醒子8ke的直播间】  点击打开👉https://v.douyin.com/i8tBR7hX/  或长按复制此条消息，打开抖音，看TA直播\&quot;,         \&quot;https://v.douyin.com/i8tBR7hX/\&quot;,         ] } &#x60;&#x60;&#x60;
     * @param requestBody  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0Async(List<String> requestBody, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllWebcastIdApiV1DouyinWebGetAllWebcastIdPost_0ValidateBeforeCall(requestBody, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAwemeIdApiV1DouyinWebGetAwemeIdGet
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAwemeIdApiV1DouyinWebGetAwemeIdGetCall(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_aweme_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAwemeIdApiV1DouyinWebGetAwemeIdGetValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling getAwemeIdApiV1DouyinWebGetAwemeIdGet(Async)");
        }
        

        okhttp3.Call localVarCall = getAwemeIdApiV1DouyinWebGetAwemeIdGetCall(url, _callback);
        return localVarCall;

    }

    /**
     * 提取单个作品id/Extract single video id
     * # [中文] ### 用途: - 提取单个作品id ### 参数: - url: 作品链接 ### 返回: - 作品id  # [English] ### Purpose: - Extract single video id ### Parameters: - url: Video link ### Return: - Video id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/video/7298145681699622182\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getAwemeIdApiV1DouyinWebGetAwemeIdGet(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getAwemeIdApiV1DouyinWebGetAwemeIdGetWithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 提取单个作品id/Extract single video id
     * # [中文] ### 用途: - 提取单个作品id ### 参数: - url: 作品链接 ### 返回: - 作品id  # [English] ### Purpose: - Extract single video id ### Parameters: - url: Video link ### Return: - Video id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/video/7298145681699622182\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getAwemeIdApiV1DouyinWebGetAwemeIdGetWithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = getAwemeIdApiV1DouyinWebGetAwemeIdGetValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取单个作品id/Extract single video id (asynchronously)
     * # [中文] ### 用途: - 提取单个作品id ### 参数: - url: 作品链接 ### 返回: - 作品id  # [English] ### Purpose: - Extract single video id ### Parameters: - url: Video link ### Return: - Video id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/video/7298145681699622182\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAwemeIdApiV1DouyinWebGetAwemeIdGetAsync(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAwemeIdApiV1DouyinWebGetAwemeIdGetValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getAwemeIdApiV1DouyinWebGetAwemeIdGet_0
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAwemeIdApiV1DouyinWebGetAwemeIdGet_0Call(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_aweme_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAwemeIdApiV1DouyinWebGetAwemeIdGet_0ValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling getAwemeIdApiV1DouyinWebGetAwemeIdGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getAwemeIdApiV1DouyinWebGetAwemeIdGet_0Call(url, _callback);
        return localVarCall;

    }

    /**
     * 提取单个作品id/Extract single video id
     * # [中文] ### 用途: - 提取单个作品id ### 参数: - url: 作品链接 ### 返回: - 作品id  # [English] ### Purpose: - Extract single video id ### Parameters: - url: Video link ### Return: - Video id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/video/7298145681699622182\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getAwemeIdApiV1DouyinWebGetAwemeIdGet_0(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getAwemeIdApiV1DouyinWebGetAwemeIdGet_0WithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 提取单个作品id/Extract single video id
     * # [中文] ### 用途: - 提取单个作品id ### 参数: - url: 作品链接 ### 返回: - 作品id  # [English] ### Purpose: - Extract single video id ### Parameters: - url: Video link ### Return: - Video id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/video/7298145681699622182\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getAwemeIdApiV1DouyinWebGetAwemeIdGet_0WithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = getAwemeIdApiV1DouyinWebGetAwemeIdGet_0ValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取单个作品id/Extract single video id (asynchronously)
     * # [中文] ### 用途: - 提取单个作品id ### 参数: - url: 作品链接 ### 返回: - 作品id  # [English] ### Purpose: - Extract single video id ### Parameters: - url: Video link ### Return: - Video id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/video/7298145681699622182\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAwemeIdApiV1DouyinWebGetAwemeIdGet_0Async(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAwemeIdApiV1DouyinWebGetAwemeIdGet_0ValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getSecUserIdApiV1DouyinWebGetSecUserIdGet
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSecUserIdApiV1DouyinWebGetSecUserIdGetCall(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_sec_user_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getSecUserIdApiV1DouyinWebGetSecUserIdGetValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling getSecUserIdApiV1DouyinWebGetSecUserIdGet(Async)");
        }
        

        okhttp3.Call localVarCall = getSecUserIdApiV1DouyinWebGetSecUserIdGetCall(url, _callback);
        return localVarCall;

    }

    /**
     * 提取单个用户id/Extract single user id
     * # [中文] ### 用途: - 提取单个用户id ### 参数: - url: 用户主页链接 ### 返回: - 用户sec_user_id  # [English] ### Purpose: - Extract single user id ### Parameters: - url: User homepage link ### Return: - User sec_user_id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getSecUserIdApiV1DouyinWebGetSecUserIdGet(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getSecUserIdApiV1DouyinWebGetSecUserIdGetWithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 提取单个用户id/Extract single user id
     * # [中文] ### 用途: - 提取单个用户id ### 参数: - url: 用户主页链接 ### 返回: - 用户sec_user_id  # [English] ### Purpose: - Extract single user id ### Parameters: - url: User homepage link ### Return: - User sec_user_id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getSecUserIdApiV1DouyinWebGetSecUserIdGetWithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = getSecUserIdApiV1DouyinWebGetSecUserIdGetValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取单个用户id/Extract single user id (asynchronously)
     * # [中文] ### 用途: - 提取单个用户id ### 参数: - url: 用户主页链接 ### 返回: - 用户sec_user_id  # [English] ### Purpose: - Extract single user id ### Parameters: - url: User homepage link ### Return: - User sec_user_id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSecUserIdApiV1DouyinWebGetSecUserIdGetAsync(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getSecUserIdApiV1DouyinWebGetSecUserIdGetValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getSecUserIdApiV1DouyinWebGetSecUserIdGet_0
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSecUserIdApiV1DouyinWebGetSecUserIdGet_0Call(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_sec_user_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getSecUserIdApiV1DouyinWebGetSecUserIdGet_0ValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling getSecUserIdApiV1DouyinWebGetSecUserIdGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getSecUserIdApiV1DouyinWebGetSecUserIdGet_0Call(url, _callback);
        return localVarCall;

    }

    /**
     * 提取单个用户id/Extract single user id
     * # [中文] ### 用途: - 提取单个用户id ### 参数: - url: 用户主页链接 ### 返回: - 用户sec_user_id  # [English] ### Purpose: - Extract single user id ### Parameters: - url: User homepage link ### Return: - User sec_user_id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getSecUserIdApiV1DouyinWebGetSecUserIdGet_0(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getSecUserIdApiV1DouyinWebGetSecUserIdGet_0WithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 提取单个用户id/Extract single user id
     * # [中文] ### 用途: - 提取单个用户id ### 参数: - url: 用户主页链接 ### 返回: - 用户sec_user_id  # [English] ### Purpose: - Extract single user id ### Parameters: - url: User homepage link ### Return: - User sec_user_id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getSecUserIdApiV1DouyinWebGetSecUserIdGet_0WithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = getSecUserIdApiV1DouyinWebGetSecUserIdGet_0ValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取单个用户id/Extract single user id (asynchronously)
     * # [中文] ### 用途: - 提取单个用户id ### 参数: - url: 用户主页链接 ### 返回: - 用户sec_user_id  # [English] ### Purpose: - Extract single user id ### Parameters: - url: User homepage link ### Return: - User sec_user_id  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/user/MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getSecUserIdApiV1DouyinWebGetSecUserIdGet_0Async(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getSecUserIdApiV1DouyinWebGetSecUserIdGet_0ValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getWebcastIdApiV1DouyinWebGetWebcastIdGet
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getWebcastIdApiV1DouyinWebGetWebcastIdGetCall(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_webcast_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getWebcastIdApiV1DouyinWebGetWebcastIdGetValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling getWebcastIdApiV1DouyinWebGetWebcastIdGet(Async)");
        }
        

        okhttp3.Call localVarCall = getWebcastIdApiV1DouyinWebGetWebcastIdGetCall(url, _callback);
        return localVarCall;

    }

    /**
     * 提取直播间号/Extract webcast id
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接 ### 返回: - 直播间号  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link ### Return: - Room id  # [示例/Example] url &#x3D; \&quot;https://live.douyin.com/775841227732\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getWebcastIdApiV1DouyinWebGetWebcastIdGet(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getWebcastIdApiV1DouyinWebGetWebcastIdGetWithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 提取直播间号/Extract webcast id
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接 ### 返回: - 直播间号  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link ### Return: - Room id  # [示例/Example] url &#x3D; \&quot;https://live.douyin.com/775841227732\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getWebcastIdApiV1DouyinWebGetWebcastIdGetWithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = getWebcastIdApiV1DouyinWebGetWebcastIdGetValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取直播间号/Extract webcast id (asynchronously)
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接 ### 返回: - 直播间号  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link ### Return: - Room id  # [示例/Example] url &#x3D; \&quot;https://live.douyin.com/775841227732\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getWebcastIdApiV1DouyinWebGetWebcastIdGetAsync(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getWebcastIdApiV1DouyinWebGetWebcastIdGetValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getWebcastIdApiV1DouyinWebGetWebcastIdGet_0
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getWebcastIdApiV1DouyinWebGetWebcastIdGet_0Call(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/get_webcast_id";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getWebcastIdApiV1DouyinWebGetWebcastIdGet_0ValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling getWebcastIdApiV1DouyinWebGetWebcastIdGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getWebcastIdApiV1DouyinWebGetWebcastIdGet_0Call(url, _callback);
        return localVarCall;

    }

    /**
     * 提取直播间号/Extract webcast id
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接 ### 返回: - 直播间号  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link ### Return: - Room id  # [示例/Example] url &#x3D; \&quot;https://live.douyin.com/775841227732\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getWebcastIdApiV1DouyinWebGetWebcastIdGet_0(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getWebcastIdApiV1DouyinWebGetWebcastIdGet_0WithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 提取直播间号/Extract webcast id
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接 ### 返回: - 直播间号  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link ### Return: - Room id  # [示例/Example] url &#x3D; \&quot;https://live.douyin.com/775841227732\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getWebcastIdApiV1DouyinWebGetWebcastIdGet_0WithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = getWebcastIdApiV1DouyinWebGetWebcastIdGet_0ValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 提取直播间号/Extract webcast id (asynchronously)
     * # [中文] ### 用途: - 提取列表直播间号 ### 参数: - url: 直播间链接 ### 返回: - 直播间号  # [English] ### Purpose: - Extract list webcast id ### Parameters: - url: Room link ### Return: - Room id  # [示例/Example] url &#x3D; \&quot;https://live.douyin.com/775841227732\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getWebcastIdApiV1DouyinWebGetWebcastIdGet_0Async(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getWebcastIdApiV1DouyinWebGetWebcastIdGet_0ValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for handlerUserProfileApiV1DouyinWebHandlerUserProfileGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1DouyinWebHandlerUserProfileGetCall(String secUserId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/handler_user_profile";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call handlerUserProfileApiV1DouyinWebHandlerUserProfileGetValidateBeforeCall(String secUserId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling handlerUserProfileApiV1DouyinWebHandlerUserProfileGet(Async)");
        }
        

        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinWebHandlerUserProfileGetCall(secUserId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel handlerUserProfileApiV1DouyinWebHandlerUserProfileGet(String secUserId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = handlerUserProfileApiV1DouyinWebHandlerUserProfileGetWithHttpInfo(secUserId);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> handlerUserProfileApiV1DouyinWebHandlerUserProfileGetWithHttpInfo(String secUserId) throws ApiException {
        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinWebHandlerUserProfileGetValidateBeforeCall(secUserId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的信息/Get information of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1DouyinWebHandlerUserProfileGetAsync(String secUserId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinWebHandlerUserProfileGetValidateBeforeCall(secUserId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0Call(String secUserId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/web/handler_user_profile";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0ValidateBeforeCall(String secUserId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0Call(secUserId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0(String secUserId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0WithHttpInfo(secUserId);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0WithHttpInfo(String secUserId) throws ApiException {
        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0ValidateBeforeCall(secUserId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的信息/Get information of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0Async(String secUserId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinWebHandlerUserProfileGet_0ValidateBeforeCall(secUserId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
