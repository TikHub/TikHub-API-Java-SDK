/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class XiaohongshuWebApiApi {
    private ApiClient localVarApiClient;

    public XiaohongshuWebApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public XiaohongshuWebApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet
     * @param noteId 笔记ID/Note ID (required)
     * @param commentId 评论ID/Comment ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGetCall(String noteId, String commentId, String lastCursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_note_comment_replies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (noteId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note_id", noteId));
        }

        if (commentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("comment_id", commentId));
        }

        if (lastCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lastCursor", lastCursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGetValidateBeforeCall(String noteId, String commentId, String lastCursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'noteId' is set
        if (noteId == null) {
            throw new ApiException("Missing the required parameter 'noteId' when calling getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet(Async)");
        }
        
        // verify the required parameter 'commentId' is set
        if (commentId == null) {
            throw new ApiException("Missing the required parameter 'commentId' when calling getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet(Async)");
        }
        

        okhttp3.Call localVarCall = getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGetCall(noteId, commentId, lastCursor, _callback);
        return localVarCall;

    }

    /**
     * 获取笔记评论回复/Get note comment replies
     * # [中文] ### 用途: - 获取笔记评论回复 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - comment_id: 评论ID - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论回复列表  # [English] ### Purpose: - Get note comment replies ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - comment_id: Comment ID - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comment replies list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; comment_id&#x3D;\&quot;6683ec5b000000000303b91a\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param commentId 评论ID/Comment ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet(String noteId, String commentId, String lastCursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGetWithHttpInfo(noteId, commentId, lastCursor);
        return localVarResp.getData();
    }

    /**
     * 获取笔记评论回复/Get note comment replies
     * # [中文] ### 用途: - 获取笔记评论回复 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - comment_id: 评论ID - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论回复列表  # [English] ### Purpose: - Get note comment replies ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - comment_id: Comment ID - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comment replies list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; comment_id&#x3D;\&quot;6683ec5b000000000303b91a\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param commentId 评论ID/Comment ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGetWithHttpInfo(String noteId, String commentId, String lastCursor) throws ApiException {
        okhttp3.Call localVarCall = getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGetValidateBeforeCall(noteId, commentId, lastCursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取笔记评论回复/Get note comment replies (asynchronously)
     * # [中文] ### 用途: - 获取笔记评论回复 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - comment_id: 评论ID - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论回复列表  # [English] ### Purpose: - Get note comment replies ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - comment_id: Comment ID - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comment replies list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; comment_id&#x3D;\&quot;6683ec5b000000000303b91a\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param commentId 评论ID/Comment ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGetAsync(String noteId, String commentId, String lastCursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGetValidateBeforeCall(noteId, commentId, lastCursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0
     * @param noteId 笔记ID/Note ID (required)
     * @param commentId 评论ID/Comment ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0Call(String noteId, String commentId, String lastCursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_note_comment_replies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (noteId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note_id", noteId));
        }

        if (commentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("comment_id", commentId));
        }

        if (lastCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lastCursor", lastCursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0ValidateBeforeCall(String noteId, String commentId, String lastCursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'noteId' is set
        if (noteId == null) {
            throw new ApiException("Missing the required parameter 'noteId' when calling getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0(Async)");
        }
        
        // verify the required parameter 'commentId' is set
        if (commentId == null) {
            throw new ApiException("Missing the required parameter 'commentId' when calling getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0Call(noteId, commentId, lastCursor, _callback);
        return localVarCall;

    }

    /**
     * 获取笔记评论回复/Get note comment replies
     * # [中文] ### 用途: - 获取笔记评论回复 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - comment_id: 评论ID - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论回复列表  # [English] ### Purpose: - Get note comment replies ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - comment_id: Comment ID - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comment replies list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; comment_id&#x3D;\&quot;6683ec5b000000000303b91a\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param commentId 评论ID/Comment ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0(String noteId, String commentId, String lastCursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0WithHttpInfo(noteId, commentId, lastCursor);
        return localVarResp.getData();
    }

    /**
     * 获取笔记评论回复/Get note comment replies
     * # [中文] ### 用途: - 获取笔记评论回复 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - comment_id: 评论ID - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论回复列表  # [English] ### Purpose: - Get note comment replies ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - comment_id: Comment ID - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comment replies list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; comment_id&#x3D;\&quot;6683ec5b000000000303b91a\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param commentId 评论ID/Comment ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0WithHttpInfo(String noteId, String commentId, String lastCursor) throws ApiException {
        okhttp3.Call localVarCall = getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0ValidateBeforeCall(noteId, commentId, lastCursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取笔记评论回复/Get note comment replies (asynchronously)
     * # [中文] ### 用途: - 获取笔记评论回复 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - comment_id: 评论ID - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论回复列表  # [English] ### Purpose: - Get note comment replies ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - comment_id: Comment ID - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comment replies list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; comment_id&#x3D;\&quot;6683ec5b000000000303b91a\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param commentId 评论ID/Comment ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0Async(String noteId, String commentId, String lastCursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNoteCommentRepliesApiV1XiaohongshuWebGetNoteCommentRepliesGet_0ValidateBeforeCall(noteId, commentId, lastCursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet
     * @param noteId 笔记ID/Note ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGetCall(String noteId, String lastCursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_note_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (noteId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note_id", noteId));
        }

        if (lastCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lastCursor", lastCursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGetValidateBeforeCall(String noteId, String lastCursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'noteId' is set
        if (noteId == null) {
            throw new ApiException("Missing the required parameter 'noteId' when calling getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet(Async)");
        }
        

        okhttp3.Call localVarCall = getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGetCall(noteId, lastCursor, _callback);
        return localVarCall;

    }

    /**
     * 获取笔记评论/Get note comments
     * # [中文] ### 用途: - 获取笔记评论 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论列表  # [English] ### Purpose: - Get note comments ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comments list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet(String noteId, String lastCursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGetWithHttpInfo(noteId, lastCursor);
        return localVarResp.getData();
    }

    /**
     * 获取笔记评论/Get note comments
     * # [中文] ### 用途: - 获取笔记评论 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论列表  # [English] ### Purpose: - Get note comments ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comments list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGetWithHttpInfo(String noteId, String lastCursor) throws ApiException {
        okhttp3.Call localVarCall = getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGetValidateBeforeCall(noteId, lastCursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取笔记评论/Get note comments (asynchronously)
     * # [中文] ### 用途: - 获取笔记评论 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论列表  # [English] ### Purpose: - Get note comments ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comments list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGetAsync(String noteId, String lastCursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGetValidateBeforeCall(noteId, lastCursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0
     * @param noteId 笔记ID/Note ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0Call(String noteId, String lastCursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_note_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (noteId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note_id", noteId));
        }

        if (lastCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lastCursor", lastCursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0ValidateBeforeCall(String noteId, String lastCursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'noteId' is set
        if (noteId == null) {
            throw new ApiException("Missing the required parameter 'noteId' when calling getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0Call(noteId, lastCursor, _callback);
        return localVarCall;

    }

    /**
     * 获取笔记评论/Get note comments
     * # [中文] ### 用途: - 获取笔记评论 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论列表  # [English] ### Purpose: - Get note comments ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comments list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0(String noteId, String lastCursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0WithHttpInfo(noteId, lastCursor);
        return localVarResp.getData();
    }

    /**
     * 获取笔记评论/Get note comments
     * # [中文] ### 用途: - 获取笔记评论 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论列表  # [English] ### Purpose: - Get note comments ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comments list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0WithHttpInfo(String noteId, String lastCursor) throws ApiException {
        okhttp3.Call localVarCall = getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0ValidateBeforeCall(noteId, lastCursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取笔记评论/Get note comments (asynchronously)
     * # [中文] ### 用途: - 获取笔记评论 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的游标 ### 返回: - 笔记评论列表  # [English] ### Purpose: - Get note comments ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the cursor returned in the last response for subsequent requests ### Return: - Note comments list  # [示例/Example] note_id&#x3D;\&quot;6683b283000000001f0052bf\&quot; lastCursor&#x3D;None
     * @param noteId 笔记ID/Note ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0Async(String noteId, String lastCursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNoteCommentsApiV1XiaohongshuWebGetNoteCommentsGet_0ValidateBeforeCall(noteId, lastCursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet
     * @param noteId 笔记ID/Note ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGetCall(String noteId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_note_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (noteId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note_id", noteId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGetValidateBeforeCall(String noteId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'noteId' is set
        if (noteId == null) {
            throw new ApiException("Missing the required parameter 'noteId' when calling getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet(Async)");
        }
        

        okhttp3.Call localVarCall = getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGetCall(noteId, _callback);
        return localVarCall;

    }

    /**
     * 获取笔记信息/Get note info
     * # [中文] ### 用途: - 获取笔记信息V1 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V1 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet(String noteId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGetWithHttpInfo(noteId);
        return localVarResp.getData();
    }

    /**
     * 获取笔记信息/Get note info
     * # [中文] ### 用途: - 获取笔记信息V1 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V1 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGetWithHttpInfo(String noteId) throws ApiException {
        okhttp3.Call localVarCall = getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGetValidateBeforeCall(noteId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取笔记信息/Get note info (asynchronously)
     * # [中文] ### 用途: - 获取笔记信息V1 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V1 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGetAsync(String noteId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGetValidateBeforeCall(noteId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0
     * @param noteId 笔记ID/Note ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0Call(String noteId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_note_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (noteId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note_id", noteId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0ValidateBeforeCall(String noteId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'noteId' is set
        if (noteId == null) {
            throw new ApiException("Missing the required parameter 'noteId' when calling getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0Call(noteId, _callback);
        return localVarCall;

    }

    /**
     * 获取笔记信息/Get note info
     * # [中文] ### 用途: - 获取笔记信息V1 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V1 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0(String noteId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0WithHttpInfo(noteId);
        return localVarResp.getData();
    }

    /**
     * 获取笔记信息/Get note info
     * # [中文] ### 用途: - 获取笔记信息V1 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V1 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0WithHttpInfo(String noteId) throws ApiException {
        okhttp3.Call localVarCall = getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0ValidateBeforeCall(noteId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取笔记信息/Get note info (asynchronously)
     * # [中文] ### 用途: - 获取笔记信息V1 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V1 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0Async(String noteId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNoteInfoV1ApiV1XiaohongshuWebGetNoteInfoGet_0ValidateBeforeCall(noteId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get
     * @param noteId 笔记ID/Note ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2GetCall(String noteId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_note_info_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (noteId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note_id", noteId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2GetValidateBeforeCall(String noteId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'noteId' is set
        if (noteId == null) {
            throw new ApiException("Missing the required parameter 'noteId' when calling getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get(Async)");
        }
        

        okhttp3.Call localVarCall = getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2GetCall(noteId, _callback);
        return localVarCall;

    }

    /**
     * 获取笔记信息/Get note info
     * # [中文] ### 用途: - 获取笔记信息V2 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V2 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get(String noteId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2GetWithHttpInfo(noteId);
        return localVarResp.getData();
    }

    /**
     * 获取笔记信息/Get note info
     * # [中文] ### 用途: - 获取笔记信息V2 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V2 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2GetWithHttpInfo(String noteId) throws ApiException {
        okhttp3.Call localVarCall = getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2GetValidateBeforeCall(noteId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取笔记信息/Get note info (asynchronously)
     * # [中文] ### 用途: - 获取笔记信息V2 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V2 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2GetAsync(String noteId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2GetValidateBeforeCall(noteId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0
     * @param noteId 笔记ID/Note ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0Call(String noteId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_note_info_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (noteId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("note_id", noteId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0ValidateBeforeCall(String noteId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'noteId' is set
        if (noteId == null) {
            throw new ApiException("Missing the required parameter 'noteId' when calling getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0Call(noteId, _callback);
        return localVarCall;

    }

    /**
     * 获取笔记信息/Get note info
     * # [中文] ### 用途: - 获取笔记信息V2 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V2 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0(String noteId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0WithHttpInfo(noteId);
        return localVarResp.getData();
    }

    /**
     * 获取笔记信息/Get note info
     * # [中文] ### 用途: - 获取笔记信息V2 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V2 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0WithHttpInfo(String noteId) throws ApiException {
        okhttp3.Call localVarCall = getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0ValidateBeforeCall(noteId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取笔记信息/Get note info (asynchronously)
     * # [中文] ### 用途: - 获取笔记信息V2 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 笔记信息  # [English] ### Purpose: - Get note info V2 ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Note info  # [示例/Example] note_id&#x3D;\&quot;665f95200000000006005624\&quot;
     * @param noteId 笔记ID/Note ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0Async(String noteId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNoteInfoV2ApiV1XiaohongshuWebGetNoteInfoV2Get_0ValidateBeforeCall(noteId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserInfoApiV1XiaohongshuWebGetUserInfoGet
     * @param userId 用户ID/User ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserInfoApiV1XiaohongshuWebGetUserInfoGetCall(String userId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_user_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserInfoApiV1XiaohongshuWebGetUserInfoGetValidateBeforeCall(String userId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling getUserInfoApiV1XiaohongshuWebGetUserInfoGet(Async)");
        }
        

        okhttp3.Call localVarCall = getUserInfoApiV1XiaohongshuWebGetUserInfoGetCall(userId, _callback);
        return localVarCall;

    }

    /**
     * 获取用户信息/Get user info
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 ### 返回: - 用户信息  # [English] ### Purpose: - Get user info ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - User info  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot;
     * @param userId 用户ID/User ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getUserInfoApiV1XiaohongshuWebGetUserInfoGet(String userId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getUserInfoApiV1XiaohongshuWebGetUserInfoGetWithHttpInfo(userId);
        return localVarResp.getData();
    }

    /**
     * 获取用户信息/Get user info
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 ### 返回: - 用户信息  # [English] ### Purpose: - Get user info ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - User info  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot;
     * @param userId 用户ID/User ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getUserInfoApiV1XiaohongshuWebGetUserInfoGetWithHttpInfo(String userId) throws ApiException {
        okhttp3.Call localVarCall = getUserInfoApiV1XiaohongshuWebGetUserInfoGetValidateBeforeCall(userId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户信息/Get user info (asynchronously)
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 ### 返回: - 用户信息  # [English] ### Purpose: - Get user info ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - User info  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot;
     * @param userId 用户ID/User ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserInfoApiV1XiaohongshuWebGetUserInfoGetAsync(String userId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserInfoApiV1XiaohongshuWebGetUserInfoGetValidateBeforeCall(userId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0
     * @param userId 用户ID/User ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0Call(String userId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_user_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0ValidateBeforeCall(String userId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0Call(userId, _callback);
        return localVarCall;

    }

    /**
     * 获取用户信息/Get user info
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 ### 返回: - 用户信息  # [English] ### Purpose: - Get user info ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - User info  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot;
     * @param userId 用户ID/User ID (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0(String userId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0WithHttpInfo(userId);
        return localVarResp.getData();
    }

    /**
     * 获取用户信息/Get user info
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 ### 返回: - 用户信息  # [English] ### Purpose: - Get user info ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - User info  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot;
     * @param userId 用户ID/User ID (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0WithHttpInfo(String userId) throws ApiException {
        okhttp3.Call localVarCall = getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0ValidateBeforeCall(userId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户信息/Get user info (asynchronously)
     * # [中文] ### 用途: - 获取用户信息 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 ### 返回: - 用户信息  # [English] ### Purpose: - Get user info ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - User info  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot;
     * @param userId 用户ID/User ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0Async(String userId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserInfoApiV1XiaohongshuWebGetUserInfoGet_0ValidateBeforeCall(userId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserNotesApiV1XiaohongshuWebGetUserNotesGet
     * @param userId 用户ID/User ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserNotesApiV1XiaohongshuWebGetUserNotesGetCall(String userId, String lastCursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_user_notes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        if (lastCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lastCursor", lastCursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserNotesApiV1XiaohongshuWebGetUserNotesGetValidateBeforeCall(String userId, String lastCursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling getUserNotesApiV1XiaohongshuWebGetUserNotesGet(Async)");
        }
        

        okhttp3.Call localVarCall = getUserNotesApiV1XiaohongshuWebGetUserNotesGetCall(userId, lastCursor, _callback);
        return localVarCall;

    }

    /**
     * 获取用户的笔记/Get user notes
     * # [中文] ### 用途: - 获取用户的笔记 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的最后一个NoteID     - 例如: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### 返回: - 用户的笔记列表  # [English] ### Purpose: - Get user notes ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the last NoteID returned in the last response for subsequent requests     - Example: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### Return: - User notes list  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot; lastCursor&#x3D;None
     * @param userId 用户ID/User ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getUserNotesApiV1XiaohongshuWebGetUserNotesGet(String userId, String lastCursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getUserNotesApiV1XiaohongshuWebGetUserNotesGetWithHttpInfo(userId, lastCursor);
        return localVarResp.getData();
    }

    /**
     * 获取用户的笔记/Get user notes
     * # [中文] ### 用途: - 获取用户的笔记 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的最后一个NoteID     - 例如: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### 返回: - 用户的笔记列表  # [English] ### Purpose: - Get user notes ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the last NoteID returned in the last response for subsequent requests     - Example: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### Return: - User notes list  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot; lastCursor&#x3D;None
     * @param userId 用户ID/User ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getUserNotesApiV1XiaohongshuWebGetUserNotesGetWithHttpInfo(String userId, String lastCursor) throws ApiException {
        okhttp3.Call localVarCall = getUserNotesApiV1XiaohongshuWebGetUserNotesGetValidateBeforeCall(userId, lastCursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户的笔记/Get user notes (asynchronously)
     * # [中文] ### 用途: - 获取用户的笔记 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的最后一个NoteID     - 例如: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### 返回: - 用户的笔记列表  # [English] ### Purpose: - Get user notes ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the last NoteID returned in the last response for subsequent requests     - Example: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### Return: - User notes list  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot; lastCursor&#x3D;None
     * @param userId 用户ID/User ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserNotesApiV1XiaohongshuWebGetUserNotesGetAsync(String userId, String lastCursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserNotesApiV1XiaohongshuWebGetUserNotesGetValidateBeforeCall(userId, lastCursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0
     * @param userId 用户ID/User ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0Call(String userId, String lastCursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/get_user_notes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        if (lastCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lastCursor", lastCursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0ValidateBeforeCall(String userId, String lastCursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0Call(userId, lastCursor, _callback);
        return localVarCall;

    }

    /**
     * 获取用户的笔记/Get user notes
     * # [中文] ### 用途: - 获取用户的笔记 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的最后一个NoteID     - 例如: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### 返回: - 用户的笔记列表  # [English] ### Purpose: - Get user notes ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the last NoteID returned in the last response for subsequent requests     - Example: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### Return: - User notes list  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot; lastCursor&#x3D;None
     * @param userId 用户ID/User ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0(String userId, String lastCursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0WithHttpInfo(userId, lastCursor);
        return localVarResp.getData();
    }

    /**
     * 获取用户的笔记/Get user notes
     * # [中文] ### 用途: - 获取用户的笔记 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的最后一个NoteID     - 例如: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### 返回: - 用户的笔记列表  # [English] ### Purpose: - Get user notes ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the last NoteID returned in the last response for subsequent requests     - Example: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### Return: - User notes list  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot; lastCursor&#x3D;None
     * @param userId 用户ID/User ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0WithHttpInfo(String userId, String lastCursor) throws ApiException {
        okhttp3.Call localVarCall = getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0ValidateBeforeCall(userId, lastCursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户的笔记/Get user notes (asynchronously)
     * # [中文] ### 用途: - 获取用户的笔记 ### 参数: - user_id: 用户ID，可以从小红书的分享链接中获取 - lastCursor: 第一次请求时为空，之后请求时使用上一次请求响应中返回的最后一个NoteID     - 例如: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### 返回: - 用户的笔记列表  # [English] ### Purpose: - Get user notes ### Parameters: - user_id: User ID, can be obtained from the sharing link of Xiaohongshu website. - lastCursor: Last cursor, empty for the first request, use the last NoteID returned in the last response for subsequent requests     - Example: \&quot;662908190000000001007366\&quot;     - JSON Path: $.data.data.notes.[-1].id ### Return: - User notes list  # [示例/Example] user_id&#x3D;\&quot;5f4a10070000000001006fc7\&quot; lastCursor&#x3D;None
     * @param userId 用户ID/User ID (required)
     * @param lastCursor 上一页的游标/Last cursor (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0Async(String userId, String lastCursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserNotesApiV1XiaohongshuWebGetUserNotesGet_0ValidateBeforeCall(userId, lastCursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchNotesApiV1XiaohongshuWebSearchNotesGet
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param sort 排序方式/Sort (optional, default to &quot;general&quot;)
     * @param noteType 笔记类型/Note type (optional, default to &quot;_0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchNotesApiV1XiaohongshuWebSearchNotesGetCall(String keyword, Integer page, String sort, String noteType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/search_notes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (noteType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("noteType", noteType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchNotesApiV1XiaohongshuWebSearchNotesGetValidateBeforeCall(String keyword, Integer page, String sort, String noteType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling searchNotesApiV1XiaohongshuWebSearchNotesGet(Async)");
        }
        

        okhttp3.Call localVarCall = searchNotesApiV1XiaohongshuWebSearchNotesGetCall(keyword, page, sort, noteType, _callback);
        return localVarCall;

    }

    /**
     * 搜索笔记/Search notes
     * # [中文] ### 用途: - 搜索笔记 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 - sort: 排序方式     - 综合排序（默认参数）: general     - 最热排序: popularity_descending     - 最新排序: time_descending - noteType: 笔记类型     - 综合笔记（默认参数）: _0     - 视频笔记: _1     - 图文笔记: _2 ### 返回: - 笔记列表  # [English] ### Purpose: - Search notes ### Parameters: - keyword: Keyword - page: Page, default is 1 - sort: Sort     - General sort (default): general     - Popularity sort: popularity_descending     - Latest sort: time_descending - noteType: Note type     - General note (default): _0     - Video note: _1     - Image note: _2 ### Return: - Note list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1 sort&#x3D;\&quot;general\&quot; noteType&#x3D;\&quot;_0\&quot;
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param sort 排序方式/Sort (optional, default to &quot;general&quot;)
     * @param noteType 笔记类型/Note type (optional, default to &quot;_0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel searchNotesApiV1XiaohongshuWebSearchNotesGet(String keyword, Integer page, String sort, String noteType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = searchNotesApiV1XiaohongshuWebSearchNotesGetWithHttpInfo(keyword, page, sort, noteType);
        return localVarResp.getData();
    }

    /**
     * 搜索笔记/Search notes
     * # [中文] ### 用途: - 搜索笔记 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 - sort: 排序方式     - 综合排序（默认参数）: general     - 最热排序: popularity_descending     - 最新排序: time_descending - noteType: 笔记类型     - 综合笔记（默认参数）: _0     - 视频笔记: _1     - 图文笔记: _2 ### 返回: - 笔记列表  # [English] ### Purpose: - Search notes ### Parameters: - keyword: Keyword - page: Page, default is 1 - sort: Sort     - General sort (default): general     - Popularity sort: popularity_descending     - Latest sort: time_descending - noteType: Note type     - General note (default): _0     - Video note: _1     - Image note: _2 ### Return: - Note list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1 sort&#x3D;\&quot;general\&quot; noteType&#x3D;\&quot;_0\&quot;
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param sort 排序方式/Sort (optional, default to &quot;general&quot;)
     * @param noteType 笔记类型/Note type (optional, default to &quot;_0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> searchNotesApiV1XiaohongshuWebSearchNotesGetWithHttpInfo(String keyword, Integer page, String sort, String noteType) throws ApiException {
        okhttp3.Call localVarCall = searchNotesApiV1XiaohongshuWebSearchNotesGetValidateBeforeCall(keyword, page, sort, noteType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索笔记/Search notes (asynchronously)
     * # [中文] ### 用途: - 搜索笔记 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 - sort: 排序方式     - 综合排序（默认参数）: general     - 最热排序: popularity_descending     - 最新排序: time_descending - noteType: 笔记类型     - 综合笔记（默认参数）: _0     - 视频笔记: _1     - 图文笔记: _2 ### 返回: - 笔记列表  # [English] ### Purpose: - Search notes ### Parameters: - keyword: Keyword - page: Page, default is 1 - sort: Sort     - General sort (default): general     - Popularity sort: popularity_descending     - Latest sort: time_descending - noteType: Note type     - General note (default): _0     - Video note: _1     - Image note: _2 ### Return: - Note list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1 sort&#x3D;\&quot;general\&quot; noteType&#x3D;\&quot;_0\&quot;
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param sort 排序方式/Sort (optional, default to &quot;general&quot;)
     * @param noteType 笔记类型/Note type (optional, default to &quot;_0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchNotesApiV1XiaohongshuWebSearchNotesGetAsync(String keyword, Integer page, String sort, String noteType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchNotesApiV1XiaohongshuWebSearchNotesGetValidateBeforeCall(keyword, page, sort, noteType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchNotesApiV1XiaohongshuWebSearchNotesGet_0
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param sort 排序方式/Sort (optional, default to &quot;general&quot;)
     * @param noteType 笔记类型/Note type (optional, default to &quot;_0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchNotesApiV1XiaohongshuWebSearchNotesGet_0Call(String keyword, Integer page, String sort, String noteType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/search_notes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (noteType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("noteType", noteType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchNotesApiV1XiaohongshuWebSearchNotesGet_0ValidateBeforeCall(String keyword, Integer page, String sort, String noteType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling searchNotesApiV1XiaohongshuWebSearchNotesGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = searchNotesApiV1XiaohongshuWebSearchNotesGet_0Call(keyword, page, sort, noteType, _callback);
        return localVarCall;

    }

    /**
     * 搜索笔记/Search notes
     * # [中文] ### 用途: - 搜索笔记 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 - sort: 排序方式     - 综合排序（默认参数）: general     - 最热排序: popularity_descending     - 最新排序: time_descending - noteType: 笔记类型     - 综合笔记（默认参数）: _0     - 视频笔记: _1     - 图文笔记: _2 ### 返回: - 笔记列表  # [English] ### Purpose: - Search notes ### Parameters: - keyword: Keyword - page: Page, default is 1 - sort: Sort     - General sort (default): general     - Popularity sort: popularity_descending     - Latest sort: time_descending - noteType: Note type     - General note (default): _0     - Video note: _1     - Image note: _2 ### Return: - Note list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1 sort&#x3D;\&quot;general\&quot; noteType&#x3D;\&quot;_0\&quot;
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param sort 排序方式/Sort (optional, default to &quot;general&quot;)
     * @param noteType 笔记类型/Note type (optional, default to &quot;_0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel searchNotesApiV1XiaohongshuWebSearchNotesGet_0(String keyword, Integer page, String sort, String noteType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = searchNotesApiV1XiaohongshuWebSearchNotesGet_0WithHttpInfo(keyword, page, sort, noteType);
        return localVarResp.getData();
    }

    /**
     * 搜索笔记/Search notes
     * # [中文] ### 用途: - 搜索笔记 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 - sort: 排序方式     - 综合排序（默认参数）: general     - 最热排序: popularity_descending     - 最新排序: time_descending - noteType: 笔记类型     - 综合笔记（默认参数）: _0     - 视频笔记: _1     - 图文笔记: _2 ### 返回: - 笔记列表  # [English] ### Purpose: - Search notes ### Parameters: - keyword: Keyword - page: Page, default is 1 - sort: Sort     - General sort (default): general     - Popularity sort: popularity_descending     - Latest sort: time_descending - noteType: Note type     - General note (default): _0     - Video note: _1     - Image note: _2 ### Return: - Note list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1 sort&#x3D;\&quot;general\&quot; noteType&#x3D;\&quot;_0\&quot;
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param sort 排序方式/Sort (optional, default to &quot;general&quot;)
     * @param noteType 笔记类型/Note type (optional, default to &quot;_0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> searchNotesApiV1XiaohongshuWebSearchNotesGet_0WithHttpInfo(String keyword, Integer page, String sort, String noteType) throws ApiException {
        okhttp3.Call localVarCall = searchNotesApiV1XiaohongshuWebSearchNotesGet_0ValidateBeforeCall(keyword, page, sort, noteType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索笔记/Search notes (asynchronously)
     * # [中文] ### 用途: - 搜索笔记 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 - sort: 排序方式     - 综合排序（默认参数）: general     - 最热排序: popularity_descending     - 最新排序: time_descending - noteType: 笔记类型     - 综合笔记（默认参数）: _0     - 视频笔记: _1     - 图文笔记: _2 ### 返回: - 笔记列表  # [English] ### Purpose: - Search notes ### Parameters: - keyword: Keyword - page: Page, default is 1 - sort: Sort     - General sort (default): general     - Popularity sort: popularity_descending     - Latest sort: time_descending - noteType: Note type     - General note (default): _0     - Video note: _1     - Image note: _2 ### Return: - Note list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1 sort&#x3D;\&quot;general\&quot; noteType&#x3D;\&quot;_0\&quot;
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param sort 排序方式/Sort (optional, default to &quot;general&quot;)
     * @param noteType 笔记类型/Note type (optional, default to &quot;_0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchNotesApiV1XiaohongshuWebSearchNotesGet_0Async(String keyword, Integer page, String sort, String noteType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchNotesApiV1XiaohongshuWebSearchNotesGet_0ValidateBeforeCall(keyword, page, sort, noteType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchUsersApiV1XiaohongshuWebSearchUsersGet
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchUsersApiV1XiaohongshuWebSearchUsersGetCall(String keyword, Integer page, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/search_users";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchUsersApiV1XiaohongshuWebSearchUsersGetValidateBeforeCall(String keyword, Integer page, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling searchUsersApiV1XiaohongshuWebSearchUsersGet(Async)");
        }
        

        okhttp3.Call localVarCall = searchUsersApiV1XiaohongshuWebSearchUsersGetCall(keyword, page, _callback);
        return localVarCall;

    }

    /**
     * 搜索用户/Search users
     * # [中文] ### 用途: - 搜索用户 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 ### 返回: - 用户列表  # [English] ### Purpose: - Search users ### Parameters: - keyword: Keyword - page: Page, default is 1 ### Return: - User list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel searchUsersApiV1XiaohongshuWebSearchUsersGet(String keyword, Integer page) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = searchUsersApiV1XiaohongshuWebSearchUsersGetWithHttpInfo(keyword, page);
        return localVarResp.getData();
    }

    /**
     * 搜索用户/Search users
     * # [中文] ### 用途: - 搜索用户 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 ### 返回: - 用户列表  # [English] ### Purpose: - Search users ### Parameters: - keyword: Keyword - page: Page, default is 1 ### Return: - User list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> searchUsersApiV1XiaohongshuWebSearchUsersGetWithHttpInfo(String keyword, Integer page) throws ApiException {
        okhttp3.Call localVarCall = searchUsersApiV1XiaohongshuWebSearchUsersGetValidateBeforeCall(keyword, page, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索用户/Search users (asynchronously)
     * # [中文] ### 用途: - 搜索用户 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 ### 返回: - 用户列表  # [English] ### Purpose: - Search users ### Parameters: - keyword: Keyword - page: Page, default is 1 ### Return: - User list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchUsersApiV1XiaohongshuWebSearchUsersGetAsync(String keyword, Integer page, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchUsersApiV1XiaohongshuWebSearchUsersGetValidateBeforeCall(keyword, page, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchUsersApiV1XiaohongshuWebSearchUsersGet_0
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchUsersApiV1XiaohongshuWebSearchUsersGet_0Call(String keyword, Integer page, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/xiaohongshu/web/search_users";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchUsersApiV1XiaohongshuWebSearchUsersGet_0ValidateBeforeCall(String keyword, Integer page, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling searchUsersApiV1XiaohongshuWebSearchUsersGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = searchUsersApiV1XiaohongshuWebSearchUsersGet_0Call(keyword, page, _callback);
        return localVarCall;

    }

    /**
     * 搜索用户/Search users
     * # [中文] ### 用途: - 搜索用户 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 ### 返回: - 用户列表  # [English] ### Purpose: - Search users ### Parameters: - keyword: Keyword - page: Page, default is 1 ### Return: - User list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel searchUsersApiV1XiaohongshuWebSearchUsersGet_0(String keyword, Integer page) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = searchUsersApiV1XiaohongshuWebSearchUsersGet_0WithHttpInfo(keyword, page);
        return localVarResp.getData();
    }

    /**
     * 搜索用户/Search users
     * # [中文] ### 用途: - 搜索用户 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 ### 返回: - 用户列表  # [English] ### Purpose: - Search users ### Parameters: - keyword: Keyword - page: Page, default is 1 ### Return: - User list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> searchUsersApiV1XiaohongshuWebSearchUsersGet_0WithHttpInfo(String keyword, Integer page) throws ApiException {
        okhttp3.Call localVarCall = searchUsersApiV1XiaohongshuWebSearchUsersGet_0ValidateBeforeCall(keyword, page, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索用户/Search users (asynchronously)
     * # [中文] ### 用途: - 搜索用户 ### 参数: - keyword: 搜索关键词 - page: 页码，默认为1 ### 返回: - 用户列表  # [English] ### Purpose: - Search users ### Parameters: - keyword: Keyword - page: Page, default is 1 ### Return: - User list  # [示例/Example] keyword&#x3D;\&quot;美食\&quot; page&#x3D;1
     * @param keyword 搜索关键词/Keyword (required)
     * @param page 页码/Page (optional, default to 1)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchUsersApiV1XiaohongshuWebSearchUsersGet_0Async(String keyword, Integer page, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchUsersApiV1XiaohongshuWebSearchUsersGet_0ValidateBeforeCall(keyword, page, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
