/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class KuaishouWebApiApi {
    private ApiClient localVarApiClient;

    public KuaishouWebApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public KuaishouWebApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet
     * @param userId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGetCall(String userId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_home_page_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGetValidateBeforeCall(String userId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGetCall(userId, _callback);
        return localVarCall;

    }

    /**
     * 获取主页信息数据/Get home page info data
     * # [中文] ### 用途: - 获取主页信息数据 ### 参数: - user_id: 用户ID ### 返回: - 主页信息数据  # [English] ### Purpose: - Fetch home page info data ### Parameters: - user_id: User ID ### Returns: - Home page info data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot;
     * @param userId  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet(String userId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGetWithHttpInfo(userId);
        return localVarResp.getData();
    }

    /**
     * 获取主页信息数据/Get home page info data
     * # [中文] ### 用途: - 获取主页信息数据 ### 参数: - user_id: 用户ID ### 返回: - 主页信息数据  # [English] ### Purpose: - Fetch home page info data ### Parameters: - user_id: User ID ### Returns: - Home page info data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot;
     * @param userId  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGetWithHttpInfo(String userId) throws ApiException {
        okhttp3.Call localVarCall = fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGetValidateBeforeCall(userId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取主页信息数据/Get home page info data (asynchronously)
     * # [中文] ### 用途: - 获取主页信息数据 ### 参数: - user_id: 用户ID ### 返回: - 主页信息数据  # [English] ### Purpose: - Fetch home page info data ### Parameters: - user_id: User ID ### Returns: - Home page info data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot;
     * @param userId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGetAsync(String userId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGetValidateBeforeCall(userId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0
     * @param userId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0Call(String userId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_home_page_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0ValidateBeforeCall(String userId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0Call(userId, _callback);
        return localVarCall;

    }

    /**
     * 获取主页信息数据/Get home page info data
     * # [中文] ### 用途: - 获取主页信息数据 ### 参数: - user_id: 用户ID ### 返回: - 主页信息数据  # [English] ### Purpose: - Fetch home page info data ### Parameters: - user_id: User ID ### Returns: - Home page info data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot;
     * @param userId  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0(String userId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0WithHttpInfo(userId);
        return localVarResp.getData();
    }

    /**
     * 获取主页信息数据/Get home page info data
     * # [中文] ### 用途: - 获取主页信息数据 ### 参数: - user_id: 用户ID ### 返回: - 主页信息数据  # [English] ### Purpose: - Fetch home page info data ### Parameters: - user_id: User ID ### Returns: - Home page info data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot;
     * @param userId  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0WithHttpInfo(String userId) throws ApiException {
        okhttp3.Call localVarCall = fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0ValidateBeforeCall(userId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取主页信息数据/Get home page info data (asynchronously)
     * # [中文] ### 用途: - 获取主页信息数据 ### 参数: - user_id: 用户ID ### 返回: - 主页信息数据  # [English] ### Purpose: - Fetch home page info data ### Parameters: - user_id: User ID ### Returns: - Home page info data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot;
     * @param userId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0Async(String userId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHomePageInfoApiV1KuaishouWebFetchHomePageInfoGet_0ValidateBeforeCall(userId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet
     * @param userId  (required)
     * @param pcursor  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGetCall(String userId, String pcursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_home_page_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        if (pcursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pcursor", pcursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGetValidateBeforeCall(String userId, String pcursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGetCall(userId, pcursor, _callback);
        return localVarCall;

    }

    /**
     * 获取主页视频数据/Get home page video data
     * # [中文] ### 用途: - 获取主页视频数据 ### 参数: - user_id: 用户ID - pcursor: 视频游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch home page video data ### Parameters: - user_id: User ID - pcursor: Video cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Videos data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot; pcursor &#x3D; &#39;1.718349959396E12&#39;
     * @param userId  (required)
     * @param pcursor  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet(String userId, String pcursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGetWithHttpInfo(userId, pcursor);
        return localVarResp.getData();
    }

    /**
     * 获取主页视频数据/Get home page video data
     * # [中文] ### 用途: - 获取主页视频数据 ### 参数: - user_id: 用户ID - pcursor: 视频游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch home page video data ### Parameters: - user_id: User ID - pcursor: Video cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Videos data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot; pcursor &#x3D; &#39;1.718349959396E12&#39;
     * @param userId  (required)
     * @param pcursor  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGetWithHttpInfo(String userId, String pcursor) throws ApiException {
        okhttp3.Call localVarCall = fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGetValidateBeforeCall(userId, pcursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取主页视频数据/Get home page video data (asynchronously)
     * # [中文] ### 用途: - 获取主页视频数据 ### 参数: - user_id: 用户ID - pcursor: 视频游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch home page video data ### Parameters: - user_id: User ID - pcursor: Video cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Videos data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot; pcursor &#x3D; &#39;1.718349959396E12&#39;
     * @param userId  (required)
     * @param pcursor  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGetAsync(String userId, String pcursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGetValidateBeforeCall(userId, pcursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0
     * @param userId  (required)
     * @param pcursor  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0Call(String userId, String pcursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_home_page_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        if (pcursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pcursor", pcursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0ValidateBeforeCall(String userId, String pcursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0Call(userId, pcursor, _callback);
        return localVarCall;

    }

    /**
     * 获取主页视频数据/Get home page video data
     * # [中文] ### 用途: - 获取主页视频数据 ### 参数: - user_id: 用户ID - pcursor: 视频游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch home page video data ### Parameters: - user_id: User ID - pcursor: Video cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Videos data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot; pcursor &#x3D; &#39;1.718349959396E12&#39;
     * @param userId  (required)
     * @param pcursor  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0(String userId, String pcursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0WithHttpInfo(userId, pcursor);
        return localVarResp.getData();
    }

    /**
     * 获取主页视频数据/Get home page video data
     * # [中文] ### 用途: - 获取主页视频数据 ### 参数: - user_id: 用户ID - pcursor: 视频游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch home page video data ### Parameters: - user_id: User ID - pcursor: Video cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Videos data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot; pcursor &#x3D; &#39;1.718349959396E12&#39;
     * @param userId  (required)
     * @param pcursor  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0WithHttpInfo(String userId, String pcursor) throws ApiException {
        okhttp3.Call localVarCall = fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0ValidateBeforeCall(userId, pcursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取主页视频数据/Get home page video data (asynchronously)
     * # [中文] ### 用途: - 获取主页视频数据 ### 参数: - user_id: 用户ID - pcursor: 视频游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch home page video data ### Parameters: - user_id: User ID - pcursor: Video cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Videos data  # [示例/Example] user_id &#x3D; \&quot;3xduik3j7us2ge6\&quot; pcursor &#x3D; &#39;1.718349959396E12&#39;
     * @param userId  (required)
     * @param pcursor  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0Async(String userId, String pcursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHomePageVideoApiV1KuaishouWebFetchHomePageVideoGet_0ValidateBeforeCall(userId, pcursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1KuaishouWebFetchOneVideoGet
     * @param photoId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1KuaishouWebFetchOneVideoGetCall(String photoId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (photoId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("photo_id", photoId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1KuaishouWebFetchOneVideoGetValidateBeforeCall(String photoId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'photoId' is set
        if (photoId == null) {
            throw new ApiException("Missing the required parameter 'photoId' when calling fetchOneVideoApiV1KuaishouWebFetchOneVideoGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1KuaishouWebFetchOneVideoGetCall(photoId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据，此接口不支持图文作品。 ### 参数: - photo_id: 作品ID ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video data, this interface does not support photo only posts. ### Parameters: - photo_id: Photo ID ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot;
     * @param photoId  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoApiV1KuaishouWebFetchOneVideoGet(String photoId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1KuaishouWebFetchOneVideoGetWithHttpInfo(photoId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据，此接口不支持图文作品。 ### 参数: - photo_id: 作品ID ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video data, this interface does not support photo only posts. ### Parameters: - photo_id: Photo ID ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot;
     * @param photoId  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoApiV1KuaishouWebFetchOneVideoGetWithHttpInfo(String photoId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1KuaishouWebFetchOneVideoGetValidateBeforeCall(photoId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据/Get single video data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据，此接口不支持图文作品。 ### 参数: - photo_id: 作品ID ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video data, this interface does not support photo only posts. ### Parameters: - photo_id: Photo ID ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot;
     * @param photoId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1KuaishouWebFetchOneVideoGetAsync(String photoId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1KuaishouWebFetchOneVideoGetValidateBeforeCall(photoId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0
     * @param photoId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0Call(String photoId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (photoId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("photo_id", photoId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0ValidateBeforeCall(String photoId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'photoId' is set
        if (photoId == null) {
            throw new ApiException("Missing the required parameter 'photoId' when calling fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0Call(photoId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据，此接口不支持图文作品。 ### 参数: - photo_id: 作品ID ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video data, this interface does not support photo only posts. ### Parameters: - photo_id: Photo ID ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot;
     * @param photoId  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0(String photoId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0WithHttpInfo(photoId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据，此接口不支持图文作品。 ### 参数: - photo_id: 作品ID ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video data, this interface does not support photo only posts. ### Parameters: - photo_id: Photo ID ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot;
     * @param photoId  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0WithHttpInfo(String photoId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0ValidateBeforeCall(photoId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据/Get single video data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据，此接口不支持图文作品。 ### 参数: - photo_id: 作品ID ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video data, this interface does not support photo only posts. ### Parameters: - photo_id: Photo ID ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot;
     * @param photoId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0Async(String photoId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1KuaishouWebFetchOneVideoGet_0ValidateBeforeCall(photoId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGetCall(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video_by_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGetValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGetCall(url, _callback);
        return localVarCall;

    }

    /**
     * 根据链接获取单个作品数据/Fetch single video by URL
     * # [中文] ### 用途: - 根据链接获取单个作品数据 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGetWithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 根据链接获取单个作品数据/Fetch single video by URL
     * # [中文] ### 用途: - 根据链接获取单个作品数据 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGetWithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGetValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据链接获取单个作品数据/Fetch single video by URL (asynchronously)
     * # [中文] ### 用途: - 根据链接获取单个作品数据 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGetAsync(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGetValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0Call(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video_by_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0ValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0Call(url, _callback);
        return localVarCall;

    }

    /**
     * 根据链接获取单个作品数据/Fetch single video by URL
     * # [中文] ### 用途: - 根据链接获取单个作品数据 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0WithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 根据链接获取单个作品数据/Fetch single video by URL
     * # [中文] ### 用途: - 根据链接获取单个作品数据 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0WithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0ValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据链接获取单个作品数据/Fetch single video by URL (asynchronously)
     * # [中文] ### 用途: - 根据链接获取单个作品数据 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0Async(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0ValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2GetCall(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video_by_url_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2GetValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2GetCall(url, _callback);
        return localVarCall;

    }

    /**
     * 根据链接获取单个作品数据V2/Fetch single video by URL V2
     * # [中文] ### 用途: - 根据链接获取单个作品数据V2 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL V2 ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2GetWithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 根据链接获取单个作品数据V2/Fetch single video by URL V2
     * # [中文] ### 用途: - 根据链接获取单个作品数据V2 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL V2 ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2GetWithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2GetValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据链接获取单个作品数据V2/Fetch single video by URL V2 (asynchronously)
     * # [中文] ### 用途: - 根据链接获取单个作品数据V2 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL V2 ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2GetAsync(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2GetValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0
     * @param url  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0Call(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video_by_url_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0ValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0Call(url, _callback);
        return localVarCall;

    }

    /**
     * 根据链接获取单个作品数据V2/Fetch single video by URL V2
     * # [中文] ### 用途: - 根据链接获取单个作品数据V2 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL V2 ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0WithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 根据链接获取单个作品数据V2/Fetch single video by URL V2
     * # [中文] ### 用途: - 根据链接获取单个作品数据V2 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL V2 ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0WithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0ValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据链接获取单个作品数据V2/Fetch single video by URL V2 (asynchronously)
     * # [中文] ### 用途: - 根据链接获取单个作品数据V2 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL V2 ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
     * @param url  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0Async(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoByUrlV2ApiV1KuaishouWebFetchOneVideoByUrlV2Get_0ValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet
     * @param photoId  (required)
     * @param pcursor  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGetCall(String photoId, String pcursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video_comment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (photoId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("photo_id", photoId));
        }

        if (pcursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pcursor", pcursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGetValidateBeforeCall(String photoId, String pcursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'photoId' is set
        if (photoId == null) {
            throw new ApiException("Missing the required parameter 'photoId' when calling fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGetCall(photoId, pcursor, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品评论数据/Get single video comment data
     * # [中文] ### 用途: - 获取单个作品评论数据 ### 参数: - photo_id: 作品ID - pcursor: 评论游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 评论数据  # [English] ### Purpose: - Fetch single video comment data ### Parameters: - photo_id: Photo ID - pcursor: Comment cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Comments data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot; pcursor &#x3D; None
     * @param photoId  (required)
     * @param pcursor  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet(String photoId, String pcursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGetWithHttpInfo(photoId, pcursor);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品评论数据/Get single video comment data
     * # [中文] ### 用途: - 获取单个作品评论数据 ### 参数: - photo_id: 作品ID - pcursor: 评论游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 评论数据  # [English] ### Purpose: - Fetch single video comment data ### Parameters: - photo_id: Photo ID - pcursor: Comment cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Comments data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot; pcursor &#x3D; None
     * @param photoId  (required)
     * @param pcursor  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGetWithHttpInfo(String photoId, String pcursor) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGetValidateBeforeCall(photoId, pcursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品评论数据/Get single video comment data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品评论数据 ### 参数: - photo_id: 作品ID - pcursor: 评论游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 评论数据  # [English] ### Purpose: - Fetch single video comment data ### Parameters: - photo_id: Photo ID - pcursor: Comment cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Comments data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot; pcursor &#x3D; None
     * @param photoId  (required)
     * @param pcursor  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGetAsync(String photoId, String pcursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGetValidateBeforeCall(photoId, pcursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0
     * @param photoId  (required)
     * @param pcursor  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0Call(String photoId, String pcursor, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video_comment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (photoId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("photo_id", photoId));
        }

        if (pcursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pcursor", pcursor));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0ValidateBeforeCall(String photoId, String pcursor, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'photoId' is set
        if (photoId == null) {
            throw new ApiException("Missing the required parameter 'photoId' when calling fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0Call(photoId, pcursor, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品评论数据/Get single video comment data
     * # [中文] ### 用途: - 获取单个作品评论数据 ### 参数: - photo_id: 作品ID - pcursor: 评论游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 评论数据  # [English] ### Purpose: - Fetch single video comment data ### Parameters: - photo_id: Photo ID - pcursor: Comment cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Comments data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot; pcursor &#x3D; None
     * @param photoId  (required)
     * @param pcursor  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0(String photoId, String pcursor) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0WithHttpInfo(photoId, pcursor);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品评论数据/Get single video comment data
     * # [中文] ### 用途: - 获取单个作品评论数据 ### 参数: - photo_id: 作品ID - pcursor: 评论游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 评论数据  # [English] ### Purpose: - Fetch single video comment data ### Parameters: - photo_id: Photo ID - pcursor: Comment cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Comments data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot; pcursor &#x3D; None
     * @param photoId  (required)
     * @param pcursor  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0WithHttpInfo(String photoId, String pcursor) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0ValidateBeforeCall(photoId, pcursor, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品评论数据/Get single video comment data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品评论数据 ### 参数: - photo_id: 作品ID - pcursor: 评论游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 评论数据  # [English] ### Purpose: - Fetch single video comment data ### Parameters: - photo_id: Photo ID - pcursor: Comment cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Comments data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot; pcursor &#x3D; None
     * @param photoId  (required)
     * @param pcursor  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0Async(String photoId, String pcursor, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoCommentApiV1KuaishouWebFetchOneVideoCommentGet_0ValidateBeforeCall(photoId, pcursor, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get
     * @param photoId  (required)
     * @param isLongVideo  (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2GetCall(String photoId, Boolean isLongVideo, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (photoId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("photo_id", photoId));
        }

        if (isLongVideo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("isLongVideo", isLongVideo));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2GetValidateBeforeCall(String photoId, Boolean isLongVideo, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'photoId' is set
        if (photoId == null) {
            throw new ApiException("Missing the required parameter 'photoId' when calling fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2GetCall(photoId, isLongVideo, _callback);
        return localVarCall;

    }

    /**
     * 快手单一视频查询接口V2/Kuaishou single video query API V2
     * # [中文] ### 用途: - 快手单一视频查询接口V2，此接口支持图文作品。 ### 参数: - photo_id: 作品ID - isLongVideo: 是否长视频，默认为False ### 返回: - 视频数据  # [English] ### Purpose: - Kuaishou single video query API V2, this interface supports photo only posts. ### Parameters: - photo_id: Photo ID - isLongVideo: Is long video, default is False ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xhuvvbqwqviwy6\&quot;
     * @param photoId  (required)
     * @param isLongVideo  (optional, default to false)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get(String photoId, Boolean isLongVideo) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2GetWithHttpInfo(photoId, isLongVideo);
        return localVarResp.getData();
    }

    /**
     * 快手单一视频查询接口V2/Kuaishou single video query API V2
     * # [中文] ### 用途: - 快手单一视频查询接口V2，此接口支持图文作品。 ### 参数: - photo_id: 作品ID - isLongVideo: 是否长视频，默认为False ### 返回: - 视频数据  # [English] ### Purpose: - Kuaishou single video query API V2, this interface supports photo only posts. ### Parameters: - photo_id: Photo ID - isLongVideo: Is long video, default is False ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xhuvvbqwqviwy6\&quot;
     * @param photoId  (required)
     * @param isLongVideo  (optional, default to false)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2GetWithHttpInfo(String photoId, Boolean isLongVideo) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2GetValidateBeforeCall(photoId, isLongVideo, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 快手单一视频查询接口V2/Kuaishou single video query API V2 (asynchronously)
     * # [中文] ### 用途: - 快手单一视频查询接口V2，此接口支持图文作品。 ### 参数: - photo_id: 作品ID - isLongVideo: 是否长视频，默认为False ### 返回: - 视频数据  # [English] ### Purpose: - Kuaishou single video query API V2, this interface supports photo only posts. ### Parameters: - photo_id: Photo ID - isLongVideo: Is long video, default is False ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xhuvvbqwqviwy6\&quot;
     * @param photoId  (required)
     * @param isLongVideo  (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2GetAsync(String photoId, Boolean isLongVideo, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2GetValidateBeforeCall(photoId, isLongVideo, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0
     * @param photoId  (required)
     * @param isLongVideo  (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0Call(String photoId, Boolean isLongVideo, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/kuaishou/web/fetch_one_video_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (photoId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("photo_id", photoId));
        }

        if (isLongVideo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("isLongVideo", isLongVideo));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0ValidateBeforeCall(String photoId, Boolean isLongVideo, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'photoId' is set
        if (photoId == null) {
            throw new ApiException("Missing the required parameter 'photoId' when calling fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0Call(photoId, isLongVideo, _callback);
        return localVarCall;

    }

    /**
     * 快手单一视频查询接口V2/Kuaishou single video query API V2
     * # [中文] ### 用途: - 快手单一视频查询接口V2，此接口支持图文作品。 ### 参数: - photo_id: 作品ID - isLongVideo: 是否长视频，默认为False ### 返回: - 视频数据  # [English] ### Purpose: - Kuaishou single video query API V2, this interface supports photo only posts. ### Parameters: - photo_id: Photo ID - isLongVideo: Is long video, default is False ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xhuvvbqwqviwy6\&quot;
     * @param photoId  (required)
     * @param isLongVideo  (optional, default to false)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0(String photoId, Boolean isLongVideo) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0WithHttpInfo(photoId, isLongVideo);
        return localVarResp.getData();
    }

    /**
     * 快手单一视频查询接口V2/Kuaishou single video query API V2
     * # [中文] ### 用途: - 快手单一视频查询接口V2，此接口支持图文作品。 ### 参数: - photo_id: 作品ID - isLongVideo: 是否长视频，默认为False ### 返回: - 视频数据  # [English] ### Purpose: - Kuaishou single video query API V2, this interface supports photo only posts. ### Parameters: - photo_id: Photo ID - isLongVideo: Is long video, default is False ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xhuvvbqwqviwy6\&quot;
     * @param photoId  (required)
     * @param isLongVideo  (optional, default to false)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0WithHttpInfo(String photoId, Boolean isLongVideo) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0ValidateBeforeCall(photoId, isLongVideo, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 快手单一视频查询接口V2/Kuaishou single video query API V2 (asynchronously)
     * # [中文] ### 用途: - 快手单一视频查询接口V2，此接口支持图文作品。 ### 参数: - photo_id: 作品ID - isLongVideo: 是否长视频，默认为False ### 返回: - 视频数据  # [English] ### Purpose: - Kuaishou single video query API V2, this interface supports photo only posts. ### Parameters: - photo_id: Photo ID - isLongVideo: Is long video, default is False ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xhuvvbqwqviwy6\&quot;
     * @param photoId  (required)
     * @param isLongVideo  (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0Async(String photoId, Boolean isLongVideo, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0ValidateBeforeCall(photoId, isLongVideo, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
