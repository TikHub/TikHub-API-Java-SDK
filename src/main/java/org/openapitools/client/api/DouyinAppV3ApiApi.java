/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DouyinAppV3ApiApi {
    private ApiClient localVarApiClient;

    public DouyinAppV3ApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DouyinAppV3ApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param contentType 内容类型/Content type (optional, default to &quot;0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGetCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_general_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        if (filterDuration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_duration", filterDuration));
        }

        if (contentType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("content_type", contentType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGetCall(keyword, offset, count, sortType, publishTime, filterDuration, contentType, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的综合搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_general_search_result）/Get comprehensive search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_general_search_result)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 - content_type: 0:不限 1:视频 2:图片 3:文章 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes - content_type: 0: Unlimited 1: Video 2: Picture 3: Article ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; content_type &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param contentType 内容类型/Content type (optional, default to &quot;0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGetWithHttpInfo(keyword, offset, count, sortType, publishTime, filterDuration, contentType);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的综合搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_general_search_result）/Get comprehensive search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_general_search_result)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 - content_type: 0:不限 1:视频 2:图片 3:文章 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes - content_type: 0: Unlimited 1: Video 2: Picture 3: Article ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; content_type &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param contentType 内容类型/Content type (optional, default to &quot;0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType) throws ApiException {
        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, contentType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的综合搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_general_search_result）/Get comprehensive search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_general_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 - content_type: 0:不限 1:视频 2:图片 3:文章 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes - content_type: 0: Unlimited 1: Video 2: Picture 3: Article ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; content_type &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param contentType 内容类型/Content type (optional, default to &quot;0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGetAsync(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, contentType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param contentType 内容类型/Content type (optional, default to &quot;0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0Call(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_general_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        if (filterDuration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_duration", filterDuration));
        }

        if (contentType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("content_type", contentType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0Call(keyword, offset, count, sortType, publishTime, filterDuration, contentType, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的综合搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_general_search_result）/Get comprehensive search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_general_search_result)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 - content_type: 0:不限 1:视频 2:图片 3:文章 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes - content_type: 0: Unlimited 1: Video 2: Picture 3: Article ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; content_type &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param contentType 内容类型/Content type (optional, default to &quot;0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0WithHttpInfo(keyword, offset, count, sortType, publishTime, filterDuration, contentType);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的综合搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_general_search_result）/Get comprehensive search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_general_search_result)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 - content_type: 0:不限 1:视频 2:图片 3:文章 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes - content_type: 0: Unlimited 1: Video 2: Picture 3: Article ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; content_type &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param contentType 内容类型/Content type (optional, default to &quot;0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType) throws ApiException {
        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, contentType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的综合搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_general_search_result）/Get comprehensive search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_general_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 - content_type: 0:不限 1:视频 2:图片 3:文章 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes - content_type: 0: Unlimited 1: Video 2: Picture 3: Article ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot; content_type &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param contentType 内容类型/Content type (optional, default to &quot;0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0Async(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, String contentType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1DouyinAppV3FetchGeneralSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, contentType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet
     * @param chId 话题id/Hashtag id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGetCall(Integer chId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_hashtag_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (chId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ch_id", chId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGetValidateBeforeCall(Integer chId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'chId' is set
        if (chId == null) {
            throw new ApiException("Missing the required parameter 'chId' when calling fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGetCall(chId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; 1575791821492238
     * @param chId 话题id/Hashtag id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet(Integer chId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGetWithHttpInfo(chId);
        return localVarResp.getData();
    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; 1575791821492238
     * @param chId 话题id/Hashtag id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGetWithHttpInfo(Integer chId) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGetValidateBeforeCall(chId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag (asynchronously)
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; 1575791821492238
     * @param chId 话题id/Hashtag id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGetAsync(Integer chId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGetValidateBeforeCall(chId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0
     * @param chId 话题id/Hashtag id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0Call(Integer chId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_hashtag_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (chId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ch_id", chId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0ValidateBeforeCall(Integer chId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'chId' is set
        if (chId == null) {
            throw new ApiException("Missing the required parameter 'chId' when calling fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0Call(chId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; 1575791821492238
     * @param chId 话题id/Hashtag id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0(Integer chId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0WithHttpInfo(chId);
        return localVarResp.getData();
    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; 1575791821492238
     * @param chId 话题id/Hashtag id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0WithHttpInfo(Integer chId) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0ValidateBeforeCall(chId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag (asynchronously)
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; 1575791821492238
     * @param chId 话题id/Hashtag id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0Async(Integer chId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagDetailApiV1DouyinAppV3FetchHashtagDetailGet_0ValidateBeforeCall(chId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGetCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_hashtag_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGetCall(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的话题搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_hashtag_search_result）/Get hashtag search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_hashtag_search_result)
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGetWithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的话题搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_hashtag_search_result）/Get hashtag search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_hashtag_search_result)
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGetValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的话题搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_hashtag_search_result）/Get hashtag search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_hashtag_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGetAsync(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGetValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0Call(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_hashtag_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0Call(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的话题搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_hashtag_search_result）/Get hashtag search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_hashtag_search_result)
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0WithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的话题搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_hashtag_search_result）/Get hashtag search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_hashtag_search_result)
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0ValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的话题搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_hashtag_search_result）/Get hashtag search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_hashtag_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0Async(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1DouyinAppV3FetchHashtagSearchResultGet_0ValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param sortType 排序类型/Sort type (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGetCall(String chId, Integer cursor, Integer sortType, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_hashtag_video_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (chId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ch_id", chId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGetValidateBeforeCall(String chId, Integer cursor, Integer sortType, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'chId' is set
        if (chId == null) {
            throw new ApiException("Missing the required parameter 'chId' when calling fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGetCall(chId, cursor, sortType, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; 1575791821492238 cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param sortType 排序类型/Sort type (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet(String chId, Integer cursor, Integer sortType, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGetWithHttpInfo(chId, cursor, sortType, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; 1575791821492238 cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param sortType 排序类型/Sort type (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGetWithHttpInfo(String chId, Integer cursor, Integer sortType, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGetValidateBeforeCall(chId, cursor, sortType, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag (asynchronously)
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; 1575791821492238 cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param sortType 排序类型/Sort type (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGetAsync(String chId, Integer cursor, Integer sortType, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGetValidateBeforeCall(chId, cursor, sortType, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param sortType 排序类型/Sort type (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0Call(String chId, Integer cursor, Integer sortType, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_hashtag_video_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (chId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ch_id", chId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0ValidateBeforeCall(String chId, Integer cursor, Integer sortType, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'chId' is set
        if (chId == null) {
            throw new ApiException("Missing the required parameter 'chId' when calling fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0Call(chId, cursor, sortType, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; 1575791821492238 cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param sortType 排序类型/Sort type (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0(String chId, Integer cursor, Integer sortType, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0WithHttpInfo(chId, cursor, sortType, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; 1575791821492238 cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param sortType 排序类型/Sort type (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0WithHttpInfo(String chId, Integer cursor, Integer sortType, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0ValidateBeforeCall(chId, cursor, sortType, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag (asynchronously)
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; 1575791821492238 cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param sortType 排序类型/Sort type (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0Async(String chId, Integer cursor, Integer sortType, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1DouyinAppV3FetchHashtagVideoListGet_0ValidateBeforeCall(chId, cursor, sortType, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet
     * @param categoryId 分类id/Category id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGetCall(Integer categoryId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_brand_hot_search_list_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (categoryId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("category_id", categoryId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGetValidateBeforeCall(Integer categoryId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'categoryId' is set
        if (categoryId == null) {
            throw new ApiException("Missing the required parameter 'categoryId' when calling fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGetCall(categoryId, _callback);
        return localVarCall;

    }

    /**
     * 获取抖音品牌热榜具体分类数据/Get Douyin brand hot search list detail data
     * # [中文] ### 用途: - 获取抖音品牌热榜具体分类数据 ### 参数: - category_id: 分类id ### 返回: - 品牌热搜榜具体分类数据  # [English] ### Purpose: - Get Douyin brand hot search list detail data ### Parameters: - category_id: Category id ### Return: - Hot brand search list detail data  # [示例/Example] category_id &#x3D; 10
     * @param categoryId 分类id/Category id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet(Integer categoryId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGetWithHttpInfo(categoryId);
        return localVarResp.getData();
    }

    /**
     * 获取抖音品牌热榜具体分类数据/Get Douyin brand hot search list detail data
     * # [中文] ### 用途: - 获取抖音品牌热榜具体分类数据 ### 参数: - category_id: 分类id ### 返回: - 品牌热搜榜具体分类数据  # [English] ### Purpose: - Get Douyin brand hot search list detail data ### Parameters: - category_id: Category id ### Return: - Hot brand search list detail data  # [示例/Example] category_id &#x3D; 10
     * @param categoryId 分类id/Category id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGetWithHttpInfo(Integer categoryId) throws ApiException {
        okhttp3.Call localVarCall = fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGetValidateBeforeCall(categoryId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音品牌热榜具体分类数据/Get Douyin brand hot search list detail data (asynchronously)
     * # [中文] ### 用途: - 获取抖音品牌热榜具体分类数据 ### 参数: - category_id: 分类id ### 返回: - 品牌热搜榜具体分类数据  # [English] ### Purpose: - Get Douyin brand hot search list detail data ### Parameters: - category_id: Category id ### Return: - Hot brand search list detail data  # [示例/Example] category_id &#x3D; 10
     * @param categoryId 分类id/Category id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGetAsync(Integer categoryId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGetValidateBeforeCall(categoryId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0
     * @param categoryId 分类id/Category id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0Call(Integer categoryId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_brand_hot_search_list_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (categoryId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("category_id", categoryId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0ValidateBeforeCall(Integer categoryId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'categoryId' is set
        if (categoryId == null) {
            throw new ApiException("Missing the required parameter 'categoryId' when calling fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0Call(categoryId, _callback);
        return localVarCall;

    }

    /**
     * 获取抖音品牌热榜具体分类数据/Get Douyin brand hot search list detail data
     * # [中文] ### 用途: - 获取抖音品牌热榜具体分类数据 ### 参数: - category_id: 分类id ### 返回: - 品牌热搜榜具体分类数据  # [English] ### Purpose: - Get Douyin brand hot search list detail data ### Parameters: - category_id: Category id ### Return: - Hot brand search list detail data  # [示例/Example] category_id &#x3D; 10
     * @param categoryId 分类id/Category id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0(Integer categoryId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0WithHttpInfo(categoryId);
        return localVarResp.getData();
    }

    /**
     * 获取抖音品牌热榜具体分类数据/Get Douyin brand hot search list detail data
     * # [中文] ### 用途: - 获取抖音品牌热榜具体分类数据 ### 参数: - category_id: 分类id ### 返回: - 品牌热搜榜具体分类数据  # [English] ### Purpose: - Get Douyin brand hot search list detail data ### Parameters: - category_id: Category id ### Return: - Hot brand search list detail data  # [示例/Example] category_id &#x3D; 10
     * @param categoryId 分类id/Category id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0WithHttpInfo(Integer categoryId) throws ApiException {
        okhttp3.Call localVarCall = fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0ValidateBeforeCall(categoryId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音品牌热榜具体分类数据/Get Douyin brand hot search list detail data (asynchronously)
     * # [中文] ### 用途: - 获取抖音品牌热榜具体分类数据 ### 参数: - category_id: 分类id ### 返回: - 品牌热搜榜具体分类数据  # [English] ### Purpose: - Get Douyin brand hot search list detail data ### Parameters: - category_id: Category id ### Return: - Hot brand search list detail data  # [示例/Example] category_id &#x3D; 10
     * @param categoryId 分类id/Category id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0Async(Integer categoryId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHotBrandSearchApiV1DouyinAppV3FetchBrandHotSearchListDetailGet_0ValidateBeforeCall(categoryId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_brand_hot_search_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGetCall(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音品牌热榜分类数据/Get Douyin brand hot search list data
     * # [中文] ### 用途: - 获取抖音品牌热榜分类数据 ### 返回: - 品牌热搜榜分类数据  # [English] ### Purpose: - Get Douyin brand hot search category data ### Return: - Hot brand search category data  # [示例/Example] pass
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音品牌热榜分类数据/Get Douyin brand hot search list data
     * # [中文] ### 用途: - 获取抖音品牌热榜分类数据 ### 返回: - 品牌热搜榜分类数据  # [English] ### Purpose: - Get Douyin brand hot search category data ### Return: - Hot brand search category data  # [示例/Example] pass
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音品牌热榜分类数据/Get Douyin brand hot search list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音品牌热榜分类数据 ### 返回: - 品牌热搜榜分类数据  # [English] ### Purpose: - Get Douyin brand hot search category data ### Return: - Hot brand search category data  # [示例/Example] pass
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_brand_hot_search_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音品牌热榜分类数据/Get Douyin brand hot search list data
     * # [中文] ### 用途: - 获取抖音品牌热榜分类数据 ### 返回: - 品牌热搜榜分类数据  # [English] ### Purpose: - Get Douyin brand hot search category data ### Return: - Hot brand search category data  # [示例/Example] pass
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音品牌热榜分类数据/Get Douyin brand hot search list data
     * # [中文] ### 用途: - 获取抖音品牌热榜分类数据 ### 返回: - 品牌热搜榜分类数据  # [English] ### Purpose: - Get Douyin brand hot search category data ### Return: - Hot brand search category data  # [示例/Example] pass
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音品牌热榜分类数据/Get Douyin brand hot search list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音品牌热榜分类数据 ### 返回: - 品牌热搜榜分类数据  # [English] ### Purpose: - Get Douyin brand hot search category data ### Return: - Hot brand search category data  # [示例/Example] pass
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHotBrandSearchCategoryApiV1DouyinAppV3FetchBrandHotSearchListGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_hot_search_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGetCall(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音热搜榜数据/Get Douyin hot search list data
     * # [中文] ### 用途: - 获取抖音热搜榜数据 ### 返回: - 热搜榜数据  # [English] ### Purpose: - Get Douyin hot search list data ### Return: - Hot search list data  # [示例/Example] pass
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音热搜榜数据/Get Douyin hot search list data
     * # [中文] ### 用途: - 获取抖音热搜榜数据 ### 返回: - 热搜榜数据  # [English] ### Purpose: - Get Douyin hot search list data ### Return: - Hot search list data  # [示例/Example] pass
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音热搜榜数据/Get Douyin hot search list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音热搜榜数据 ### 返回: - 热搜榜数据  # [English] ### Purpose: - Get Douyin hot search list data ### Return: - Hot search list data  # [示例/Example] pass
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_hot_search_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音热搜榜数据/Get Douyin hot search list data
     * # [中文] ### 用途: - 获取抖音热搜榜数据 ### 返回: - 热搜榜数据  # [English] ### Purpose: - Get Douyin hot search list data ### Return: - Hot search list data  # [示例/Example] pass
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音热搜榜数据/Get Douyin hot search list data
     * # [中文] ### 用途: - 获取抖音热搜榜数据 ### 返回: - 热搜榜数据  # [English] ### Purpose: - Get Douyin hot search list data ### Return: - Hot search list data  # [示例/Example] pass
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音热搜榜数据/Get Douyin hot search list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音热搜榜数据 ### 返回: - 热搜榜数据  # [English] ### Purpose: - Get Douyin hot search list data ### Return: - Hot search list data  # [示例/Example] pass
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHotSearchListApiV1DouyinAppV3FetchHotSearchListGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_live_hot_search_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGetCall(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音直播热搜榜数据/Get Douyin live hot search list data
     * # [中文] ### 用途: - 获取抖音直播热搜榜数据 ### 返回: - 直播热搜榜数据  # [English] ### Purpose: - Get Douyin live hot search list data ### Return: - Live hot search list data  # [示例/Example] pass
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音直播热搜榜数据/Get Douyin live hot search list data
     * # [中文] ### 用途: - 获取抖音直播热搜榜数据 ### 返回: - 直播热搜榜数据  # [English] ### Purpose: - Get Douyin live hot search list data ### Return: - Live hot search list data  # [示例/Example] pass
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音直播热搜榜数据/Get Douyin live hot search list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音直播热搜榜数据 ### 返回: - 直播热搜榜数据  # [English] ### Purpose: - Get Douyin live hot search list data ### Return: - Live hot search list data  # [示例/Example] pass
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_live_hot_search_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音直播热搜榜数据/Get Douyin live hot search list data
     * # [中文] ### 用途: - 获取抖音直播热搜榜数据 ### 返回: - 直播热搜榜数据  # [English] ### Purpose: - Get Douyin live hot search list data ### Return: - Live hot search list data  # [示例/Example] pass
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音直播热搜榜数据/Get Douyin live hot search list data
     * # [中文] ### 用途: - 获取抖音直播热搜榜数据 ### 返回: - 直播热搜榜数据  # [English] ### Purpose: - Get Douyin live hot search list data ### Return: - Live hot search list data  # [示例/Example] pass
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音直播热搜榜数据/Get Douyin live hot search list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音直播热搜榜数据 ### 返回: - 直播热搜榜数据  # [English] ### Purpose: - Get Douyin live hot search list data ### Return: - Live hot search list data  # [示例/Example] pass
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveHotSearchListApiV1DouyinAppV3FetchLiveHotSearchListGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGetCall(String keyword, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_live_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGetValidateBeforeCall(String keyword, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGetCall(keyword, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的直播搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_live_search_result）/Get live search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_live_search_result)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - cursor: 偏移量，从0开始，每次请求从上次请求返回响应中的cursor中获取。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - cursor: Offset, starting from 0, each request gets from the cursor in the response returned by the last request. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;小米商城\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet(String keyword, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGetWithHttpInfo(keyword, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的直播搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_live_search_result）/Get live search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_live_search_result)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - cursor: 偏移量，从0开始，每次请求从上次请求返回响应中的cursor中获取。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - cursor: Offset, starting from 0, each request gets from the cursor in the response returned by the last request. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;小米商城\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGetWithHttpInfo(String keyword, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGetValidateBeforeCall(keyword, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的直播搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_live_search_result）/Get live search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_live_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - cursor: 偏移量，从0开始，每次请求从上次请求返回响应中的cursor中获取。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - cursor: Offset, starting from 0, each request gets from the cursor in the response returned by the last request. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;小米商城\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGetAsync(String keyword, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGetValidateBeforeCall(keyword, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0Call(String keyword, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_live_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0ValidateBeforeCall(String keyword, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0Call(keyword, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的直播搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_live_search_result）/Get live search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_live_search_result)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - cursor: 偏移量，从0开始，每次请求从上次请求返回响应中的cursor中获取。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - cursor: Offset, starting from 0, each request gets from the cursor in the response returned by the last request. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;小米商城\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0(String keyword, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0WithHttpInfo(keyword, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的直播搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_live_search_result）/Get live search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_live_search_result)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - cursor: 偏移量，从0开始，每次请求从上次请求返回响应中的cursor中获取。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - cursor: Offset, starting from 0, each request gets from the cursor in the response returned by the last request. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;小米商城\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0WithHttpInfo(String keyword, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0ValidateBeforeCall(keyword, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的直播搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_live_search_result）/Get live search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_live_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - cursor: 偏移量，从0开始，每次请求从上次请求返回响应中的cursor中获取。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - cursor: Offset, starting from 0, each request gets from the cursor in the response returned by the last request. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;小米商城\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param cursor 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0Async(String keyword, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1DouyinAppV3FetchLiveSearchResultGet_0ValidateBeforeCall(keyword, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost
     * @param requestBody  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPostCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_multi_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPostValidateBeforeCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPostCall(requestBody, _callback);
        return localVarCall;

    }

    /**
     * 批量获取视频信息/Batch Get Video Information
     * # [中文] ### 用途: - 批量获取视频信息，支持图文、视频等，一次性最多支持10个视频，此接口收费固定价格为0.001$ * 10 &#x3D; 0.01$一次。 ### 参数: - aweme_ids: 作品id列表，最多支持10个作品id。 ### 返回: - 作品数据  # [English] ### Purpose: - Batch Get Video Information, support photo, video, etc., up to 10 videos at a time, this interface charges a fixed price of 0.001$ * 10 &#x3D; 0.01$ each time. ### Parameters: - aweme_ids: List of video ids, up to 10 video ids are supported. ### Return: - Video data  # [示例/Example] aweme_ids &#x3D; [\&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;]
     * @param requestBody  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost(List<String> requestBody) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPostWithHttpInfo(requestBody);
        return localVarResp.getData();
    }

    /**
     * 批量获取视频信息/Batch Get Video Information
     * # [中文] ### 用途: - 批量获取视频信息，支持图文、视频等，一次性最多支持10个视频，此接口收费固定价格为0.001$ * 10 &#x3D; 0.01$一次。 ### 参数: - aweme_ids: 作品id列表，最多支持10个作品id。 ### 返回: - 作品数据  # [English] ### Purpose: - Batch Get Video Information, support photo, video, etc., up to 10 videos at a time, this interface charges a fixed price of 0.001$ * 10 &#x3D; 0.01$ each time. ### Parameters: - aweme_ids: List of video ids, up to 10 video ids are supported. ### Return: - Video data  # [示例/Example] aweme_ids &#x3D; [\&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;]
     * @param requestBody  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPostWithHttpInfo(List<String> requestBody) throws ApiException {
        okhttp3.Call localVarCall = fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPostValidateBeforeCall(requestBody, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量获取视频信息/Batch Get Video Information (asynchronously)
     * # [中文] ### 用途: - 批量获取视频信息，支持图文、视频等，一次性最多支持10个视频，此接口收费固定价格为0.001$ * 10 &#x3D; 0.01$一次。 ### 参数: - aweme_ids: 作品id列表，最多支持10个作品id。 ### 返回: - 作品数据  # [English] ### Purpose: - Batch Get Video Information, support photo, video, etc., up to 10 videos at a time, this interface charges a fixed price of 0.001$ * 10 &#x3D; 0.01$ each time. ### Parameters: - aweme_ids: List of video ids, up to 10 video ids are supported. ### Return: - Video data  # [示例/Example] aweme_ids &#x3D; [\&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;]
     * @param requestBody  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPostAsync(List<String> requestBody, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPostValidateBeforeCall(requestBody, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0
     * @param requestBody  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0Call(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = requestBody;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_multi_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0ValidateBeforeCall(List<String> requestBody, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0Call(requestBody, _callback);
        return localVarCall;

    }

    /**
     * 批量获取视频信息/Batch Get Video Information
     * # [中文] ### 用途: - 批量获取视频信息，支持图文、视频等，一次性最多支持10个视频，此接口收费固定价格为0.001$ * 10 &#x3D; 0.01$一次。 ### 参数: - aweme_ids: 作品id列表，最多支持10个作品id。 ### 返回: - 作品数据  # [English] ### Purpose: - Batch Get Video Information, support photo, video, etc., up to 10 videos at a time, this interface charges a fixed price of 0.001$ * 10 &#x3D; 0.01$ each time. ### Parameters: - aweme_ids: List of video ids, up to 10 video ids are supported. ### Return: - Video data  # [示例/Example] aweme_ids &#x3D; [\&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;]
     * @param requestBody  (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0(List<String> requestBody) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0WithHttpInfo(requestBody);
        return localVarResp.getData();
    }

    /**
     * 批量获取视频信息/Batch Get Video Information
     * # [中文] ### 用途: - 批量获取视频信息，支持图文、视频等，一次性最多支持10个视频，此接口收费固定价格为0.001$ * 10 &#x3D; 0.01$一次。 ### 参数: - aweme_ids: 作品id列表，最多支持10个作品id。 ### 返回: - 作品数据  # [English] ### Purpose: - Batch Get Video Information, support photo, video, etc., up to 10 videos at a time, this interface charges a fixed price of 0.001$ * 10 &#x3D; 0.01$ each time. ### Parameters: - aweme_ids: List of video ids, up to 10 video ids are supported. ### Return: - Video data  # [示例/Example] aweme_ids &#x3D; [\&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;]
     * @param requestBody  (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0WithHttpInfo(List<String> requestBody) throws ApiException {
        okhttp3.Call localVarCall = fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0ValidateBeforeCall(requestBody, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量获取视频信息/Batch Get Video Information (asynchronously)
     * # [中文] ### 用途: - 批量获取视频信息，支持图文、视频等，一次性最多支持10个视频，此接口收费固定价格为0.001$ * 10 &#x3D; 0.01$一次。 ### 参数: - aweme_ids: 作品id列表，最多支持10个作品id。 ### 返回: - 作品数据  # [English] ### Purpose: - Batch Get Video Information, support photo, video, etc., up to 10 videos at a time, this interface charges a fixed price of 0.001$ * 10 &#x3D; 0.01$ each time. ### Parameters: - aweme_ids: List of video ids, up to 10 video ids are supported. ### Return: - Video data  # [示例/Example] aweme_ids &#x3D; [\&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;, \&quot;7372484719365098803\&quot;, \&quot;7126745726494821640\&quot;]
     * @param requestBody  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0Async(List<String> requestBody, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMultiVideoApiV1DouyinAppV3FetchMultiVideoPost_0ValidateBeforeCall(requestBody, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet
     * @param musicId 音乐id/Music id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGetCall(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_music_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGetValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGetCall(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot;
     * @param musicId 音乐id/Music id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet(String musicId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGetWithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot;
     * @param musicId 音乐id/Music id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGetWithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGetValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music (asynchronously)
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot;
     * @param musicId 音乐id/Music id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGetAsync(String musicId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGetValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0
     * @param musicId 音乐id/Music id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0Call(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_music_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0ValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0Call(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot;
     * @param musicId 音乐id/Music id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0(String musicId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0WithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot;
     * @param musicId 音乐id/Music id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0WithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0ValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music (asynchronously)
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot;
     * @param musicId 音乐id/Music id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0Async(String musicId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicDetailApiV1DouyinAppV3FetchMusicDetailGet_0ValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_music_hot_search_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGetCall(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音音乐热榜数据/Get Douyin music hot search list data
     * # [中文] ### 用途: - 获取抖音音乐热榜数据 ### 返回: - 音乐热搜榜数据  # [English] ### Purpose: - Get Douyin music hot search list data ### Return: - Music hot search list data  # [示例/Example] pass
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音音乐热榜数据/Get Douyin music hot search list data
     * # [中文] ### 用途: - 获取抖音音乐热榜数据 ### 返回: - 音乐热搜榜数据  # [English] ### Purpose: - Get Douyin music hot search list data ### Return: - Music hot search list data  # [示例/Example] pass
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音音乐热榜数据/Get Douyin music hot search list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音音乐热榜数据 ### 返回: - 音乐热搜榜数据  # [English] ### Purpose: - Get Douyin music hot search list data ### Return: - Music hot search list data  # [示例/Example] pass
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_music_hot_search_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 获取抖音音乐热榜数据/Get Douyin music hot search list data
     * # [中文] ### 用途: - 获取抖音音乐热榜数据 ### 返回: - 音乐热搜榜数据  # [English] ### Purpose: - Get Douyin music hot search list data ### Return: - Music hot search list data  # [示例/Example] pass
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取抖音音乐热榜数据/Get Douyin music hot search list data
     * # [中文] ### 用途: - 获取抖音音乐热榜数据 ### 返回: - 音乐热搜榜数据  # [English] ### Purpose: - Get Douyin music hot search list data ### Return: - Music hot search list data  # [示例/Example] pass
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音音乐热榜数据/Get Douyin music hot search list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音音乐热榜数据 ### 返回: - 音乐热搜榜数据  # [English] ### Purpose: - Get Douyin music hot search list data ### Return: - Music hot search list data  # [示例/Example] pass
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicHotSearchListApiV1DouyinAppV3FetchMusicHotSearchListGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGetCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_music_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGetCall(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的音乐搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_music_search_result）/Get music search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_music_search_result)
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGetWithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的音乐搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_music_search_result）/Get music search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_music_search_result)
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGetValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的音乐搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_music_search_result）/Get music search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_music_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGetAsync(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGetValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0Call(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_music_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0Call(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的音乐搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_music_search_result）/Get music search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_music_search_result)
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0WithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的音乐搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_music_search_result）/Get music search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_music_search_result)
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0ValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的音乐搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_music_search_result）/Get music search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_music_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0Async(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1DouyinAppV3FetchMusicSearchResultGet_0ValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGetCall(String musicId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_music_video_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGetValidateBeforeCall(String musicId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGetCall(musicId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet(String musicId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGetWithHttpInfo(musicId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGetWithHttpInfo(String musicId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGetValidateBeforeCall(musicId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music (asynchronously)
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGetAsync(String musicId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGetValidateBeforeCall(musicId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0Call(String musicId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_music_video_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0ValidateBeforeCall(String musicId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0Call(musicId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0(String musicId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0WithHttpInfo(musicId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0WithHttpInfo(String musicId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0ValidateBeforeCall(musicId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music (asynchronously)
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;7136850194742315016\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0Async(String musicId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicVideoListApiV1DouyinAppV3FetchMusicVideoListGet_0ValidateBeforeCall(musicId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet
     * @param awemeId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1DouyinAppV3FetchOneVideoGetCall(String awemeId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_one_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1DouyinAppV3FetchOneVideoGetValidateBeforeCall(String awemeId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinAppV3FetchOneVideoGetCall(awemeId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet(String awemeId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1DouyinAppV3FetchOneVideoGetWithHttpInfo(awemeId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoApiV1DouyinAppV3FetchOneVideoGetWithHttpInfo(String awemeId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinAppV3FetchOneVideoGetValidateBeforeCall(awemeId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据/Get single video data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1DouyinAppV3FetchOneVideoGetAsync(String awemeId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinAppV3FetchOneVideoGetValidateBeforeCall(awemeId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0
     * @param awemeId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0Call(String awemeId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_one_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0ValidateBeforeCall(String awemeId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0Call(awemeId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0(String awemeId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0WithHttpInfo(awemeId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0WithHttpInfo(String awemeId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0ValidateBeforeCall(awemeId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据/Get single video data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot;
     * @param awemeId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0Async(String awemeId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1DouyinAppV3FetchOneVideoGet_0ValidateBeforeCall(awemeId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet
     * @param shareUrl 分享链接/Share link (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGetCall(String shareUrl, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_one_video_by_share_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (shareUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("share_url", shareUrl));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGetValidateBeforeCall(String shareUrl, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'shareUrl' is set
        if (shareUrl == null) {
            throw new ApiException("Missing the required parameter 'shareUrl' when calling fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGetCall(shareUrl, _callback);
        return localVarCall;

    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://v.douyin.com/e3x2fjE/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet(String shareUrl) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGetWithHttpInfo(shareUrl);
        return localVarResp.getData();
    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://v.douyin.com/e3x2fjE/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGetWithHttpInfo(String shareUrl) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGetValidateBeforeCall(shareUrl, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link (asynchronously)
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://v.douyin.com/e3x2fjE/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGetAsync(String shareUrl, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGetValidateBeforeCall(shareUrl, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0
     * @param shareUrl 分享链接/Share link (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0Call(String shareUrl, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_one_video_by_share_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (shareUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("share_url", shareUrl));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0ValidateBeforeCall(String shareUrl, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'shareUrl' is set
        if (shareUrl == null) {
            throw new ApiException("Missing the required parameter 'shareUrl' when calling fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0Call(shareUrl, _callback);
        return localVarCall;

    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://v.douyin.com/e3x2fjE/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0(String shareUrl) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0WithHttpInfo(shareUrl);
        return localVarResp.getData();
    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://v.douyin.com/e3x2fjE/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0WithHttpInfo(String shareUrl) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0ValidateBeforeCall(shareUrl, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link (asynchronously)
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://v.douyin.com/e3x2fjE/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0Async(String shareUrl, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1DouyinAppV3FetchOneVideoByShareUrlGet_0ValidateBeforeCall(shareUrl, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFansListApiV1DouyinAppV3FetchUserFansListGetCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_fans_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_time", maxTime));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFansListApiV1DouyinAppV3FetchUserFansListGetValidateBeforeCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinAppV3FetchUserFansListGetCall(secUserId, maxTime, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户粉丝列表/Get user fans list
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet(String secUserId, String maxTime, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFansListApiV1DouyinAppV3FetchUserFansListGetWithHttpInfo(secUserId, maxTime, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户粉丝列表/Get user fans list
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFansListApiV1DouyinAppV3FetchUserFansListGetWithHttpInfo(String secUserId, String maxTime, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinAppV3FetchUserFansListGetValidateBeforeCall(secUserId, maxTime, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户粉丝列表/Get user fans list (asynchronously)
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFansListApiV1DouyinAppV3FetchUserFansListGetAsync(String secUserId, String maxTime, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinAppV3FetchUserFansListGetValidateBeforeCall(secUserId, maxTime, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0Call(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_fans_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_time", maxTime));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0ValidateBeforeCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0Call(secUserId, maxTime, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户粉丝列表/Get user fans list
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0(String secUserId, String maxTime, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0WithHttpInfo(secUserId, maxTime, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户粉丝列表/Get user fans list
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0WithHttpInfo(String secUserId, String maxTime, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0ValidateBeforeCall(secUserId, maxTime, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户粉丝列表/Get user fans list (asynchronously)
     * # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 粉丝列表  # [English] ### Purpose: - Get user fans list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Fans list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0Async(String secUserId, String maxTime, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFansListApiV1DouyinAppV3FetchUserFansListGet_0ValidateBeforeCall(secUserId, maxTime, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGetCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_following_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_time", maxTime));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGetValidateBeforeCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGetCall(secUserId, maxTime, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户关注列表/Get user following list
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet(String secUserId, String maxTime, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGetWithHttpInfo(secUserId, maxTime, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户关注列表/Get user following list
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGetWithHttpInfo(String secUserId, String maxTime, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGetValidateBeforeCall(secUserId, maxTime, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户关注列表/Get user following list (asynchronously)
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGetAsync(String secUserId, String maxTime, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGetValidateBeforeCall(secUserId, maxTime, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0Call(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_following_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_time", maxTime));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0ValidateBeforeCall(String secUserId, String maxTime, Integer count, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0Call(secUserId, maxTime, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户关注列表/Get user following list
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0(String secUserId, String maxTime, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0WithHttpInfo(secUserId, maxTime, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户关注列表/Get user following list
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0WithHttpInfo(String secUserId, String maxTime, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0ValidateBeforeCall(secUserId, maxTime, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户关注列表/Get user following list (asynchronously)
     * # [中文] ### 用途: - 获取用户关注列表 ### 参数: - sec_user_id: 用户sec_user_id - max_time: 最大时间戳，默认为0，后续从返回数据中获取，用于翻页。 - count: 数量，默认为20，建议保持不变。 ### 返回: - 关注列表  # [English] ### Purpose: - Get user following list ### Parameters: - sec_user_id: User sec_user_id - max_time: Maximum timestamp, default is 0, get from the returned data later, used for paging. - count: Number, default is 20, it is recommended to keep it unchanged. ### Return: - Following list  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70\&quot; max_time &#x3D; \&quot;0\&quot; count &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (optional, default to &quot;MS4wLjABAAAA9y04iBlVdeMQqTJbqsQZKb-tqWqWW29jPVJqideHT70&quot;)
     * @param maxTime 最大时间戳/Maximum timestamp (optional, default to &quot;0&quot;)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0Async(String secUserId, String maxTime, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1DouyinAppV3FetchUserFollowingListGet_0ValidateBeforeCall(secUserId, maxTime, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGetCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_like_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGetValidateBeforeCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGetCall(secUserId, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGetWithHttpInfo(secUserId, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGetWithHttpInfo(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGetValidateBeforeCall(secUserId, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data (asynchronously)
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGetAsync(String secUserId, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGetValidateBeforeCall(secUserId, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0Call(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_like_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0ValidateBeforeCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0Call(secUserId, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0WithHttpInfo(secUserId, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0WithHttpInfo(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0ValidateBeforeCall(secUserId, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data (asynchronously)
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0Async(String secUserId, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1DouyinAppV3FetchUserLikeVideosGet_0ValidateBeforeCall(secUserId, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGetCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_post_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGetValidateBeforeCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGetCall(secUserId, maxCursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGetWithHttpInfo(secUserId, maxCursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGetWithHttpInfo(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGetValidateBeforeCall(secUserId, maxCursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data (asynchronously)
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGetAsync(String secUserId, Integer maxCursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGetValidateBeforeCall(secUserId, maxCursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0Call(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_post_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0ValidateBeforeCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0Call(secUserId, maxCursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0WithHttpInfo(secUserId, maxCursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0WithHttpInfo(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0ValidateBeforeCall(secUserId, maxCursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data (asynchronously)
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAANXSltcLCzDGmdNFI2Q_QixVTr67NiYzjKOIP5s03CAE\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0Async(String secUserId, Integer maxCursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1DouyinAppV3FetchUserPostVideosGet_0ValidateBeforeCall(secUserId, maxCursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGetCall(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (douyinUserFans != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("douyin_user_fans", douyinUserFans));
        }

        if (douyinUserType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("douyin_user_type", douyinUserType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGetCall(keyword, offset, count, douyinUserFans, douyinUserType, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的用户搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_user_search_result_v2）/Get user search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_user_search_result_v2)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - douyin_user_fans(粉丝数量):     - \&quot;\&quot;: 不限     - \&quot;0_1k\&quot;: 1000以下     - \&quot;1k_1w\&quot;: 1000-1万     - \&quot;1w_10w\&quot;: 1w-10w     - \&quot;10w_100w\&quot;: 10w-100w     - \&quot;100w_\&quot;: 100w以上 - douyin_user_type(用户类型，请使用英文而不是中文):     - \&quot;\&quot;: 不限     - \&quot;common_user\&quot;: 普通用户     - \&quot;enterprise_user\&quot;: 企业认证     - \&quot;personal_user\&quot;: 个人认证 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - douyin_user_fans(Fans):     - \&quot;\&quot;: Unlimited     - \&quot;0_1k\&quot;: Less than 1000     - \&quot;1k_1w\&quot;: 1000-10,000     - \&quot;1w_10w\&quot;: 10,000-100,000     - \&quot;10w_100w\&quot;: 100,000-1,000,000     - \&quot;100w_\&quot;: More than 1,000,000 - douyin_user_type(User type, please use English instead of Chinese):     - \&quot;\&quot;: Unlimited     - \&quot;common_user\&quot;: Common user     - \&quot;enterprise_user\&quot;: Enterprise certification     - \&quot;personal_user\&quot;: Personal certification ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGetWithHttpInfo(keyword, offset, count, douyinUserFans, douyinUserType);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的用户搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_user_search_result_v2）/Get user search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_user_search_result_v2)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - douyin_user_fans(粉丝数量):     - \&quot;\&quot;: 不限     - \&quot;0_1k\&quot;: 1000以下     - \&quot;1k_1w\&quot;: 1000-1万     - \&quot;1w_10w\&quot;: 1w-10w     - \&quot;10w_100w\&quot;: 10w-100w     - \&quot;100w_\&quot;: 100w以上 - douyin_user_type(用户类型，请使用英文而不是中文):     - \&quot;\&quot;: 不限     - \&quot;common_user\&quot;: 普通用户     - \&quot;enterprise_user\&quot;: 企业认证     - \&quot;personal_user\&quot;: 个人认证 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - douyin_user_fans(Fans):     - \&quot;\&quot;: Unlimited     - \&quot;0_1k\&quot;: Less than 1000     - \&quot;1k_1w\&quot;: 1000-10,000     - \&quot;1w_10w\&quot;: 10,000-100,000     - \&quot;10w_100w\&quot;: 100,000-1,000,000     - \&quot;100w_\&quot;: More than 1,000,000 - douyin_user_type(User type, please use English instead of Chinese):     - \&quot;\&quot;: Unlimited     - \&quot;common_user\&quot;: Common user     - \&quot;enterprise_user\&quot;: Enterprise certification     - \&quot;personal_user\&quot;: Personal certification ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType) throws ApiException {
        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGetValidateBeforeCall(keyword, offset, count, douyinUserFans, douyinUserType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的用户搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_user_search_result_v2）/Get user search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_user_search_result_v2) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - douyin_user_fans(粉丝数量):     - \&quot;\&quot;: 不限     - \&quot;0_1k\&quot;: 1000以下     - \&quot;1k_1w\&quot;: 1000-1万     - \&quot;1w_10w\&quot;: 1w-10w     - \&quot;10w_100w\&quot;: 10w-100w     - \&quot;100w_\&quot;: 100w以上 - douyin_user_type(用户类型，请使用英文而不是中文):     - \&quot;\&quot;: 不限     - \&quot;common_user\&quot;: 普通用户     - \&quot;enterprise_user\&quot;: 企业认证     - \&quot;personal_user\&quot;: 个人认证 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - douyin_user_fans(Fans):     - \&quot;\&quot;: Unlimited     - \&quot;0_1k\&quot;: Less than 1000     - \&quot;1k_1w\&quot;: 1000-10,000     - \&quot;1w_10w\&quot;: 10,000-100,000     - \&quot;10w_100w\&quot;: 100,000-1,000,000     - \&quot;100w_\&quot;: More than 1,000,000 - douyin_user_type(User type, please use English instead of Chinese):     - \&quot;\&quot;: Unlimited     - \&quot;common_user\&quot;: Common user     - \&quot;enterprise_user\&quot;: Enterprise certification     - \&quot;personal_user\&quot;: Personal certification ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGetAsync(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGetValidateBeforeCall(keyword, offset, count, douyinUserFans, douyinUserType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0Call(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_user_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (douyinUserFans != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("douyin_user_fans", douyinUserFans));
        }

        if (douyinUserType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("douyin_user_type", douyinUserType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0Call(keyword, offset, count, douyinUserFans, douyinUserType, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的用户搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_user_search_result_v2）/Get user search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_user_search_result_v2)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - douyin_user_fans(粉丝数量):     - \&quot;\&quot;: 不限     - \&quot;0_1k\&quot;: 1000以下     - \&quot;1k_1w\&quot;: 1000-1万     - \&quot;1w_10w\&quot;: 1w-10w     - \&quot;10w_100w\&quot;: 10w-100w     - \&quot;100w_\&quot;: 100w以上 - douyin_user_type(用户类型，请使用英文而不是中文):     - \&quot;\&quot;: 不限     - \&quot;common_user\&quot;: 普通用户     - \&quot;enterprise_user\&quot;: 企业认证     - \&quot;personal_user\&quot;: 个人认证 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - douyin_user_fans(Fans):     - \&quot;\&quot;: Unlimited     - \&quot;0_1k\&quot;: Less than 1000     - \&quot;1k_1w\&quot;: 1000-10,000     - \&quot;1w_10w\&quot;: 10,000-100,000     - \&quot;10w_100w\&quot;: 100,000-1,000,000     - \&quot;100w_\&quot;: More than 1,000,000 - douyin_user_type(User type, please use English instead of Chinese):     - \&quot;\&quot;: Unlimited     - \&quot;common_user\&quot;: Common user     - \&quot;enterprise_user\&quot;: Enterprise certification     - \&quot;personal_user\&quot;: Personal certification ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0WithHttpInfo(keyword, offset, count, douyinUserFans, douyinUserType);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的用户搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_user_search_result_v2）/Get user search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_user_search_result_v2)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - douyin_user_fans(粉丝数量):     - \&quot;\&quot;: 不限     - \&quot;0_1k\&quot;: 1000以下     - \&quot;1k_1w\&quot;: 1000-1万     - \&quot;1w_10w\&quot;: 1w-10w     - \&quot;10w_100w\&quot;: 10w-100w     - \&quot;100w_\&quot;: 100w以上 - douyin_user_type(用户类型，请使用英文而不是中文):     - \&quot;\&quot;: 不限     - \&quot;common_user\&quot;: 普通用户     - \&quot;enterprise_user\&quot;: 企业认证     - \&quot;personal_user\&quot;: 个人认证 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - douyin_user_fans(Fans):     - \&quot;\&quot;: Unlimited     - \&quot;0_1k\&quot;: Less than 1000     - \&quot;1k_1w\&quot;: 1000-10,000     - \&quot;1w_10w\&quot;: 10,000-100,000     - \&quot;10w_100w\&quot;: 100,000-1,000,000     - \&quot;100w_\&quot;: More than 1,000,000 - douyin_user_type(User type, please use English instead of Chinese):     - \&quot;\&quot;: Unlimited     - \&quot;common_user\&quot;: Common user     - \&quot;enterprise_user\&quot;: Enterprise certification     - \&quot;personal_user\&quot;: Personal certification ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType) throws ApiException {
        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0ValidateBeforeCall(keyword, offset, count, douyinUserFans, douyinUserType, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的用户搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_user_search_result_v2）/Get user search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_user_search_result_v2) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - douyin_user_fans(粉丝数量):     - \&quot;\&quot;: 不限     - \&quot;0_1k\&quot;: 1000以下     - \&quot;1k_1w\&quot;: 1000-1万     - \&quot;1w_10w\&quot;: 1w-10w     - \&quot;10w_100w\&quot;: 10w-100w     - \&quot;100w_\&quot;: 100w以上 - douyin_user_type(用户类型，请使用英文而不是中文):     - \&quot;\&quot;: 不限     - \&quot;common_user\&quot;: 普通用户     - \&quot;enterprise_user\&quot;: 企业认证     - \&quot;personal_user\&quot;: 个人认证 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - douyin_user_fans(Fans):     - \&quot;\&quot;: Unlimited     - \&quot;0_1k\&quot;: Less than 1000     - \&quot;1k_1w\&quot;: 1000-10,000     - \&quot;1w_10w\&quot;: 10,000-100,000     - \&quot;10w_100w\&quot;: 100,000-1,000,000     - \&quot;100w_\&quot;: More than 1,000,000 - douyin_user_type(User type, please use English instead of Chinese):     - \&quot;\&quot;: Unlimited     - \&quot;common_user\&quot;: Common user     - \&quot;enterprise_user\&quot;: Enterprise certification     - \&quot;personal_user\&quot;: Personal certification ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;动漫\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param douyinUserFans 粉丝数/Fans (optional, default to &quot;&quot;)
     * @param douyinUserType 用户类型/User type (optional, default to &quot;&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0Async(String keyword, Integer offset, Integer count, String douyinUserFans, String douyinUserType, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1DouyinAppV3FetchUserSearchResultGet_0ValidateBeforeCall(keyword, offset, count, douyinUserFans, douyinUserType, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGetCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGetValidateBeforeCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGetCall(awemeId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet(String awemeId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGetWithHttpInfo(awemeId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGetWithHttpInfo(String awemeId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGetValidateBeforeCall(awemeId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个视频评论数据/Get single video comments data (asynchronously)
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGetAsync(String awemeId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGetValidateBeforeCall(awemeId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0Call(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0ValidateBeforeCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0Call(awemeId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0(String awemeId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0WithHttpInfo(awemeId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0WithHttpInfo(String awemeId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0ValidateBeforeCall(awemeId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个视频评论数据/Get single video comments data (asynchronously)
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7372484719365098803\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0Async(String awemeId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1DouyinAppV3FetchVideoCommentsGet_0ValidateBeforeCall(awemeId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGetCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_comment_replies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (itemId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_id", itemId));
        }

        if (commentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("comment_id", commentId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGetValidateBeforeCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'itemId' is set
        if (itemId == null) {
            throw new ApiException("Missing the required parameter 'itemId' when calling fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet(Async)");
        }
        
        // verify the required parameter 'commentId' is set
        if (commentId == null) {
            throw new ApiException("Missing the required parameter 'commentId' when calling fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGetCall(itemId, commentId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGetWithHttpInfo(itemId, commentId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGetWithHttpInfo(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGetValidateBeforeCall(itemId, commentId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video (asynchronously)
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGetAsync(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGetValidateBeforeCall(itemId, commentId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0Call(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_comment_replies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (itemId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_id", itemId));
        }

        if (commentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("comment_id", commentId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0ValidateBeforeCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'itemId' is set
        if (itemId == null) {
            throw new ApiException("Missing the required parameter 'itemId' when calling fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0(Async)");
        }
        
        // verify the required parameter 'commentId' is set
        if (commentId == null) {
            throw new ApiException("Missing the required parameter 'commentId' when calling fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0Call(itemId, commentId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0WithHttpInfo(itemId, commentId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0WithHttpInfo(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0ValidateBeforeCall(itemId, commentId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video (asynchronously)
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7354666303006723354\&quot; comment_id &#x3D; \&quot;7354669356632638218\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0Async(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1DouyinAppV3FetchVideoCommentRepliesGet_0ValidateBeforeCall(itemId, commentId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet
     * @param mixId 合集id/Mix id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGetCall(String mixId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_mix_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (mixId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mix_id", mixId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGetValidateBeforeCall(String mixId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mixId' is set
        if (mixId == null) {
            throw new ApiException("Missing the required parameter 'mixId' when calling fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGetCall(mixId, _callback);
        return localVarCall;

    }

    /**
     * 获取抖音视频合集详情数据/Get Douyin video mix detail data
     * # [中文] ### 用途: - 获取抖音视频合集详情数据 ### 参数: - mix_id: 合集id ### 返回: - 视频合集详情数据  # [English] ### Purpose: - Get Douyin video mix detail data ### Parameters: - mix_id: Mix id ### Return: - Video mix detail data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot;
     * @param mixId 合集id/Mix id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet(String mixId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGetWithHttpInfo(mixId);
        return localVarResp.getData();
    }

    /**
     * 获取抖音视频合集详情数据/Get Douyin video mix detail data
     * # [中文] ### 用途: - 获取抖音视频合集详情数据 ### 参数: - mix_id: 合集id ### 返回: - 视频合集详情数据  # [English] ### Purpose: - Get Douyin video mix detail data ### Parameters: - mix_id: Mix id ### Return: - Video mix detail data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot;
     * @param mixId 合集id/Mix id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGetWithHttpInfo(String mixId) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGetValidateBeforeCall(mixId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音视频合集详情数据/Get Douyin video mix detail data (asynchronously)
     * # [中文] ### 用途: - 获取抖音视频合集详情数据 ### 参数: - mix_id: 合集id ### 返回: - 视频合集详情数据  # [English] ### Purpose: - Get Douyin video mix detail data ### Parameters: - mix_id: Mix id ### Return: - Video mix detail data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot;
     * @param mixId 合集id/Mix id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGetAsync(String mixId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGetValidateBeforeCall(mixId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0
     * @param mixId 合集id/Mix id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0Call(String mixId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_mix_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (mixId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mix_id", mixId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0ValidateBeforeCall(String mixId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mixId' is set
        if (mixId == null) {
            throw new ApiException("Missing the required parameter 'mixId' when calling fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0Call(mixId, _callback);
        return localVarCall;

    }

    /**
     * 获取抖音视频合集详情数据/Get Douyin video mix detail data
     * # [中文] ### 用途: - 获取抖音视频合集详情数据 ### 参数: - mix_id: 合集id ### 返回: - 视频合集详情数据  # [English] ### Purpose: - Get Douyin video mix detail data ### Parameters: - mix_id: Mix id ### Return: - Video mix detail data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot;
     * @param mixId 合集id/Mix id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0(String mixId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0WithHttpInfo(mixId);
        return localVarResp.getData();
    }

    /**
     * 获取抖音视频合集详情数据/Get Douyin video mix detail data
     * # [中文] ### 用途: - 获取抖音视频合集详情数据 ### 参数: - mix_id: 合集id ### 返回: - 视频合集详情数据  # [English] ### Purpose: - Get Douyin video mix detail data ### Parameters: - mix_id: Mix id ### Return: - Video mix detail data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot;
     * @param mixId 合集id/Mix id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0WithHttpInfo(String mixId) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0ValidateBeforeCall(mixId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音视频合集详情数据/Get Douyin video mix detail data (asynchronously)
     * # [中文] ### 用途: - 获取抖音视频合集详情数据 ### 参数: - mix_id: 合集id ### 返回: - 视频合集详情数据  # [English] ### Purpose: - Get Douyin video mix detail data ### Parameters: - mix_id: Mix id ### Return: - Video mix detail data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot;
     * @param mixId 合集id/Mix id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0Async(String mixId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoMixDetailApiV1DouyinAppV3FetchVideoMixDetailGet_0ValidateBeforeCall(mixId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet
     * @param mixId 合集id/Mix id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGetCall(String mixId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_mix_post_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (mixId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mix_id", mixId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGetValidateBeforeCall(String mixId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mixId' is set
        if (mixId == null) {
            throw new ApiException("Missing the required parameter 'mixId' when calling fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGetCall(mixId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取抖音视频合集作品列表数据/Get Douyin video mix post list data
     * # [中文] ### 用途: - 获取抖音视频合集作品列表数据 ### 参数: - mix_id: 合集id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 视频合集作品列表数据  # [English] ### Purpose: - Get Douyin video mix post list data ### Parameters: - mix_id: Mix id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Video mix post list data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param mixId 合集id/Mix id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet(String mixId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGetWithHttpInfo(mixId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取抖音视频合集作品列表数据/Get Douyin video mix post list data
     * # [中文] ### 用途: - 获取抖音视频合集作品列表数据 ### 参数: - mix_id: 合集id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 视频合集作品列表数据  # [English] ### Purpose: - Get Douyin video mix post list data ### Parameters: - mix_id: Mix id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Video mix post list data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param mixId 合集id/Mix id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGetWithHttpInfo(String mixId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGetValidateBeforeCall(mixId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音视频合集作品列表数据/Get Douyin video mix post list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音视频合集作品列表数据 ### 参数: - mix_id: 合集id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 视频合集作品列表数据  # [English] ### Purpose: - Get Douyin video mix post list data ### Parameters: - mix_id: Mix id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Video mix post list data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param mixId 合集id/Mix id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGetAsync(String mixId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGetValidateBeforeCall(mixId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0
     * @param mixId 合集id/Mix id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0Call(String mixId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_mix_post_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (mixId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mix_id", mixId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0ValidateBeforeCall(String mixId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mixId' is set
        if (mixId == null) {
            throw new ApiException("Missing the required parameter 'mixId' when calling fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0Call(mixId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取抖音视频合集作品列表数据/Get Douyin video mix post list data
     * # [中文] ### 用途: - 获取抖音视频合集作品列表数据 ### 参数: - mix_id: 合集id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 视频合集作品列表数据  # [English] ### Purpose: - Get Douyin video mix post list data ### Parameters: - mix_id: Mix id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Video mix post list data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param mixId 合集id/Mix id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0(String mixId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0WithHttpInfo(mixId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取抖音视频合集作品列表数据/Get Douyin video mix post list data
     * # [中文] ### 用途: - 获取抖音视频合集作品列表数据 ### 参数: - mix_id: 合集id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 视频合集作品列表数据  # [English] ### Purpose: - Get Douyin video mix post list data ### Parameters: - mix_id: Mix id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Video mix post list data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param mixId 合集id/Mix id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0WithHttpInfo(String mixId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0ValidateBeforeCall(mixId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取抖音视频合集作品列表数据/Get Douyin video mix post list data (asynchronously)
     * # [中文] ### 用途: - 获取抖音视频合集作品列表数据 ### 参数: - mix_id: 合集id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量，请保持默认，否则会出现BUG。 ### 返回: - 视频合集作品列表数据  # [English] ### Purpose: - Get Douyin video mix post list data ### Parameters: - mix_id: Mix id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number Please keep the default, otherwise there will be BUG. ### Return: - Video mix post list data  # [示例/Example] mix_id &#x3D; \&quot;7302011174286002217\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param mixId 合集id/Mix id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0Async(String mixId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoMixPostListApiV1DouyinAppV3FetchVideoMixPostListGet_0ValidateBeforeCall(mixId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGetCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        if (filterDuration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_duration", filterDuration));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGetCall(keyword, offset, count, sortType, publishTime, filterDuration, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的视频搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_video_search_result）/Get video search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_video_search_result)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGetWithHttpInfo(keyword, offset, count, sortType, publishTime, filterDuration);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的视频搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_video_search_result）/Get video search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_video_search_result)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的视频搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_video_search_result）/Get video search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_video_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGetAsync(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0Call(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        if (filterDuration != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter_duration", filterDuration));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0Call(keyword, offset, count, sortType, publishTime, filterDuration, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的视频搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_video_search_result）/Get video search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_video_search_result)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ResponseModel fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0WithHttpInfo(keyword, offset, count, sortType, publishTime, filterDuration);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的视频搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_video_search_result）/Get video search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_video_search_result)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<ResponseModel> fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的视频搜索结果（弃用，替代接口：/api/v1/douyin/web/fetch_video_search_result）/Get video search results of specified keywords (deprecated, alternative interface: /api/v1/douyin/web/fetch_video_search_result) (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量，请保持默认，否则会出现BUG。 - sort_type: 0:综合排序 1:最多点赞 2:最新发布 - publish_time: 0:不限 1:最近一天 7:最近一周 180:最近半年 - filter_duration: 0:不限 0-1:1分钟以内 1-5:1-5分钟 5-10000:5分钟以上 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number Please keep the default, otherwise there will be BUG. - sort_type: 0: Comprehensive sorting 1: Most likes 2: Latest release - publish_time: 0: Unlimited 1: Last day 7: Last week 180: Last half year - filter_duration: 0: Unlimited 0-1: Within 1 minute 1-5: 1-5 minutes 5-10000: More than 5 minutes ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; \&quot;0\&quot; publish_time &#x3D; \&quot;0\&quot; filter_duration &#x3D; \&quot;0\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional, default to &quot;0&quot;)
     * @param publishTime 发布时间/Publish time (optional, default to &quot;0&quot;)
     * @param filterDuration 时长/Duration (optional, default to &quot;0&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0Async(String keyword, Integer offset, Integer count, String sortType, String publishTime, String filterDuration, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1DouyinAppV3FetchVideoSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, filterDuration, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet
     * @param awemeIds 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGetCall(String awemeIds, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_statistics";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeIds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_ids", awemeIds));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGetValidateBeforeCall(String awemeIds, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeIds' is set
        if (awemeIds == null) {
            throw new ApiException("Missing the required parameter 'awemeIds' when calling fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGetCall(awemeIds, _callback);
        return localVarCall;

    }

    /**
     * 根据视频ID获取作品的统计数据/Get the statistical data of the work according to the video ID
     * # [中文] ### 用途: - 根据视频ID获取作品的统计数据 - 抖音大多数接口已经不再返回作品的播放数，只能通过此接口获取。 - 可以获取到的统计有：     - 点赞数（digg_count）     - 下载数（download_count）     - 播放数（play_count）     - 分享数（share_count） ### 参数: - aweme_ids: 作品id，支持多个视频id，用逗号隔开即可，不能超过2个，单个也可以，则无需逗号。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistical data of the Post according to the video ID - Most of the Douyin interfaces no longer return the number of plays of the Post, and can only be obtained through this interface. - List of statistics that can be obtained:     - Like count (digg_count)     - Download count (download_count)     - Play count (play_count)     - Share count (share_count) ### Parameters: - aweme_ids: Video id, supports multiple video ids, separated by commas, no more than 2, single is also possible, no need for commas. ### Return: - Post statistics data  # [示例/Example] aweme_ids &#x3D; \&quot;7372484719365098803,7126745726494821640\&quot;
     * @param awemeIds 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet(String awemeIds) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGetWithHttpInfo(awemeIds);
        return localVarResp.getData();
    }

    /**
     * 根据视频ID获取作品的统计数据/Get the statistical data of the work according to the video ID
     * # [中文] ### 用途: - 根据视频ID获取作品的统计数据 - 抖音大多数接口已经不再返回作品的播放数，只能通过此接口获取。 - 可以获取到的统计有：     - 点赞数（digg_count）     - 下载数（download_count）     - 播放数（play_count）     - 分享数（share_count） ### 参数: - aweme_ids: 作品id，支持多个视频id，用逗号隔开即可，不能超过2个，单个也可以，则无需逗号。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistical data of the Post according to the video ID - Most of the Douyin interfaces no longer return the number of plays of the Post, and can only be obtained through this interface. - List of statistics that can be obtained:     - Like count (digg_count)     - Download count (download_count)     - Play count (play_count)     - Share count (share_count) ### Parameters: - aweme_ids: Video id, supports multiple video ids, separated by commas, no more than 2, single is also possible, no need for commas. ### Return: - Post statistics data  # [示例/Example] aweme_ids &#x3D; \&quot;7372484719365098803,7126745726494821640\&quot;
     * @param awemeIds 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGetWithHttpInfo(String awemeIds) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGetValidateBeforeCall(awemeIds, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据视频ID获取作品的统计数据/Get the statistical data of the work according to the video ID (asynchronously)
     * # [中文] ### 用途: - 根据视频ID获取作品的统计数据 - 抖音大多数接口已经不再返回作品的播放数，只能通过此接口获取。 - 可以获取到的统计有：     - 点赞数（digg_count）     - 下载数（download_count）     - 播放数（play_count）     - 分享数（share_count） ### 参数: - aweme_ids: 作品id，支持多个视频id，用逗号隔开即可，不能超过2个，单个也可以，则无需逗号。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistical data of the Post according to the video ID - Most of the Douyin interfaces no longer return the number of plays of the Post, and can only be obtained through this interface. - List of statistics that can be obtained:     - Like count (digg_count)     - Download count (download_count)     - Play count (play_count)     - Share count (share_count) ### Parameters: - aweme_ids: Video id, supports multiple video ids, separated by commas, no more than 2, single is also possible, no need for commas. ### Return: - Post statistics data  # [示例/Example] aweme_ids &#x3D; \&quot;7372484719365098803,7126745726494821640\&quot;
     * @param awemeIds 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGetAsync(String awemeIds, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGetValidateBeforeCall(awemeIds, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0
     * @param awemeIds 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0Call(String awemeIds, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/fetch_video_statistics";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeIds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_ids", awemeIds));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0ValidateBeforeCall(String awemeIds, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeIds' is set
        if (awemeIds == null) {
            throw new ApiException("Missing the required parameter 'awemeIds' when calling fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0Call(awemeIds, _callback);
        return localVarCall;

    }

    /**
     * 根据视频ID获取作品的统计数据/Get the statistical data of the work according to the video ID
     * # [中文] ### 用途: - 根据视频ID获取作品的统计数据 - 抖音大多数接口已经不再返回作品的播放数，只能通过此接口获取。 - 可以获取到的统计有：     - 点赞数（digg_count）     - 下载数（download_count）     - 播放数（play_count）     - 分享数（share_count） ### 参数: - aweme_ids: 作品id，支持多个视频id，用逗号隔开即可，不能超过2个，单个也可以，则无需逗号。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistical data of the Post according to the video ID - Most of the Douyin interfaces no longer return the number of plays of the Post, and can only be obtained through this interface. - List of statistics that can be obtained:     - Like count (digg_count)     - Download count (download_count)     - Play count (play_count)     - Share count (share_count) ### Parameters: - aweme_ids: Video id, supports multiple video ids, separated by commas, no more than 2, single is also possible, no need for commas. ### Return: - Post statistics data  # [示例/Example] aweme_ids &#x3D; \&quot;7372484719365098803,7126745726494821640\&quot;
     * @param awemeIds 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0(String awemeIds) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0WithHttpInfo(awemeIds);
        return localVarResp.getData();
    }

    /**
     * 根据视频ID获取作品的统计数据/Get the statistical data of the work according to the video ID
     * # [中文] ### 用途: - 根据视频ID获取作品的统计数据 - 抖音大多数接口已经不再返回作品的播放数，只能通过此接口获取。 - 可以获取到的统计有：     - 点赞数（digg_count）     - 下载数（download_count）     - 播放数（play_count）     - 分享数（share_count） ### 参数: - aweme_ids: 作品id，支持多个视频id，用逗号隔开即可，不能超过2个，单个也可以，则无需逗号。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistical data of the Post according to the video ID - Most of the Douyin interfaces no longer return the number of plays of the Post, and can only be obtained through this interface. - List of statistics that can be obtained:     - Like count (digg_count)     - Download count (download_count)     - Play count (play_count)     - Share count (share_count) ### Parameters: - aweme_ids: Video id, supports multiple video ids, separated by commas, no more than 2, single is also possible, no need for commas. ### Return: - Post statistics data  # [示例/Example] aweme_ids &#x3D; \&quot;7372484719365098803,7126745726494821640\&quot;
     * @param awemeIds 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0WithHttpInfo(String awemeIds) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0ValidateBeforeCall(awemeIds, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据视频ID获取作品的统计数据/Get the statistical data of the work according to the video ID (asynchronously)
     * # [中文] ### 用途: - 根据视频ID获取作品的统计数据 - 抖音大多数接口已经不再返回作品的播放数，只能通过此接口获取。 - 可以获取到的统计有：     - 点赞数（digg_count）     - 下载数（download_count）     - 播放数（play_count）     - 分享数（share_count） ### 参数: - aweme_ids: 作品id，支持多个视频id，用逗号隔开即可，不能超过2个，单个也可以，则无需逗号。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistical data of the Post according to the video ID - Most of the Douyin interfaces no longer return the number of plays of the Post, and can only be obtained through this interface. - List of statistics that can be obtained:     - Like count (digg_count)     - Download count (download_count)     - Play count (play_count)     - Share count (share_count) ### Parameters: - aweme_ids: Video id, supports multiple video ids, separated by commas, no more than 2, single is also possible, no need for commas. ### Return: - Post statistics data  # [示例/Example] aweme_ids &#x3D; \&quot;7372484719365098803,7126745726494821640\&quot;
     * @param awemeIds 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0Async(String awemeIds, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoStatisticsApiV1DouyinAppV3FetchVideoStatisticsGet_0ValidateBeforeCall(awemeIds, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet
     * @param url 抖音链接/Douyin link (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGetCall(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/generate_douyin_short_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGetValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet(Async)");
        }
        

        okhttp3.Call localVarCall = generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGetCall(url, _callback);
        return localVarCall;

    }

    /**
     * 生成抖音短链接/Generate Douyin short link
     * # [中文] ### 用途: - 生成抖音短链接 ### 参数: - url: 抖音链接 ### 返回: - 短链接数据  # [English] ### Purpose: - Generate Douyin short link ### Parameters: - url: Douyin link ### Return: - Short link data  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/passport/web/logout/\&quot;
     * @param url 抖音链接/Douyin link (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGetWithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 生成抖音短链接/Generate Douyin short link
     * # [中文] ### 用途: - 生成抖音短链接 ### 参数: - url: 抖音链接 ### 返回: - 短链接数据  # [English] ### Purpose: - Generate Douyin short link ### Parameters: - url: Douyin link ### Return: - Short link data  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/passport/web/logout/\&quot;
     * @param url 抖音链接/Douyin link (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGetWithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGetValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成抖音短链接/Generate Douyin short link (asynchronously)
     * # [中文] ### 用途: - 生成抖音短链接 ### 参数: - url: 抖音链接 ### 返回: - 短链接数据  # [English] ### Purpose: - Generate Douyin short link ### Parameters: - url: Douyin link ### Return: - Short link data  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/passport/web/logout/\&quot;
     * @param url 抖音链接/Douyin link (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGetAsync(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGetValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0
     * @param url 抖音链接/Douyin link (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0Call(String url, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/generate_douyin_short_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (url != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("url", url));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0ValidateBeforeCall(String url, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'url' is set
        if (url == null) {
            throw new ApiException("Missing the required parameter 'url' when calling generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0Call(url, _callback);
        return localVarCall;

    }

    /**
     * 生成抖音短链接/Generate Douyin short link
     * # [中文] ### 用途: - 生成抖音短链接 ### 参数: - url: 抖音链接 ### 返回: - 短链接数据  # [English] ### Purpose: - Generate Douyin short link ### Parameters: - url: Douyin link ### Return: - Short link data  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/passport/web/logout/\&quot;
     * @param url 抖音链接/Douyin link (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0(String url) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0WithHttpInfo(url);
        return localVarResp.getData();
    }

    /**
     * 生成抖音短链接/Generate Douyin short link
     * # [中文] ### 用途: - 生成抖音短链接 ### 参数: - url: 抖音链接 ### 返回: - 短链接数据  # [English] ### Purpose: - Generate Douyin short link ### Parameters: - url: Douyin link ### Return: - Short link data  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/passport/web/logout/\&quot;
     * @param url 抖音链接/Douyin link (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0WithHttpInfo(String url) throws ApiException {
        okhttp3.Call localVarCall = generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0ValidateBeforeCall(url, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成抖音短链接/Generate Douyin short link (asynchronously)
     * # [中文] ### 用途: - 生成抖音短链接 ### 参数: - url: 抖音链接 ### 返回: - 短链接数据  # [English] ### Purpose: - Generate Douyin short link ### Parameters: - url: Douyin link ### Return: - Short link data  # [示例/Example] url &#x3D; \&quot;https://www.douyin.com/passport/web/logout/\&quot;
     * @param url 抖音链接/Douyin link (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0Async(String url, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateDouyinShortUrlApiV1DouyinAppV3GenerateDouyinShortUrlGet_0ValidateBeforeCall(url, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet
     * @param objectId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGetCall(String objectId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/generate_douyin_video_share_qrcode";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (objectId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("object_id", objectId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGetValidateBeforeCall(String objectId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'objectId' is set
        if (objectId == null) {
            throw new ApiException("Missing the required parameter 'objectId' when calling generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet(Async)");
        }
        

        okhttp3.Call localVarCall = generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGetCall(objectId, _callback);
        return localVarCall;

    }

    /**
     * 生成抖音视频分享二维码/Generate Douyin video share QR code
     * # [中文] ### 用途: - 生成抖音视频分享二维码 ### 参数: - object_id: 作品id或作者uid ### 返回: - 二维码数据  # [English] ### Purpose: - Generate Douyin video share QR code ### Parameters: - object_id: Video id or author uid ### Return: - QR code data  # [示例/Example] object_id &#x3D; \&quot;7348044435755846962\&quot;
     * @param objectId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet(String objectId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGetWithHttpInfo(objectId);
        return localVarResp.getData();
    }

    /**
     * 生成抖音视频分享二维码/Generate Douyin video share QR code
     * # [中文] ### 用途: - 生成抖音视频分享二维码 ### 参数: - object_id: 作品id或作者uid ### 返回: - 二维码数据  # [English] ### Purpose: - Generate Douyin video share QR code ### Parameters: - object_id: Video id or author uid ### Return: - QR code data  # [示例/Example] object_id &#x3D; \&quot;7348044435755846962\&quot;
     * @param objectId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGetWithHttpInfo(String objectId) throws ApiException {
        okhttp3.Call localVarCall = generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGetValidateBeforeCall(objectId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成抖音视频分享二维码/Generate Douyin video share QR code (asynchronously)
     * # [中文] ### 用途: - 生成抖音视频分享二维码 ### 参数: - object_id: 作品id或作者uid ### 返回: - 二维码数据  # [English] ### Purpose: - Generate Douyin video share QR code ### Parameters: - object_id: Video id or author uid ### Return: - QR code data  # [示例/Example] object_id &#x3D; \&quot;7348044435755846962\&quot;
     * @param objectId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGetAsync(String objectId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGetValidateBeforeCall(objectId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0
     * @param objectId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0Call(String objectId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/generate_douyin_video_share_qrcode";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (objectId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("object_id", objectId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0ValidateBeforeCall(String objectId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'objectId' is set
        if (objectId == null) {
            throw new ApiException("Missing the required parameter 'objectId' when calling generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0Call(objectId, _callback);
        return localVarCall;

    }

    /**
     * 生成抖音视频分享二维码/Generate Douyin video share QR code
     * # [中文] ### 用途: - 生成抖音视频分享二维码 ### 参数: - object_id: 作品id或作者uid ### 返回: - 二维码数据  # [English] ### Purpose: - Generate Douyin video share QR code ### Parameters: - object_id: Video id or author uid ### Return: - QR code data  # [示例/Example] object_id &#x3D; \&quot;7348044435755846962\&quot;
     * @param objectId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0(String objectId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0WithHttpInfo(objectId);
        return localVarResp.getData();
    }

    /**
     * 生成抖音视频分享二维码/Generate Douyin video share QR code
     * # [中文] ### 用途: - 生成抖音视频分享二维码 ### 参数: - object_id: 作品id或作者uid ### 返回: - 二维码数据  # [English] ### Purpose: - Generate Douyin video share QR code ### Parameters: - object_id: Video id or author uid ### Return: - QR code data  # [示例/Example] object_id &#x3D; \&quot;7348044435755846962\&quot;
     * @param objectId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0WithHttpInfo(String objectId) throws ApiException {
        okhttp3.Call localVarCall = generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0ValidateBeforeCall(objectId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 生成抖音视频分享二维码/Generate Douyin video share QR code (asynchronously)
     * # [中文] ### 用途: - 生成抖音视频分享二维码 ### 参数: - object_id: 作品id或作者uid ### 返回: - 二维码数据  # [English] ### Purpose: - Generate Douyin video share QR code ### Parameters: - object_id: Video id or author uid ### Return: - QR code data  # [示例/Example] object_id &#x3D; \&quot;7348044435755846962\&quot;
     * @param objectId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0Async(String objectId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = generateDouyinVideoShareQrcodeApiV1DouyinAppV3GenerateDouyinVideoShareQrcodeGet_0ValidateBeforeCall(objectId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGetCall(String secUserId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/handler_user_profile";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGetValidateBeforeCall(String secUserId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet(Async)");
        }
        

        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGetCall(secUserId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet(String secUserId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGetWithHttpInfo(secUserId);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGetWithHttpInfo(String secUserId) throws ApiException {
        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGetValidateBeforeCall(secUserId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的信息/Get information of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGetAsync(String secUserId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGetValidateBeforeCall(secUserId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0Call(String secUserId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/douyin/app/v3/handler_user_profile";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0ValidateBeforeCall(String secUserId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0Call(secUserId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0(String secUserId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0WithHttpInfo(secUserId);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0WithHttpInfo(String secUserId) throws ApiException {
        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0ValidateBeforeCall(secUserId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的信息/Get information of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAW9FWcqS7RdQAWPd2AA5fL_ilmqsIFUCQ_Iym6Yh9_cUa6ZRqVLjVQSUjlHrfXY1Y\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0Async(String secUserId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = handlerUserProfileApiV1DouyinAppV3HandlerUserProfileGet_0ValidateBeforeCall(secUserId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
