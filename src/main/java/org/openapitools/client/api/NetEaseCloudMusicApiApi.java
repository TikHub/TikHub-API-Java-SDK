/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.HttpValidationError;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NetEaseCloudMusicApiApi {
    private ApiClient localVarApiClient;

    public NetEaseCloudMusicApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public NetEaseCloudMusicApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost
     * @param body  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPostCall(String body, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/decrypt_post_payload";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPostValidateBeforeCall(String body, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPostCall(body, _callback);
        return localVarCall;

    }

    /**
     * 解密POST请求中的16进制payload/Decrypt the 16-bit payload in the POST request
     * # [中文] ### 用途: - 解密网易云音乐APP POST请求中的16进制payload。 ### 参数: - payload: 16进制payload。 ### 返回: - 解密后的payload  # [English] ### Purpose: - Decrypt the 16-bit payload in the POST request of NetEase Cloud Music APP. ### Parameters: - payload: 16-bit payload. ### Returns: - Decrypted payload  # [示例/Example] payload &#x3D; \&quot;4AEEAB033C3F4068DBB74379B8C889D2187585FBBBC7CA1ADA7D10714AA139AE279A615DE7B87483A83A9091ED52D70B70DA02A7FE8A20317AA40F0FF461AC33DB77371E30F9C7F57783E800559AE08DD1E10EFC9CDC69D6815ADCDBF5A7D3006AA3B102FBE7296AB0DB9EA5C46AD12B\&quot;
     * @param body  (optional)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost(String body) throws ApiException {
        ApiResponse<String> localVarResp = decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPostWithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * 解密POST请求中的16进制payload/Decrypt the 16-bit payload in the POST request
     * # [中文] ### 用途: - 解密网易云音乐APP POST请求中的16进制payload。 ### 参数: - payload: 16进制payload。 ### 返回: - 解密后的payload  # [English] ### Purpose: - Decrypt the 16-bit payload in the POST request of NetEase Cloud Music APP. ### Parameters: - payload: 16-bit payload. ### Returns: - Decrypted payload  # [示例/Example] payload &#x3D; \&quot;4AEEAB033C3F4068DBB74379B8C889D2187585FBBBC7CA1ADA7D10714AA139AE279A615DE7B87483A83A9091ED52D70B70DA02A7FE8A20317AA40F0FF461AC33DB77371E30F9C7F57783E800559AE08DD1E10EFC9CDC69D6815ADCDBF5A7D3006AA3B102FBE7296AB0DB9EA5C46AD12B\&quot;
     * @param body  (optional)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPostWithHttpInfo(String body) throws ApiException {
        okhttp3.Call localVarCall = decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPostValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 解密POST请求中的16进制payload/Decrypt the 16-bit payload in the POST request (asynchronously)
     * # [中文] ### 用途: - 解密网易云音乐APP POST请求中的16进制payload。 ### 参数: - payload: 16进制payload。 ### 返回: - 解密后的payload  # [English] ### Purpose: - Decrypt the 16-bit payload in the POST request of NetEase Cloud Music APP. ### Parameters: - payload: 16-bit payload. ### Returns: - Decrypted payload  # [示例/Example] payload &#x3D; \&quot;4AEEAB033C3F4068DBB74379B8C889D2187585FBBBC7CA1ADA7D10714AA139AE279A615DE7B87483A83A9091ED52D70B70DA02A7FE8A20317AA40F0FF461AC33DB77371E30F9C7F57783E800559AE08DD1E10EFC9CDC69D6815ADCDBF5A7D3006AA3B102FBE7296AB0DB9EA5C46AD12B\&quot;
     * @param body  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPostAsync(String body, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPostValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0
     * @param body  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0Call(String body, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/decrypt_post_payload";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0ValidateBeforeCall(String body, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0Call(body, _callback);
        return localVarCall;

    }

    /**
     * 解密POST请求中的16进制payload/Decrypt the 16-bit payload in the POST request
     * # [中文] ### 用途: - 解密网易云音乐APP POST请求中的16进制payload。 ### 参数: - payload: 16进制payload。 ### 返回: - 解密后的payload  # [English] ### Purpose: - Decrypt the 16-bit payload in the POST request of NetEase Cloud Music APP. ### Parameters: - payload: 16-bit payload. ### Returns: - Decrypted payload  # [示例/Example] payload &#x3D; \&quot;4AEEAB033C3F4068DBB74379B8C889D2187585FBBBC7CA1ADA7D10714AA139AE279A615DE7B87483A83A9091ED52D70B70DA02A7FE8A20317AA40F0FF461AC33DB77371E30F9C7F57783E800559AE08DD1E10EFC9CDC69D6815ADCDBF5A7D3006AA3B102FBE7296AB0DB9EA5C46AD12B\&quot;
     * @param body  (optional)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0(String body) throws ApiException {
        ApiResponse<String> localVarResp = decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0WithHttpInfo(body);
        return localVarResp.getData();
    }

    /**
     * 解密POST请求中的16进制payload/Decrypt the 16-bit payload in the POST request
     * # [中文] ### 用途: - 解密网易云音乐APP POST请求中的16进制payload。 ### 参数: - payload: 16进制payload。 ### 返回: - 解密后的payload  # [English] ### Purpose: - Decrypt the 16-bit payload in the POST request of NetEase Cloud Music APP. ### Parameters: - payload: 16-bit payload. ### Returns: - Decrypted payload  # [示例/Example] payload &#x3D; \&quot;4AEEAB033C3F4068DBB74379B8C889D2187585FBBBC7CA1ADA7D10714AA139AE279A615DE7B87483A83A9091ED52D70B70DA02A7FE8A20317AA40F0FF461AC33DB77371E30F9C7F57783E800559AE08DD1E10EFC9CDC69D6815ADCDBF5A7D3006AA3B102FBE7296AB0DB9EA5C46AD12B\&quot;
     * @param body  (optional)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0WithHttpInfo(String body) throws ApiException {
        okhttp3.Call localVarCall = decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0ValidateBeforeCall(body, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 解密POST请求中的16进制payload/Decrypt the 16-bit payload in the POST request (asynchronously)
     * # [中文] ### 用途: - 解密网易云音乐APP POST请求中的16进制payload。 ### 参数: - payload: 16进制payload。 ### 返回: - 解密后的payload  # [English] ### Purpose: - Decrypt the 16-bit payload in the POST request of NetEase Cloud Music APP. ### Parameters: - payload: 16-bit payload. ### Returns: - Decrypted payload  # [示例/Example] payload &#x3D; \&quot;4AEEAB033C3F4068DBB74379B8C889D2187585FBBBC7CA1ADA7D10714AA139AE279A615DE7B87483A83A9091ED52D70B70DA02A7FE8A20317AA40F0FF461AC33DB77371E30F9C7F57783E800559AE08DD1E10EFC9CDC69D6815ADCDBF5A7D3006AA3B102FBE7296AB0DB9EA5C46AD12B\&quot;
     * @param body  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0Async(String body, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = decryptPostPayloadApiV1NetEaseCloudMusicAppDecryptPostPayloadPost_0ValidateBeforeCall(body, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost
     * @param uri 请求URI/Request URI (required)
     * @param addVariable 是否添加变量/Whether to add variables (optional, default to false)
     * @param body  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPostCall(String uri, Boolean addVariable, Object body, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/encrypt_post_payload";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uri != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uri", uri));
        }

        if (addVariable != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("add_variable", addVariable));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPostValidateBeforeCall(String uri, Boolean addVariable, Object body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uri' is set
        if (uri == null) {
            throw new ApiException("Missing the required parameter 'uri' when calling encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost(Async)");
        }
        

        okhttp3.Call localVarCall = encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPostCall(uri, addVariable, body, _callback);
        return localVarCall;

    }

    /**
     * 加密POST请求中的payload并且返回16进制/Encrypt the payload in the POST request and return 16 hexadecimal
     * # [中文] ### 用途: - 加密POST请求中的payload并且返回16进制。 ### 参数: - payload: 需要加密的payload。 ### 返回: - 加密后的16进制payload  # [English] ### Purpose: - Encrypt the payload in the POST request and return 16 hexadecimal. ### Parameters: - payload: Payload to be encrypted. ### Returns: - Encrypted 16 hexadecimal payload  # [示例/Example] payload &#x3D; {\&quot;id\&quot;: 2135155051, \&quot;br\&quot;: 192000}
     * @param uri 请求URI/Request URI (required)
     * @param addVariable 是否添加变量/Whether to add variables (optional, default to false)
     * @param body  (optional)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost(String uri, Boolean addVariable, Object body) throws ApiException {
        ApiResponse<String> localVarResp = encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPostWithHttpInfo(uri, addVariable, body);
        return localVarResp.getData();
    }

    /**
     * 加密POST请求中的payload并且返回16进制/Encrypt the payload in the POST request and return 16 hexadecimal
     * # [中文] ### 用途: - 加密POST请求中的payload并且返回16进制。 ### 参数: - payload: 需要加密的payload。 ### 返回: - 加密后的16进制payload  # [English] ### Purpose: - Encrypt the payload in the POST request and return 16 hexadecimal. ### Parameters: - payload: Payload to be encrypted. ### Returns: - Encrypted 16 hexadecimal payload  # [示例/Example] payload &#x3D; {\&quot;id\&quot;: 2135155051, \&quot;br\&quot;: 192000}
     * @param uri 请求URI/Request URI (required)
     * @param addVariable 是否添加变量/Whether to add variables (optional, default to false)
     * @param body  (optional)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPostWithHttpInfo(String uri, Boolean addVariable, Object body) throws ApiException {
        okhttp3.Call localVarCall = encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPostValidateBeforeCall(uri, addVariable, body, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 加密POST请求中的payload并且返回16进制/Encrypt the payload in the POST request and return 16 hexadecimal (asynchronously)
     * # [中文] ### 用途: - 加密POST请求中的payload并且返回16进制。 ### 参数: - payload: 需要加密的payload。 ### 返回: - 加密后的16进制payload  # [English] ### Purpose: - Encrypt the payload in the POST request and return 16 hexadecimal. ### Parameters: - payload: Payload to be encrypted. ### Returns: - Encrypted 16 hexadecimal payload  # [示例/Example] payload &#x3D; {\&quot;id\&quot;: 2135155051, \&quot;br\&quot;: 192000}
     * @param uri 请求URI/Request URI (required)
     * @param addVariable 是否添加变量/Whether to add variables (optional, default to false)
     * @param body  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPostAsync(String uri, Boolean addVariable, Object body, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPostValidateBeforeCall(uri, addVariable, body, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0
     * @param uri 请求URI/Request URI (required)
     * @param addVariable 是否添加变量/Whether to add variables (optional, default to false)
     * @param body  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0Call(String uri, Boolean addVariable, Object body, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/encrypt_post_payload";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uri != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uri", uri));
        }

        if (addVariable != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("add_variable", addVariable));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0ValidateBeforeCall(String uri, Boolean addVariable, Object body, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uri' is set
        if (uri == null) {
            throw new ApiException("Missing the required parameter 'uri' when calling encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0(Async)");
        }
        

        okhttp3.Call localVarCall = encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0Call(uri, addVariable, body, _callback);
        return localVarCall;

    }

    /**
     * 加密POST请求中的payload并且返回16进制/Encrypt the payload in the POST request and return 16 hexadecimal
     * # [中文] ### 用途: - 加密POST请求中的payload并且返回16进制。 ### 参数: - payload: 需要加密的payload。 ### 返回: - 加密后的16进制payload  # [English] ### Purpose: - Encrypt the payload in the POST request and return 16 hexadecimal. ### Parameters: - payload: Payload to be encrypted. ### Returns: - Encrypted 16 hexadecimal payload  # [示例/Example] payload &#x3D; {\&quot;id\&quot;: 2135155051, \&quot;br\&quot;: 192000}
     * @param uri 请求URI/Request URI (required)
     * @param addVariable 是否添加变量/Whether to add variables (optional, default to false)
     * @param body  (optional)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0(String uri, Boolean addVariable, Object body) throws ApiException {
        ApiResponse<String> localVarResp = encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0WithHttpInfo(uri, addVariable, body);
        return localVarResp.getData();
    }

    /**
     * 加密POST请求中的payload并且返回16进制/Encrypt the payload in the POST request and return 16 hexadecimal
     * # [中文] ### 用途: - 加密POST请求中的payload并且返回16进制。 ### 参数: - payload: 需要加密的payload。 ### 返回: - 加密后的16进制payload  # [English] ### Purpose: - Encrypt the payload in the POST request and return 16 hexadecimal. ### Parameters: - payload: Payload to be encrypted. ### Returns: - Encrypted 16 hexadecimal payload  # [示例/Example] payload &#x3D; {\&quot;id\&quot;: 2135155051, \&quot;br\&quot;: 192000}
     * @param uri 请求URI/Request URI (required)
     * @param addVariable 是否添加变量/Whether to add variables (optional, default to false)
     * @param body  (optional)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0WithHttpInfo(String uri, Boolean addVariable, Object body) throws ApiException {
        okhttp3.Call localVarCall = encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0ValidateBeforeCall(uri, addVariable, body, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 加密POST请求中的payload并且返回16进制/Encrypt the payload in the POST request and return 16 hexadecimal (asynchronously)
     * # [中文] ### 用途: - 加密POST请求中的payload并且返回16进制。 ### 参数: - payload: 需要加密的payload。 ### 返回: - 加密后的16进制payload  # [English] ### Purpose: - Encrypt the payload in the POST request and return 16 hexadecimal. ### Parameters: - payload: Payload to be encrypted. ### Returns: - Encrypted 16 hexadecimal payload  # [示例/Example] payload &#x3D; {\&quot;id\&quot;: 2135155051, \&quot;br\&quot;: 192000}
     * @param uri 请求URI/Request URI (required)
     * @param addVariable 是否添加变量/Whether to add variables (optional, default to false)
     * @param body  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0Async(String uri, Boolean addVariable, Object body, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = encryptPostPayloadApiV1NetEaseCloudMusicAppEncryptPostPayloadPost_0ValidateBeforeCall(uri, addVariable, body, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet
     * @param artistId 歌手ID/Artist ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGetCall(String artistId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_artist_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (artistId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("artist_id", artistId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGetValidateBeforeCall(String artistId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'artistId' is set
        if (artistId == null) {
            throw new ApiException("Missing the required parameter 'artistId' when calling fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGetCall(artistId, _callback);
        return localVarCall;

    }

    /**
     * 获取歌手信息/Fetch artist detail
     * # [中文] ### 用途: - 获取歌手信息。 ### 参数: - artist_id: 歌手ID。 ### 返回: - 歌手信息  # [English] ### Purpose: - Fetch artist detail. ### Parameters: - artist_id: Artist ID. ### Returns: - Artist detail  # [示例/Example] artist_id &#x3D; \&quot;12213291\&quot;
     * @param artistId 歌手ID/Artist ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet(String artistId) throws ApiException {
        ApiResponse<String> localVarResp = fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGetWithHttpInfo(artistId);
        return localVarResp.getData();
    }

    /**
     * 获取歌手信息/Fetch artist detail
     * # [中文] ### 用途: - 获取歌手信息。 ### 参数: - artist_id: 歌手ID。 ### 返回: - 歌手信息  # [English] ### Purpose: - Fetch artist detail. ### Parameters: - artist_id: Artist ID. ### Returns: - Artist detail  # [示例/Example] artist_id &#x3D; \&quot;12213291\&quot;
     * @param artistId 歌手ID/Artist ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGetWithHttpInfo(String artistId) throws ApiException {
        okhttp3.Call localVarCall = fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGetValidateBeforeCall(artistId, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取歌手信息/Fetch artist detail (asynchronously)
     * # [中文] ### 用途: - 获取歌手信息。 ### 参数: - artist_id: 歌手ID。 ### 返回: - 歌手信息  # [English] ### Purpose: - Fetch artist detail. ### Parameters: - artist_id: Artist ID. ### Returns: - Artist detail  # [示例/Example] artist_id &#x3D; \&quot;12213291\&quot;
     * @param artistId 歌手ID/Artist ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGetAsync(String artistId, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGetValidateBeforeCall(artistId, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0
     * @param artistId 歌手ID/Artist ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0Call(String artistId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_artist_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (artistId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("artist_id", artistId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0ValidateBeforeCall(String artistId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'artistId' is set
        if (artistId == null) {
            throw new ApiException("Missing the required parameter 'artistId' when calling fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0Call(artistId, _callback);
        return localVarCall;

    }

    /**
     * 获取歌手信息/Fetch artist detail
     * # [中文] ### 用途: - 获取歌手信息。 ### 参数: - artist_id: 歌手ID。 ### 返回: - 歌手信息  # [English] ### Purpose: - Fetch artist detail. ### Parameters: - artist_id: Artist ID. ### Returns: - Artist detail  # [示例/Example] artist_id &#x3D; \&quot;12213291\&quot;
     * @param artistId 歌手ID/Artist ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0(String artistId) throws ApiException {
        ApiResponse<String> localVarResp = fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0WithHttpInfo(artistId);
        return localVarResp.getData();
    }

    /**
     * 获取歌手信息/Fetch artist detail
     * # [中文] ### 用途: - 获取歌手信息。 ### 参数: - artist_id: 歌手ID。 ### 返回: - 歌手信息  # [English] ### Purpose: - Fetch artist detail. ### Parameters: - artist_id: Artist ID. ### Returns: - Artist detail  # [示例/Example] artist_id &#x3D; \&quot;12213291\&quot;
     * @param artistId 歌手ID/Artist ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0WithHttpInfo(String artistId) throws ApiException {
        okhttp3.Call localVarCall = fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0ValidateBeforeCall(artistId, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取歌手信息/Fetch artist detail (asynchronously)
     * # [中文] ### 用途: - 获取歌手信息。 ### 参数: - artist_id: 歌手ID。 ### 返回: - 歌手信息  # [English] ### Purpose: - Fetch artist detail. ### Parameters: - artist_id: Artist ID. ### Returns: - Artist detail  # [示例/Example] artist_id &#x3D; \&quot;12213291\&quot;
     * @param artistId 歌手ID/Artist ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0Async(String artistId, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchArtistDetailApiV1NetEaseCloudMusicAppFetchArtistDetailGet_0ValidateBeforeCall(artistId, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet
     * @param resourceId 资源ID/Resource ID (required)
     * @param beforeTime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;30&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGetCall(String resourceId, String beforeTime, String limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_music_comment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (resourceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("resource_id", resourceId));
        }

        if (beforeTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("beforeTime", beforeTime));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGetValidateBeforeCall(String resourceId, String beforeTime, String limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'resourceId' is set
        if (resourceId == null) {
            throw new ApiException("Missing the required parameter 'resourceId' when calling fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGetCall(resourceId, beforeTime, limit, _callback);
        return localVarCall;

    }

    /**
     * 获取歌曲评论/Fetch music comment
     * # [中文] ### 用途: - 获取歌曲评论。 ### 参数: - resource_id: 资源ID，可以是歌曲ID，专辑ID等。 - beforeTime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条评论的时间戳，或者查看返回的Next_Page_beforeTime字段。 - limit: 每页数量，默认为30。 ### 返回: - 歌曲评论  # [English] ### Purpose: - Fetch music comment. ### Parameters: - resource_id: Resource ID, can be song ID, album ID, etc. - beforeTime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last comment returned on the first page on the second page, or check the Next_Page_beforeTime field returned. - limit: Number per page, default is 30. ### Returns: - Music comment  # [示例/Example] resource_id &#x3D; \&quot;2135155051\&quot; beforeTime &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;30\&quot;
     * @param resourceId 资源ID/Resource ID (required)
     * @param beforeTime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;30&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet(String resourceId, String beforeTime, String limit) throws ApiException {
        ApiResponse<String> localVarResp = fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGetWithHttpInfo(resourceId, beforeTime, limit);
        return localVarResp.getData();
    }

    /**
     * 获取歌曲评论/Fetch music comment
     * # [中文] ### 用途: - 获取歌曲评论。 ### 参数: - resource_id: 资源ID，可以是歌曲ID，专辑ID等。 - beforeTime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条评论的时间戳，或者查看返回的Next_Page_beforeTime字段。 - limit: 每页数量，默认为30。 ### 返回: - 歌曲评论  # [English] ### Purpose: - Fetch music comment. ### Parameters: - resource_id: Resource ID, can be song ID, album ID, etc. - beforeTime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last comment returned on the first page on the second page, or check the Next_Page_beforeTime field returned. - limit: Number per page, default is 30. ### Returns: - Music comment  # [示例/Example] resource_id &#x3D; \&quot;2135155051\&quot; beforeTime &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;30\&quot;
     * @param resourceId 资源ID/Resource ID (required)
     * @param beforeTime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;30&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGetWithHttpInfo(String resourceId, String beforeTime, String limit) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGetValidateBeforeCall(resourceId, beforeTime, limit, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取歌曲评论/Fetch music comment (asynchronously)
     * # [中文] ### 用途: - 获取歌曲评论。 ### 参数: - resource_id: 资源ID，可以是歌曲ID，专辑ID等。 - beforeTime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条评论的时间戳，或者查看返回的Next_Page_beforeTime字段。 - limit: 每页数量，默认为30。 ### 返回: - 歌曲评论  # [English] ### Purpose: - Fetch music comment. ### Parameters: - resource_id: Resource ID, can be song ID, album ID, etc. - beforeTime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last comment returned on the first page on the second page, or check the Next_Page_beforeTime field returned. - limit: Number per page, default is 30. ### Returns: - Music comment  # [示例/Example] resource_id &#x3D; \&quot;2135155051\&quot; beforeTime &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;30\&quot;
     * @param resourceId 资源ID/Resource ID (required)
     * @param beforeTime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;30&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGetAsync(String resourceId, String beforeTime, String limit, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGetValidateBeforeCall(resourceId, beforeTime, limit, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0
     * @param resourceId 资源ID/Resource ID (required)
     * @param beforeTime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;30&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0Call(String resourceId, String beforeTime, String limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_music_comment";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (resourceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("resource_id", resourceId));
        }

        if (beforeTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("beforeTime", beforeTime));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0ValidateBeforeCall(String resourceId, String beforeTime, String limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'resourceId' is set
        if (resourceId == null) {
            throw new ApiException("Missing the required parameter 'resourceId' when calling fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0Call(resourceId, beforeTime, limit, _callback);
        return localVarCall;

    }

    /**
     * 获取歌曲评论/Fetch music comment
     * # [中文] ### 用途: - 获取歌曲评论。 ### 参数: - resource_id: 资源ID，可以是歌曲ID，专辑ID等。 - beforeTime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条评论的时间戳，或者查看返回的Next_Page_beforeTime字段。 - limit: 每页数量，默认为30。 ### 返回: - 歌曲评论  # [English] ### Purpose: - Fetch music comment. ### Parameters: - resource_id: Resource ID, can be song ID, album ID, etc. - beforeTime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last comment returned on the first page on the second page, or check the Next_Page_beforeTime field returned. - limit: Number per page, default is 30. ### Returns: - Music comment  # [示例/Example] resource_id &#x3D; \&quot;2135155051\&quot; beforeTime &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;30\&quot;
     * @param resourceId 资源ID/Resource ID (required)
     * @param beforeTime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;30&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0(String resourceId, String beforeTime, String limit) throws ApiException {
        ApiResponse<String> localVarResp = fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0WithHttpInfo(resourceId, beforeTime, limit);
        return localVarResp.getData();
    }

    /**
     * 获取歌曲评论/Fetch music comment
     * # [中文] ### 用途: - 获取歌曲评论。 ### 参数: - resource_id: 资源ID，可以是歌曲ID，专辑ID等。 - beforeTime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条评论的时间戳，或者查看返回的Next_Page_beforeTime字段。 - limit: 每页数量，默认为30。 ### 返回: - 歌曲评论  # [English] ### Purpose: - Fetch music comment. ### Parameters: - resource_id: Resource ID, can be song ID, album ID, etc. - beforeTime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last comment returned on the first page on the second page, or check the Next_Page_beforeTime field returned. - limit: Number per page, default is 30. ### Returns: - Music comment  # [示例/Example] resource_id &#x3D; \&quot;2135155051\&quot; beforeTime &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;30\&quot;
     * @param resourceId 资源ID/Resource ID (required)
     * @param beforeTime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;30&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0WithHttpInfo(String resourceId, String beforeTime, String limit) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0ValidateBeforeCall(resourceId, beforeTime, limit, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取歌曲评论/Fetch music comment (asynchronously)
     * # [中文] ### 用途: - 获取歌曲评论。 ### 参数: - resource_id: 资源ID，可以是歌曲ID，专辑ID等。 - beforeTime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条评论的时间戳，或者查看返回的Next_Page_beforeTime字段。 - limit: 每页数量，默认为30。 ### 返回: - 歌曲评论  # [English] ### Purpose: - Fetch music comment. ### Parameters: - resource_id: Resource ID, can be song ID, album ID, etc. - beforeTime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last comment returned on the first page on the second page, or check the Next_Page_beforeTime field returned. - limit: Number per page, default is 30. ### Returns: - Music comment  # [示例/Example] resource_id &#x3D; \&quot;2135155051\&quot; beforeTime &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;30\&quot;
     * @param resourceId 资源ID/Resource ID (required)
     * @param beforeTime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;30&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0Async(String resourceId, String beforeTime, String limit, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicCommentApiV1NetEaseCloudMusicAppFetchMusicCommentGet_0ValidateBeforeCall(resourceId, beforeTime, limit, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet
     * @param mlogId Mlog ID/Mlog ID (required)
     * @param resolution 分辨率/Resolution (optional, default to &quot;1080&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGetCall(String mlogId, String resolution, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_music_log_video_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (mlogId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mlogId", mlogId));
        }

        if (resolution != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("resolution", resolution));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGetValidateBeforeCall(String mlogId, String resolution, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mlogId' is set
        if (mlogId == null) {
            throw new ApiException("Missing the required parameter 'mlogId' when calling fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGetCall(mlogId, resolution, _callback);
        return localVarCall;

    }

    /**
     * Mlog（音乐视频）播放地址/Mlog (music video) playback address
     * # [中文] ### 用途: - 获取Mlog（音乐视频）播放地址。 ### 参数: - mlogId: Mlog ID，可以在APP中点击分享按钮获取链接，链接中包含mlogId。 - resolution: 分辨率，默认为1080，保持默认即可。 ### 返回: - Mlog播放地址（有时候会有水印，根据视频源而定。）  # [English] ### Purpose: - Fetch Mlog (music video) playback address. ### Parameters: - mlogId: Mlog ID, you can get the link by clicking the share button in the APP, the link contains mlogId. - resolution: Resolution, default is 1080, keep the default. ### Returns: - Mlog playback address (sometimes there will be a watermark, depending on the video source.)  # [示例/Example] &gt; 分享链接/Share link: https://fn.music.163.com/g/mlog/mlog-mobile/landing/mlog?id&#x3D;a1qQQOQNVueO2g7&amp;type&#x3D;2 mlogId &#x3D; \&quot;a1qQQOQNVueO2g7\&quot;
     * @param mlogId Mlog ID/Mlog ID (required)
     * @param resolution 分辨率/Resolution (optional, default to &quot;1080&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet(String mlogId, String resolution) throws ApiException {
        ApiResponse<String> localVarResp = fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGetWithHttpInfo(mlogId, resolution);
        return localVarResp.getData();
    }

    /**
     * Mlog（音乐视频）播放地址/Mlog (music video) playback address
     * # [中文] ### 用途: - 获取Mlog（音乐视频）播放地址。 ### 参数: - mlogId: Mlog ID，可以在APP中点击分享按钮获取链接，链接中包含mlogId。 - resolution: 分辨率，默认为1080，保持默认即可。 ### 返回: - Mlog播放地址（有时候会有水印，根据视频源而定。）  # [English] ### Purpose: - Fetch Mlog (music video) playback address. ### Parameters: - mlogId: Mlog ID, you can get the link by clicking the share button in the APP, the link contains mlogId. - resolution: Resolution, default is 1080, keep the default. ### Returns: - Mlog playback address (sometimes there will be a watermark, depending on the video source.)  # [示例/Example] &gt; 分享链接/Share link: https://fn.music.163.com/g/mlog/mlog-mobile/landing/mlog?id&#x3D;a1qQQOQNVueO2g7&amp;type&#x3D;2 mlogId &#x3D; \&quot;a1qQQOQNVueO2g7\&quot;
     * @param mlogId Mlog ID/Mlog ID (required)
     * @param resolution 分辨率/Resolution (optional, default to &quot;1080&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGetWithHttpInfo(String mlogId, String resolution) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGetValidateBeforeCall(mlogId, resolution, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Mlog（音乐视频）播放地址/Mlog (music video) playback address (asynchronously)
     * # [中文] ### 用途: - 获取Mlog（音乐视频）播放地址。 ### 参数: - mlogId: Mlog ID，可以在APP中点击分享按钮获取链接，链接中包含mlogId。 - resolution: 分辨率，默认为1080，保持默认即可。 ### 返回: - Mlog播放地址（有时候会有水印，根据视频源而定。）  # [English] ### Purpose: - Fetch Mlog (music video) playback address. ### Parameters: - mlogId: Mlog ID, you can get the link by clicking the share button in the APP, the link contains mlogId. - resolution: Resolution, default is 1080, keep the default. ### Returns: - Mlog playback address (sometimes there will be a watermark, depending on the video source.)  # [示例/Example] &gt; 分享链接/Share link: https://fn.music.163.com/g/mlog/mlog-mobile/landing/mlog?id&#x3D;a1qQQOQNVueO2g7&amp;type&#x3D;2 mlogId &#x3D; \&quot;a1qQQOQNVueO2g7\&quot;
     * @param mlogId Mlog ID/Mlog ID (required)
     * @param resolution 分辨率/Resolution (optional, default to &quot;1080&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGetAsync(String mlogId, String resolution, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGetValidateBeforeCall(mlogId, resolution, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0
     * @param mlogId Mlog ID/Mlog ID (required)
     * @param resolution 分辨率/Resolution (optional, default to &quot;1080&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0Call(String mlogId, String resolution, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_music_log_video_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (mlogId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("mlogId", mlogId));
        }

        if (resolution != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("resolution", resolution));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0ValidateBeforeCall(String mlogId, String resolution, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'mlogId' is set
        if (mlogId == null) {
            throw new ApiException("Missing the required parameter 'mlogId' when calling fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0Call(mlogId, resolution, _callback);
        return localVarCall;

    }

    /**
     * Mlog（音乐视频）播放地址/Mlog (music video) playback address
     * # [中文] ### 用途: - 获取Mlog（音乐视频）播放地址。 ### 参数: - mlogId: Mlog ID，可以在APP中点击分享按钮获取链接，链接中包含mlogId。 - resolution: 分辨率，默认为1080，保持默认即可。 ### 返回: - Mlog播放地址（有时候会有水印，根据视频源而定。）  # [English] ### Purpose: - Fetch Mlog (music video) playback address. ### Parameters: - mlogId: Mlog ID, you can get the link by clicking the share button in the APP, the link contains mlogId. - resolution: Resolution, default is 1080, keep the default. ### Returns: - Mlog playback address (sometimes there will be a watermark, depending on the video source.)  # [示例/Example] &gt; 分享链接/Share link: https://fn.music.163.com/g/mlog/mlog-mobile/landing/mlog?id&#x3D;a1qQQOQNVueO2g7&amp;type&#x3D;2 mlogId &#x3D; \&quot;a1qQQOQNVueO2g7\&quot;
     * @param mlogId Mlog ID/Mlog ID (required)
     * @param resolution 分辨率/Resolution (optional, default to &quot;1080&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0(String mlogId, String resolution) throws ApiException {
        ApiResponse<String> localVarResp = fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0WithHttpInfo(mlogId, resolution);
        return localVarResp.getData();
    }

    /**
     * Mlog（音乐视频）播放地址/Mlog (music video) playback address
     * # [中文] ### 用途: - 获取Mlog（音乐视频）播放地址。 ### 参数: - mlogId: Mlog ID，可以在APP中点击分享按钮获取链接，链接中包含mlogId。 - resolution: 分辨率，默认为1080，保持默认即可。 ### 返回: - Mlog播放地址（有时候会有水印，根据视频源而定。）  # [English] ### Purpose: - Fetch Mlog (music video) playback address. ### Parameters: - mlogId: Mlog ID, you can get the link by clicking the share button in the APP, the link contains mlogId. - resolution: Resolution, default is 1080, keep the default. ### Returns: - Mlog playback address (sometimes there will be a watermark, depending on the video source.)  # [示例/Example] &gt; 分享链接/Share link: https://fn.music.163.com/g/mlog/mlog-mobile/landing/mlog?id&#x3D;a1qQQOQNVueO2g7&amp;type&#x3D;2 mlogId &#x3D; \&quot;a1qQQOQNVueO2g7\&quot;
     * @param mlogId Mlog ID/Mlog ID (required)
     * @param resolution 分辨率/Resolution (optional, default to &quot;1080&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0WithHttpInfo(String mlogId, String resolution) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0ValidateBeforeCall(mlogId, resolution, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Mlog（音乐视频）播放地址/Mlog (music video) playback address (asynchronously)
     * # [中文] ### 用途: - 获取Mlog（音乐视频）播放地址。 ### 参数: - mlogId: Mlog ID，可以在APP中点击分享按钮获取链接，链接中包含mlogId。 - resolution: 分辨率，默认为1080，保持默认即可。 ### 返回: - Mlog播放地址（有时候会有水印，根据视频源而定。）  # [English] ### Purpose: - Fetch Mlog (music video) playback address. ### Parameters: - mlogId: Mlog ID, you can get the link by clicking the share button in the APP, the link contains mlogId. - resolution: Resolution, default is 1080, keep the default. ### Returns: - Mlog playback address (sometimes there will be a watermark, depending on the video source.)  # [示例/Example] &gt; 分享链接/Share link: https://fn.music.163.com/g/mlog/mlog-mobile/landing/mlog?id&#x3D;a1qQQOQNVueO2g7&amp;type&#x3D;2 mlogId &#x3D; \&quot;a1qQQOQNVueO2g7\&quot;
     * @param mlogId Mlog ID/Mlog ID (required)
     * @param resolution 分辨率/Resolution (optional, default to &quot;1080&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0Async(String mlogId, String resolution, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicLogVideoUrlApiV1NetEaseCloudMusicAppFetchMusicLogVideoUrlGet_0ValidateBeforeCall(mlogId, resolution, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGetCall(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_lyric";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGetValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGetCall(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲歌词/Fetch one music lyric
     * # [中文] ### 用途: - 获取单个音乐歌词。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐歌词  # [English] ### Purpose: - Fetch single music lyric. ### Parameters: - music_id: Music ID ### Returns: - Music lyric  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet(String musicId) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGetWithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲歌词/Fetch one music lyric
     * # [中文] ### 用途: - 获取单个音乐歌词。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐歌词  # [English] ### Purpose: - Fetch single music lyric. ### Parameters: - music_id: Music ID ### Returns: - Music lyric  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGetWithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGetValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲歌词/Fetch one music lyric (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐歌词。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐歌词  # [English] ### Purpose: - Fetch single music lyric. ### Parameters: - music_id: Music ID ### Returns: - Music lyric  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGetAsync(String musicId, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGetValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0Call(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_lyric";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0ValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0Call(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲歌词/Fetch one music lyric
     * # [中文] ### 用途: - 获取单个音乐歌词。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐歌词  # [English] ### Purpose: - Fetch single music lyric. ### Parameters: - music_id: Music ID ### Returns: - Music lyric  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0(String musicId) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0WithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲歌词/Fetch one music lyric
     * # [中文] ### 用途: - 获取单个音乐歌词。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐歌词  # [English] ### Purpose: - Fetch single music lyric. ### Parameters: - music_id: Music ID ### Returns: - Music lyric  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0WithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0ValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲歌词/Fetch one music lyric (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐歌词。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐歌词  # [English] ### Purpose: - Fetch single music lyric. ### Parameters: - music_id: Music ID ### Returns: - Music lyric  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0Async(String musicId, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicLyricApiV1NetEaseCloudMusicAppFetchOneMusicLyricGet_0ValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get
     * @param musicId 歌曲ID/Music ID (required)
     * @param br 音质码率/Bitrate (optional, default to &quot;192000&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1GetCall(String musicId, String br, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_url_v1";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        if (br != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("br", br));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1GetValidateBeforeCall(String musicId, String br, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1GetCall(musicId, br, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲播放地址V1（只能返回MP3格式，支持参数较少）/Fetch one music URL V1 (only MP3 format is supported, with fewer parameters)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口只能返回MP3格式的音频文件链接。 ### 参数: - music_id: 音乐ID - br: 音质码率，分四个等级，128000,192000,320000,999000 ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface can only return MP3 format audio file link. ### Parameters: - music_id: Music ID - br: Bitrate, divided into four levels, 128000,192000,320000,999000 ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; br &#x3D; \&quot;192000\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param br 音质码率/Bitrate (optional, default to &quot;192000&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get(String musicId, String br) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1GetWithHttpInfo(musicId, br);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲播放地址V1（只能返回MP3格式，支持参数较少）/Fetch one music URL V1 (only MP3 format is supported, with fewer parameters)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口只能返回MP3格式的音频文件链接。 ### 参数: - music_id: 音乐ID - br: 音质码率，分四个等级，128000,192000,320000,999000 ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface can only return MP3 format audio file link. ### Parameters: - music_id: Music ID - br: Bitrate, divided into four levels, 128000,192000,320000,999000 ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; br &#x3D; \&quot;192000\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param br 音质码率/Bitrate (optional, default to &quot;192000&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1GetWithHttpInfo(String musicId, String br) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1GetValidateBeforeCall(musicId, br, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲播放地址V1（只能返回MP3格式，支持参数较少）/Fetch one music URL V1 (only MP3 format is supported, with fewer parameters) (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口只能返回MP3格式的音频文件链接。 ### 参数: - music_id: 音乐ID - br: 音质码率，分四个等级，128000,192000,320000,999000 ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface can only return MP3 format audio file link. ### Parameters: - music_id: Music ID - br: Bitrate, divided into four levels, 128000,192000,320000,999000 ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; br &#x3D; \&quot;192000\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param br 音质码率/Bitrate (optional, default to &quot;192000&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1GetAsync(String musicId, String br, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1GetValidateBeforeCall(musicId, br, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0
     * @param musicId 歌曲ID/Music ID (required)
     * @param br 音质码率/Bitrate (optional, default to &quot;192000&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0Call(String musicId, String br, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_url_v1";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        if (br != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("br", br));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0ValidateBeforeCall(String musicId, String br, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0Call(musicId, br, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲播放地址V1（只能返回MP3格式，支持参数较少）/Fetch one music URL V1 (only MP3 format is supported, with fewer parameters)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口只能返回MP3格式的音频文件链接。 ### 参数: - music_id: 音乐ID - br: 音质码率，分四个等级，128000,192000,320000,999000 ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface can only return MP3 format audio file link. ### Parameters: - music_id: Music ID - br: Bitrate, divided into four levels, 128000,192000,320000,999000 ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; br &#x3D; \&quot;192000\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param br 音质码率/Bitrate (optional, default to &quot;192000&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0(String musicId, String br) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0WithHttpInfo(musicId, br);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲播放地址V1（只能返回MP3格式，支持参数较少）/Fetch one music URL V1 (only MP3 format is supported, with fewer parameters)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口只能返回MP3格式的音频文件链接。 ### 参数: - music_id: 音乐ID - br: 音质码率，分四个等级，128000,192000,320000,999000 ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface can only return MP3 format audio file link. ### Parameters: - music_id: Music ID - br: Bitrate, divided into four levels, 128000,192000,320000,999000 ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; br &#x3D; \&quot;192000\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param br 音质码率/Bitrate (optional, default to &quot;192000&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0WithHttpInfo(String musicId, String br) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0ValidateBeforeCall(musicId, br, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲播放地址V1（只能返回MP3格式，支持参数较少）/Fetch one music URL V1 (only MP3 format is supported, with fewer parameters) (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口只能返回MP3格式的音频文件链接。 ### 参数: - music_id: 音乐ID - br: 音质码率，分四个等级，128000,192000,320000,999000 ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface can only return MP3 format audio file link. ### Parameters: - music_id: Music ID - br: Bitrate, divided into four levels, 128000,192000,320000,999000 ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; br &#x3D; \&quot;192000\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param br 音质码率/Bitrate (optional, default to &quot;192000&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0Async(String musicId, String br, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicUrlV1ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV1Get_0ValidateBeforeCall(musicId, br, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get
     * @param musicId 歌曲ID/Music ID (required)
     * @param level 音质等级/Quality level (optional, default to &quot;exhigh&quot;)
     * @param encodeType 编码类型/Encoding type (optional, default to &quot;mp3&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2GetCall(String musicId, String level, String encodeType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_url_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        if (level != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("level", level));
        }

        if (encodeType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("encodeType", encodeType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2GetValidateBeforeCall(String musicId, String level, String encodeType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2GetCall(musicId, level, encodeType, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲播放地址V2（支持更多参数）/Fetch one music URL V2 (support more parameters)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口支持更多参数。 ### 参数: - music_id: 音乐ID - level: 音质等级，分五个等级，标准，较高，极高，无损，hires，后两个等级不一定有支持的音源。     - 标准：standard     - 较高：higher     - 极高：exhigh     - 无损：lossLess     - hires：hires - encodeType: 编码类型，分六种类型。     - aac：aac     - mp3：mp3（默认）     - flac：flac     - alac：alac     - ape：ape     - wav：wav ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface supports more parameters. ### Parameters: - music_id: Music ID - level: Quality level, divided into five levels, standard, higher, exhigh, lossLess, hires, the last two levels may not have supported audio sources.     - standard     - higher     - exhigh     - lossLess     - hires - encodeType: Encoding type, divided into six types.     - aac     - mp3 (default)     - flac     - alac     - ape     - wav ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; level &#x3D; \&quot;exhigh\&quot; encodeType &#x3D; \&quot;mp3\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param level 音质等级/Quality level (optional, default to &quot;exhigh&quot;)
     * @param encodeType 编码类型/Encoding type (optional, default to &quot;mp3&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get(String musicId, String level, String encodeType) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2GetWithHttpInfo(musicId, level, encodeType);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲播放地址V2（支持更多参数）/Fetch one music URL V2 (support more parameters)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口支持更多参数。 ### 参数: - music_id: 音乐ID - level: 音质等级，分五个等级，标准，较高，极高，无损，hires，后两个等级不一定有支持的音源。     - 标准：standard     - 较高：higher     - 极高：exhigh     - 无损：lossLess     - hires：hires - encodeType: 编码类型，分六种类型。     - aac：aac     - mp3：mp3（默认）     - flac：flac     - alac：alac     - ape：ape     - wav：wav ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface supports more parameters. ### Parameters: - music_id: Music ID - level: Quality level, divided into five levels, standard, higher, exhigh, lossLess, hires, the last two levels may not have supported audio sources.     - standard     - higher     - exhigh     - lossLess     - hires - encodeType: Encoding type, divided into six types.     - aac     - mp3 (default)     - flac     - alac     - ape     - wav ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; level &#x3D; \&quot;exhigh\&quot; encodeType &#x3D; \&quot;mp3\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param level 音质等级/Quality level (optional, default to &quot;exhigh&quot;)
     * @param encodeType 编码类型/Encoding type (optional, default to &quot;mp3&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2GetWithHttpInfo(String musicId, String level, String encodeType) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2GetValidateBeforeCall(musicId, level, encodeType, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲播放地址V2（支持更多参数）/Fetch one music URL V2 (support more parameters) (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口支持更多参数。 ### 参数: - music_id: 音乐ID - level: 音质等级，分五个等级，标准，较高，极高，无损，hires，后两个等级不一定有支持的音源。     - 标准：standard     - 较高：higher     - 极高：exhigh     - 无损：lossLess     - hires：hires - encodeType: 编码类型，分六种类型。     - aac：aac     - mp3：mp3（默认）     - flac：flac     - alac：alac     - ape：ape     - wav：wav ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface supports more parameters. ### Parameters: - music_id: Music ID - level: Quality level, divided into five levels, standard, higher, exhigh, lossLess, hires, the last two levels may not have supported audio sources.     - standard     - higher     - exhigh     - lossLess     - hires - encodeType: Encoding type, divided into six types.     - aac     - mp3 (default)     - flac     - alac     - ape     - wav ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; level &#x3D; \&quot;exhigh\&quot; encodeType &#x3D; \&quot;mp3\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param level 音质等级/Quality level (optional, default to &quot;exhigh&quot;)
     * @param encodeType 编码类型/Encoding type (optional, default to &quot;mp3&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2GetAsync(String musicId, String level, String encodeType, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2GetValidateBeforeCall(musicId, level, encodeType, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0
     * @param musicId 歌曲ID/Music ID (required)
     * @param level 音质等级/Quality level (optional, default to &quot;exhigh&quot;)
     * @param encodeType 编码类型/Encoding type (optional, default to &quot;mp3&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0Call(String musicId, String level, String encodeType, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_url_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        if (level != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("level", level));
        }

        if (encodeType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("encodeType", encodeType));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0ValidateBeforeCall(String musicId, String level, String encodeType, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0Call(musicId, level, encodeType, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲播放地址V2（支持更多参数）/Fetch one music URL V2 (support more parameters)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口支持更多参数。 ### 参数: - music_id: 音乐ID - level: 音质等级，分五个等级，标准，较高，极高，无损，hires，后两个等级不一定有支持的音源。     - 标准：standard     - 较高：higher     - 极高：exhigh     - 无损：lossLess     - hires：hires - encodeType: 编码类型，分六种类型。     - aac：aac     - mp3：mp3（默认）     - flac：flac     - alac：alac     - ape：ape     - wav：wav ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface supports more parameters. ### Parameters: - music_id: Music ID - level: Quality level, divided into five levels, standard, higher, exhigh, lossLess, hires, the last two levels may not have supported audio sources.     - standard     - higher     - exhigh     - lossLess     - hires - encodeType: Encoding type, divided into six types.     - aac     - mp3 (default)     - flac     - alac     - ape     - wav ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; level &#x3D; \&quot;exhigh\&quot; encodeType &#x3D; \&quot;mp3\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param level 音质等级/Quality level (optional, default to &quot;exhigh&quot;)
     * @param encodeType 编码类型/Encoding type (optional, default to &quot;mp3&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0(String musicId, String level, String encodeType) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0WithHttpInfo(musicId, level, encodeType);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲播放地址V2（支持更多参数）/Fetch one music URL V2 (support more parameters)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口支持更多参数。 ### 参数: - music_id: 音乐ID - level: 音质等级，分五个等级，标准，较高，极高，无损，hires，后两个等级不一定有支持的音源。     - 标准：standard     - 较高：higher     - 极高：exhigh     - 无损：lossLess     - hires：hires - encodeType: 编码类型，分六种类型。     - aac：aac     - mp3：mp3（默认）     - flac：flac     - alac：alac     - ape：ape     - wav：wav ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface supports more parameters. ### Parameters: - music_id: Music ID - level: Quality level, divided into five levels, standard, higher, exhigh, lossLess, hires, the last two levels may not have supported audio sources.     - standard     - higher     - exhigh     - lossLess     - hires - encodeType: Encoding type, divided into six types.     - aac     - mp3 (default)     - flac     - alac     - ape     - wav ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; level &#x3D; \&quot;exhigh\&quot; encodeType &#x3D; \&quot;mp3\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param level 音质等级/Quality level (optional, default to &quot;exhigh&quot;)
     * @param encodeType 编码类型/Encoding type (optional, default to &quot;mp3&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0WithHttpInfo(String musicId, String level, String encodeType) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0ValidateBeforeCall(musicId, level, encodeType, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲播放地址V2（支持更多参数）/Fetch one music URL V2 (support more parameters) (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐播放地址，此接口支持更多参数。 ### 参数: - music_id: 音乐ID - level: 音质等级，分五个等级，标准，较高，极高，无损，hires，后两个等级不一定有支持的音源。     - 标准：standard     - 较高：higher     - 极高：exhigh     - 无损：lossLess     - hires：hires - encodeType: 编码类型，分六种类型。     - aac：aac     - mp3：mp3（默认）     - flac：flac     - alac：alac     - ape：ape     - wav：wav ### 返回: - 音乐播放地址  # [English] ### Purpose: - Fetch single music URL, this interface supports more parameters. ### Parameters: - music_id: Music ID - level: Quality level, divided into five levels, standard, higher, exhigh, lossLess, hires, the last two levels may not have supported audio sources.     - standard     - higher     - exhigh     - lossLess     - hires - encodeType: Encoding type, divided into six types.     - aac     - mp3 (default)     - flac     - alac     - ape     - wav ### Returns: - Music URL  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot; level &#x3D; \&quot;exhigh\&quot; encodeType &#x3D; \&quot;mp3\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param level 音质等级/Quality level (optional, default to &quot;exhigh&quot;)
     * @param encodeType 编码类型/Encoding type (optional, default to &quot;mp3&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0Async(String musicId, String level, String encodeType, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicUrlV2ApiV1NetEaseCloudMusicAppFetchOneMusicUrlV2Get_0ValidateBeforeCall(musicId, level, encodeType, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1GetCall(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_v1";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1GetValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1GetCall(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲信息V1（信息更全）| Fetch one music information V1 (more information)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get(String musicId) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1GetWithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲信息V1（信息更全）| Fetch one music information V1 (more information)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1GetWithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1GetValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲信息V1（信息更全）| Fetch one music information V1 (more information) (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1GetAsync(String musicId, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1GetValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0Call(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_v1";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0ValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0Call(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲信息V1（信息更全）| Fetch one music information V1 (more information)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0(String musicId) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0WithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲信息V1（信息更全）| Fetch one music information V1 (more information)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0WithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0ValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲信息V1（信息更全）| Fetch one music information V1 (more information) (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0Async(String musicId, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicV1ApiV1NetEaseCloudMusicAppFetchOneMusicV1Get_0ValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2GetCall(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2GetValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2GetCall(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲信息V2（信息更少）| Fetch one music information V2 (less information)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get(String musicId) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2GetWithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲信息V2（信息更少）| Fetch one music information V2 (less information)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2GetWithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2GetValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲信息V2（信息更少）| Fetch one music information V2 (less information) (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2GetAsync(String musicId, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2GetValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0Call(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_one_music_v2";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0ValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0Call(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取单一歌曲信息V2（信息更少）| Fetch one music information V2 (less information)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0(String musicId) throws ApiException {
        ApiResponse<String> localVarResp = fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0WithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取单一歌曲信息V2（信息更少）| Fetch one music information V2 (less information)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0WithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0ValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单一歌曲信息V2（信息更少）| Fetch one music information V2 (less information) (asynchronously)
     * # [中文] ### 用途: - 获取单个音乐数据，此接口不会返回音频文件链接，仅返回音乐信息。 ### 参数: - music_id: 音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Fetch single music data, this interface will not return audio file link, only return music information. ### Parameters: - music_id: Music ID ### Returns: - Music data  # [示例/Example] music_id &#x3D; \&quot;2135155051\&quot;
     * @param musicId 歌曲ID/Music ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0Async(String musicId, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneMusicV2ApiV1NetEaseCloudMusicAppFetchOneMusicV2Get_0ValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet
     * @param uid 用户ID/User ID (required)
     * @param time 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;-1&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;10&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGetCall(String uid, String time, String limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_event";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (time != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("_time", time));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGetValidateBeforeCall(String uid, String time, String limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGetCall(uid, time, limit, _callback);
        return localVarCall;

    }

    /**
     * 获取用户动态/Fetch user event
     * # [中文] ### 用途: - 获取用户动态。 ### 参数: - uid: 用户ID。 - _time: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_time字段。 - limit: 每页数量，默认为10。 ### 返回: - 用户动态  # [English] ### Purpose: - Fetch user event. ### Parameters: - uid: User ID. - _time: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_time field returned. - limit: Number per page, default is 10. ### Returns: - User event  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; _time &#x3D; \&quot;-1\&quot; limit &#x3D; \&quot;10\&quot;
     * @param uid 用户ID/User ID (required)
     * @param time 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;-1&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;10&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet(String uid, String time, String limit) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGetWithHttpInfo(uid, time, limit);
        return localVarResp.getData();
    }

    /**
     * 获取用户动态/Fetch user event
     * # [中文] ### 用途: - 获取用户动态。 ### 参数: - uid: 用户ID。 - _time: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_time字段。 - limit: 每页数量，默认为10。 ### 返回: - 用户动态  # [English] ### Purpose: - Fetch user event. ### Parameters: - uid: User ID. - _time: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_time field returned. - limit: Number per page, default is 10. ### Returns: - User event  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; _time &#x3D; \&quot;-1\&quot; limit &#x3D; \&quot;10\&quot;
     * @param uid 用户ID/User ID (required)
     * @param time 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;-1&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;10&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGetWithHttpInfo(String uid, String time, String limit) throws ApiException {
        okhttp3.Call localVarCall = fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGetValidateBeforeCall(uid, time, limit, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户动态/Fetch user event (asynchronously)
     * # [中文] ### 用途: - 获取用户动态。 ### 参数: - uid: 用户ID。 - _time: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_time字段。 - limit: 每页数量，默认为10。 ### 返回: - 用户动态  # [English] ### Purpose: - Fetch user event. ### Parameters: - uid: User ID. - _time: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_time field returned. - limit: Number per page, default is 10. ### Returns: - User event  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; _time &#x3D; \&quot;-1\&quot; limit &#x3D; \&quot;10\&quot;
     * @param uid 用户ID/User ID (required)
     * @param time 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;-1&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;10&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGetAsync(String uid, String time, String limit, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGetValidateBeforeCall(uid, time, limit, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0
     * @param uid 用户ID/User ID (required)
     * @param time 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;-1&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;10&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0Call(String uid, String time, String limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_event";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (time != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("_time", time));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0ValidateBeforeCall(String uid, String time, String limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0Call(uid, time, limit, _callback);
        return localVarCall;

    }

    /**
     * 获取用户动态/Fetch user event
     * # [中文] ### 用途: - 获取用户动态。 ### 参数: - uid: 用户ID。 - _time: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_time字段。 - limit: 每页数量，默认为10。 ### 返回: - 用户动态  # [English] ### Purpose: - Fetch user event. ### Parameters: - uid: User ID. - _time: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_time field returned. - limit: Number per page, default is 10. ### Returns: - User event  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; _time &#x3D; \&quot;-1\&quot; limit &#x3D; \&quot;10\&quot;
     * @param uid 用户ID/User ID (required)
     * @param time 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;-1&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;10&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0(String uid, String time, String limit) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0WithHttpInfo(uid, time, limit);
        return localVarResp.getData();
    }

    /**
     * 获取用户动态/Fetch user event
     * # [中文] ### 用途: - 获取用户动态。 ### 参数: - uid: 用户ID。 - _time: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_time字段。 - limit: 每页数量，默认为10。 ### 返回: - 用户动态  # [English] ### Purpose: - Fetch user event. ### Parameters: - uid: User ID. - _time: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_time field returned. - limit: Number per page, default is 10. ### Returns: - User event  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; _time &#x3D; \&quot;-1\&quot; limit &#x3D; \&quot;10\&quot;
     * @param uid 用户ID/User ID (required)
     * @param time 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;-1&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;10&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0WithHttpInfo(String uid, String time, String limit) throws ApiException {
        okhttp3.Call localVarCall = fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0ValidateBeforeCall(uid, time, limit, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户动态/Fetch user event (asynchronously)
     * # [中文] ### 用途: - 获取用户动态。 ### 参数: - uid: 用户ID。 - _time: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_time字段。 - limit: 每页数量，默认为10。 ### 返回: - 用户动态  # [English] ### Purpose: - Fetch user event. ### Parameters: - uid: User ID. - _time: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_time field returned. - limit: Number per page, default is 10. ### Returns: - User event  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; _time &#x3D; \&quot;-1\&quot; limit &#x3D; \&quot;10\&quot;
     * @param uid 用户ID/User ID (required)
     * @param time 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;-1&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;10&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0Async(String uid, String time, String limit, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserEventApiV1NetEaseCloudMusicAppFetchUserEventGet_0ValidateBeforeCall(uid, time, limit, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet
     * @param uid 用户ID/User ID (required)
     * @param lasttime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;0&quot;)
     * @param pagesize 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGetCall(String uid, String lasttime, String pagesize, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_followers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (lasttime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lasttime", lasttime));
        }

        if (pagesize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagesize", pagesize));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGetValidateBeforeCall(String uid, String lasttime, String pagesize, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGetCall(uid, lasttime, pagesize, _callback);
        return localVarCall;

    }

    /**
     * 获取用户粉丝列表/Fetch user followers
     * # [中文] ### 用途: - 获取用户粉丝列表。 ### 参数: - uid: 用户ID。 - lasttime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_lasttime字段。 - pagesize: 每页数量，保持默认即可。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Fetch user followers. ### Parameters: - uid: User ID. - lasttime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_lasttime field returned. - pagesize: Number per page, keep the default. ### Returns: - User followers list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; lasttime &#x3D; \&quot;0\&quot; pagesize &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param lasttime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;0&quot;)
     * @param pagesize 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet(String uid, String lasttime, String pagesize) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGetWithHttpInfo(uid, lasttime, pagesize);
        return localVarResp.getData();
    }

    /**
     * 获取用户粉丝列表/Fetch user followers
     * # [中文] ### 用途: - 获取用户粉丝列表。 ### 参数: - uid: 用户ID。 - lasttime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_lasttime字段。 - pagesize: 每页数量，保持默认即可。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Fetch user followers. ### Parameters: - uid: User ID. - lasttime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_lasttime field returned. - pagesize: Number per page, keep the default. ### Returns: - User followers list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; lasttime &#x3D; \&quot;0\&quot; pagesize &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param lasttime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;0&quot;)
     * @param pagesize 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGetWithHttpInfo(String uid, String lasttime, String pagesize) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGetValidateBeforeCall(uid, lasttime, pagesize, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户粉丝列表/Fetch user followers (asynchronously)
     * # [中文] ### 用途: - 获取用户粉丝列表。 ### 参数: - uid: 用户ID。 - lasttime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_lasttime字段。 - pagesize: 每页数量，保持默认即可。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Fetch user followers. ### Parameters: - uid: User ID. - lasttime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_lasttime field returned. - pagesize: Number per page, keep the default. ### Returns: - User followers list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; lasttime &#x3D; \&quot;0\&quot; pagesize &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param lasttime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;0&quot;)
     * @param pagesize 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGetAsync(String uid, String lasttime, String pagesize, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGetValidateBeforeCall(uid, lasttime, pagesize, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0
     * @param uid 用户ID/User ID (required)
     * @param lasttime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;0&quot;)
     * @param pagesize 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0Call(String uid, String lasttime, String pagesize, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_followers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (lasttime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lasttime", lasttime));
        }

        if (pagesize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pagesize", pagesize));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0ValidateBeforeCall(String uid, String lasttime, String pagesize, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0Call(uid, lasttime, pagesize, _callback);
        return localVarCall;

    }

    /**
     * 获取用户粉丝列表/Fetch user followers
     * # [中文] ### 用途: - 获取用户粉丝列表。 ### 参数: - uid: 用户ID。 - lasttime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_lasttime字段。 - pagesize: 每页数量，保持默认即可。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Fetch user followers. ### Parameters: - uid: User ID. - lasttime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_lasttime field returned. - pagesize: Number per page, keep the default. ### Returns: - User followers list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; lasttime &#x3D; \&quot;0\&quot; pagesize &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param lasttime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;0&quot;)
     * @param pagesize 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0(String uid, String lasttime, String pagesize) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0WithHttpInfo(uid, lasttime, pagesize);
        return localVarResp.getData();
    }

    /**
     * 获取用户粉丝列表/Fetch user followers
     * # [中文] ### 用途: - 获取用户粉丝列表。 ### 参数: - uid: 用户ID。 - lasttime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_lasttime字段。 - pagesize: 每页数量，保持默认即可。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Fetch user followers. ### Parameters: - uid: User ID. - lasttime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_lasttime field returned. - pagesize: Number per page, keep the default. ### Returns: - User followers list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; lasttime &#x3D; \&quot;0\&quot; pagesize &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param lasttime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;0&quot;)
     * @param pagesize 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0WithHttpInfo(String uid, String lasttime, String pagesize) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0ValidateBeforeCall(uid, lasttime, pagesize, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户粉丝列表/Fetch user followers (asynchronously)
     * # [中文] ### 用途: - 获取用户粉丝列表。 ### 参数: - uid: 用户ID。 - lasttime: 时间戳，用于翻页，第一页不需要传递，第二页传递第一页返回的最后一条动态的时间戳，或者查看返回的Next_Page_lasttime字段。 - pagesize: 每页数量，保持默认即可。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Fetch user followers. ### Parameters: - uid: User ID. - lasttime: Time stamp, used for paging, no need to pass on the first page, pass the time stamp of the last event returned on the first page on the second page, or check the Next_Page_lasttime field returned. - pagesize: Number per page, keep the default. ### Returns: - User followers list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; lasttime &#x3D; \&quot;0\&quot; pagesize &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param lasttime 时间戳，用于翻页，第一页不需要传递/Time stamp, used for paging, no need to pass on the first page (optional, default to &quot;0&quot;)
     * @param pagesize 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0Async(String uid, String lasttime, String pagesize, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowersApiV1NetEaseCloudMusicAppFetchUserFollowersGet_0ValidateBeforeCall(uid, lasttime, pagesize, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGetCall(String uid, String offset, String limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_follows";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGetValidateBeforeCall(String uid, String offset, String limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGetCall(uid, offset, limit, _callback);
        return localVarCall;

    }

    /**
     * 获取用户关注列表/Fetch user follows
     * # [中文] ### 用途: - 获取用户关注列表。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Fetch user follows. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User follows list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet(String uid, String offset, String limit) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGetWithHttpInfo(uid, offset, limit);
        return localVarResp.getData();
    }

    /**
     * 获取用户关注列表/Fetch user follows
     * # [中文] ### 用途: - 获取用户关注列表。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Fetch user follows. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User follows list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGetWithHttpInfo(String uid, String offset, String limit) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGetValidateBeforeCall(uid, offset, limit, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户关注列表/Fetch user follows (asynchronously)
     * # [中文] ### 用途: - 获取用户关注列表。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Fetch user follows. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User follows list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGetAsync(String uid, String offset, String limit, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGetValidateBeforeCall(uid, offset, limit, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0Call(String uid, String offset, String limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_follows";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0ValidateBeforeCall(String uid, String offset, String limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0Call(uid, offset, limit, _callback);
        return localVarCall;

    }

    /**
     * 获取用户关注列表/Fetch user follows
     * # [中文] ### 用途: - 获取用户关注列表。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Fetch user follows. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User follows list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0(String uid, String offset, String limit) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0WithHttpInfo(uid, offset, limit);
        return localVarResp.getData();
    }

    /**
     * 获取用户关注列表/Fetch user follows
     * # [中文] ### 用途: - 获取用户关注列表。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Fetch user follows. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User follows list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0WithHttpInfo(String uid, String offset, String limit) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0ValidateBeforeCall(uid, offset, limit, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户关注列表/Fetch user follows (asynchronously)
     * # [中文] ### 用途: - 获取用户关注列表。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Fetch user follows. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User follows list  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0Async(String uid, String offset, String limit, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowsApiV1NetEaseCloudMusicAppFetchUserFollowsGet_0ValidateBeforeCall(uid, offset, limit, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet
     * @param uid 用户ID/User ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGetCall(String uid, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGetValidateBeforeCall(String uid, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGetCall(uid, _callback);
        return localVarCall;

    }

    /**
     * 获取用户信息/Get user information
     * # [中文] ### 用途: - 获取用户信息。 ### 参数: - uid: 用户ID。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information. ### Parameters: - uid: User ID. ### Returns: - User information  # [示例/Example] uid &#x3D; \&quot;254132915\&quot;
     * @param uid 用户ID/User ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet(String uid) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGetWithHttpInfo(uid);
        return localVarResp.getData();
    }

    /**
     * 获取用户信息/Get user information
     * # [中文] ### 用途: - 获取用户信息。 ### 参数: - uid: 用户ID。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information. ### Parameters: - uid: User ID. ### Returns: - User information  # [示例/Example] uid &#x3D; \&quot;254132915\&quot;
     * @param uid 用户ID/User ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGetWithHttpInfo(String uid) throws ApiException {
        okhttp3.Call localVarCall = fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGetValidateBeforeCall(uid, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户信息/Get user information (asynchronously)
     * # [中文] ### 用途: - 获取用户信息。 ### 参数: - uid: 用户ID。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information. ### Parameters: - uid: User ID. ### Returns: - User information  # [示例/Example] uid &#x3D; \&quot;254132915\&quot;
     * @param uid 用户ID/User ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGetAsync(String uid, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGetValidateBeforeCall(uid, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0
     * @param uid 用户ID/User ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0Call(String uid, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_info";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0ValidateBeforeCall(String uid, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0Call(uid, _callback);
        return localVarCall;

    }

    /**
     * 获取用户信息/Get user information
     * # [中文] ### 用途: - 获取用户信息。 ### 参数: - uid: 用户ID。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information. ### Parameters: - uid: User ID. ### Returns: - User information  # [示例/Example] uid &#x3D; \&quot;254132915\&quot;
     * @param uid 用户ID/User ID (required)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0(String uid) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0WithHttpInfo(uid);
        return localVarResp.getData();
    }

    /**
     * 获取用户信息/Get user information
     * # [中文] ### 用途: - 获取用户信息。 ### 参数: - uid: 用户ID。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information. ### Parameters: - uid: User ID. ### Returns: - User information  # [示例/Example] uid &#x3D; \&quot;254132915\&quot;
     * @param uid 用户ID/User ID (required)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0WithHttpInfo(String uid) throws ApiException {
        okhttp3.Call localVarCall = fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0ValidateBeforeCall(uid, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户信息/Get user information (asynchronously)
     * # [中文] ### 用途: - 获取用户信息。 ### 参数: - uid: 用户ID。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information. ### Parameters: - uid: User ID. ### Returns: - User information  # [示例/Example] uid &#x3D; \&quot;254132915\&quot;
     * @param uid 用户ID/User ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0Async(String uid, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserInfoApiV1NetEaseCloudMusicAppFetchUserInfoGet_0ValidateBeforeCall(uid, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGetCall(String uid, String offset, String limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_playlist";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGetValidateBeforeCall(String uid, String offset, String limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGetCall(uid, offset, limit, _callback);
        return localVarCall;

    }

    /**
     * 获取用户歌单/Get user playlist
     * # [中文] ### 用途: - 获取用户歌单。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户歌单  # [English] ### Purpose: - Get user playlist. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User playlist  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet(String uid, String offset, String limit) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGetWithHttpInfo(uid, offset, limit);
        return localVarResp.getData();
    }

    /**
     * 获取用户歌单/Get user playlist
     * # [中文] ### 用途: - 获取用户歌单。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户歌单  # [English] ### Purpose: - Get user playlist. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User playlist  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGetWithHttpInfo(String uid, String offset, String limit) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGetValidateBeforeCall(uid, offset, limit, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户歌单/Get user playlist (asynchronously)
     * # [中文] ### 用途: - 获取用户歌单。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户歌单  # [English] ### Purpose: - Get user playlist. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User playlist  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGetAsync(String uid, String offset, String limit, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGetValidateBeforeCall(uid, offset, limit, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0Call(String uid, String offset, String limit, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/fetch_user_playlist";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0ValidateBeforeCall(String uid, String offset, String limit, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0Call(uid, offset, limit, _callback);
        return localVarCall;

    }

    /**
     * 获取用户歌单/Get user playlist
     * # [中文] ### 用途: - 获取用户歌单。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户歌单  # [English] ### Purpose: - Get user playlist. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User playlist  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0(String uid, String offset, String limit) throws ApiException {
        ApiResponse<String> localVarResp = fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0WithHttpInfo(uid, offset, limit);
        return localVarResp.getData();
    }

    /**
     * 获取用户歌单/Get user playlist
     * # [中文] ### 用途: - 获取用户歌单。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户歌单  # [English] ### Purpose: - Get user playlist. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User playlist  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0WithHttpInfo(String uid, String offset, String limit) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0ValidateBeforeCall(uid, offset, limit, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户歌单/Get user playlist (asynchronously)
     * # [中文] ### 用途: - 获取用户歌单。 ### 参数: - uid: 用户ID。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 ### 返回: - 用户歌单  # [English] ### Purpose: - Get user playlist. ### Parameters: - uid: User ID. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. ### Returns: - User playlist  # [示例/Example] uid &#x3D; \&quot;254132915\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
     * @param uid 用户ID/User ID (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0Async(String uid, String offset, String limit, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPlaylistApiV1NetEaseCloudMusicAppFetchUserPlaylistGet_0ValidateBeforeCall(uid, offset, limit, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchV1ApiV1NetEaseCloudMusicAppSearchV1Get
     * @param keywords 关键词/Keywords (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param type 搜索类型/Search type (optional, default to &quot;1&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchV1ApiV1NetEaseCloudMusicAppSearchV1GetCall(String keywords, String offset, String limit, String type, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/search_v1";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keywords != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keywords", keywords));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (type != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("_type", type));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchV1ApiV1NetEaseCloudMusicAppSearchV1GetValidateBeforeCall(String keywords, String offset, String limit, String type, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keywords' is set
        if (keywords == null) {
            throw new ApiException("Missing the required parameter 'keywords' when calling searchV1ApiV1NetEaseCloudMusicAppSearchV1Get(Async)");
        }
        

        okhttp3.Call localVarCall = searchV1ApiV1NetEaseCloudMusicAppSearchV1GetCall(keywords, offset, limit, type, _callback);
        return localVarCall;

    }

    /**
     * 搜索接口V1/Search interface V1
     * # [中文] ### 用途: - 搜索接口V1。 ### 参数: - keywords: 关键词。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 - _type: 搜索类型     **搜索类型 (&#x60;type&#x60;)**：     * 单曲搜索：&#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * 歌手搜索：&#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * 专辑搜索：&#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * 歌单搜索：&#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV搜索：&#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * 主播电台搜索：&#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * 用户搜索：&#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### 返回: - 搜索结果  # [English] ### Purpose: - Search interface V1. ### Parameters: - keywords: Keywords. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. - _type: Search type     **Search type (&#x60;type&#x60;)**:     * Single search: &#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * Singer search: &#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * Album search: &#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * Playlist search: &#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV search: &#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * Anchor radio search: &#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * User search: &#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### Returns: - Search results  # [示例/Example] keywords &#x3D; \&quot;周杰伦\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; _type &#x3D; \&quot;1\&quot;
     * @param keywords 关键词/Keywords (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param type 搜索类型/Search type (optional, default to &quot;1&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String searchV1ApiV1NetEaseCloudMusicAppSearchV1Get(String keywords, String offset, String limit, String type) throws ApiException {
        ApiResponse<String> localVarResp = searchV1ApiV1NetEaseCloudMusicAppSearchV1GetWithHttpInfo(keywords, offset, limit, type);
        return localVarResp.getData();
    }

    /**
     * 搜索接口V1/Search interface V1
     * # [中文] ### 用途: - 搜索接口V1。 ### 参数: - keywords: 关键词。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 - _type: 搜索类型     **搜索类型 (&#x60;type&#x60;)**：     * 单曲搜索：&#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * 歌手搜索：&#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * 专辑搜索：&#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * 歌单搜索：&#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV搜索：&#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * 主播电台搜索：&#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * 用户搜索：&#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### 返回: - 搜索结果  # [English] ### Purpose: - Search interface V1. ### Parameters: - keywords: Keywords. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. - _type: Search type     **Search type (&#x60;type&#x60;)**:     * Single search: &#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * Singer search: &#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * Album search: &#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * Playlist search: &#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV search: &#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * Anchor radio search: &#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * User search: &#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### Returns: - Search results  # [示例/Example] keywords &#x3D; \&quot;周杰伦\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; _type &#x3D; \&quot;1\&quot;
     * @param keywords 关键词/Keywords (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param type 搜索类型/Search type (optional, default to &quot;1&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> searchV1ApiV1NetEaseCloudMusicAppSearchV1GetWithHttpInfo(String keywords, String offset, String limit, String type) throws ApiException {
        okhttp3.Call localVarCall = searchV1ApiV1NetEaseCloudMusicAppSearchV1GetValidateBeforeCall(keywords, offset, limit, type, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索接口V1/Search interface V1 (asynchronously)
     * # [中文] ### 用途: - 搜索接口V1。 ### 参数: - keywords: 关键词。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 - _type: 搜索类型     **搜索类型 (&#x60;type&#x60;)**：     * 单曲搜索：&#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * 歌手搜索：&#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * 专辑搜索：&#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * 歌单搜索：&#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV搜索：&#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * 主播电台搜索：&#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * 用户搜索：&#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### 返回: - 搜索结果  # [English] ### Purpose: - Search interface V1. ### Parameters: - keywords: Keywords. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. - _type: Search type     **Search type (&#x60;type&#x60;)**:     * Single search: &#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * Singer search: &#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * Album search: &#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * Playlist search: &#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV search: &#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * Anchor radio search: &#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * User search: &#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### Returns: - Search results  # [示例/Example] keywords &#x3D; \&quot;周杰伦\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; _type &#x3D; \&quot;1\&quot;
     * @param keywords 关键词/Keywords (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param type 搜索类型/Search type (optional, default to &quot;1&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchV1ApiV1NetEaseCloudMusicAppSearchV1GetAsync(String keywords, String offset, String limit, String type, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchV1ApiV1NetEaseCloudMusicAppSearchV1GetValidateBeforeCall(keywords, offset, limit, type, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0
     * @param keywords 关键词/Keywords (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param type 搜索类型/Search type (optional, default to &quot;1&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0Call(String keywords, String offset, String limit, String type, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/net_ease_cloud_music/app/search_v1";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keywords != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keywords", keywords));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (type != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("_type", type));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0ValidateBeforeCall(String keywords, String offset, String limit, String type, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keywords' is set
        if (keywords == null) {
            throw new ApiException("Missing the required parameter 'keywords' when calling searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0(Async)");
        }
        

        okhttp3.Call localVarCall = searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0Call(keywords, offset, limit, type, _callback);
        return localVarCall;

    }

    /**
     * 搜索接口V1/Search interface V1
     * # [中文] ### 用途: - 搜索接口V1。 ### 参数: - keywords: 关键词。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 - _type: 搜索类型     **搜索类型 (&#x60;type&#x60;)**：     * 单曲搜索：&#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * 歌手搜索：&#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * 专辑搜索：&#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * 歌单搜索：&#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV搜索：&#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * 主播电台搜索：&#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * 用户搜索：&#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### 返回: - 搜索结果  # [English] ### Purpose: - Search interface V1. ### Parameters: - keywords: Keywords. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. - _type: Search type     **Search type (&#x60;type&#x60;)**:     * Single search: &#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * Singer search: &#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * Album search: &#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * Playlist search: &#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV search: &#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * Anchor radio search: &#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * User search: &#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### Returns: - Search results  # [示例/Example] keywords &#x3D; \&quot;周杰伦\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; _type &#x3D; \&quot;1\&quot;
     * @param keywords 关键词/Keywords (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param type 搜索类型/Search type (optional, default to &quot;1&quot;)
     * @return String
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public String searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0(String keywords, String offset, String limit, String type) throws ApiException {
        ApiResponse<String> localVarResp = searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0WithHttpInfo(keywords, offset, limit, type);
        return localVarResp.getData();
    }

    /**
     * 搜索接口V1/Search interface V1
     * # [中文] ### 用途: - 搜索接口V1。 ### 参数: - keywords: 关键词。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 - _type: 搜索类型     **搜索类型 (&#x60;type&#x60;)**：     * 单曲搜索：&#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * 歌手搜索：&#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * 专辑搜索：&#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * 歌单搜索：&#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV搜索：&#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * 主播电台搜索：&#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * 用户搜索：&#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### 返回: - 搜索结果  # [English] ### Purpose: - Search interface V1. ### Parameters: - keywords: Keywords. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. - _type: Search type     **Search type (&#x60;type&#x60;)**:     * Single search: &#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * Singer search: &#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * Album search: &#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * Playlist search: &#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV search: &#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * Anchor radio search: &#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * User search: &#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### Returns: - Search results  # [示例/Example] keywords &#x3D; \&quot;周杰伦\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; _type &#x3D; \&quot;1\&quot;
     * @param keywords 关键词/Keywords (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param type 搜索类型/Search type (optional, default to &quot;1&quot;)
     * @return ApiResponse&lt;String&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<String> searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0WithHttpInfo(String keywords, String offset, String limit, String type) throws ApiException {
        okhttp3.Call localVarCall = searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0ValidateBeforeCall(keywords, offset, limit, type, null);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 搜索接口V1/Search interface V1 (asynchronously)
     * # [中文] ### 用途: - 搜索接口V1。 ### 参数: - keywords: 关键词。 - offset: 偏移量，第一次搜索传递0，第二次传递20，第三次传递40，以此类推。 - limit: 每页数量，保持默认即可。 - _type: 搜索类型     **搜索类型 (&#x60;type&#x60;)**：     * 单曲搜索：&#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * 歌手搜索：&#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * 专辑搜索：&#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * 歌单搜索：&#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV搜索：&#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * 主播电台搜索：&#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * 用户搜索：&#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### 返回: - 搜索结果  # [English] ### Purpose: - Search interface V1. ### Parameters: - keywords: Keywords. - offset: Offset, pass 0 for the first search, 20 for the second search, 40 for the third search, and so on. - limit: Number per page, keep the default. - _type: Search type     **Search type (&#x60;type&#x60;)**:     * Single search: &#x60;\&quot;type\&quot;:\&quot;1\&quot;&#x60;     * Singer search: &#x60;\&quot;type\&quot;:\&quot;100\&quot;&#x60;     * Album search: &#x60;\&quot;type\&quot;:\&quot;10\&quot;&#x60;     * Playlist search: &#x60;\&quot;type\&quot;:\&quot;1000\&quot;&#x60;     * MV search: &#x60;\&quot;type\&quot;:\&quot;1004\&quot;&#x60;     * Anchor radio search: &#x60;\&quot;type\&quot;:\&quot;1009\&quot;&#x60;     * User search: &#x60;\&quot;type\&quot;:\&quot;1002\&quot;&#x60; ### Returns: - Search results  # [示例/Example] keywords &#x3D; \&quot;周杰伦\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; _type &#x3D; \&quot;1\&quot;
     * @param keywords 关键词/Keywords (required)
     * @param offset 偏移量，保持默认即可/Offset, keep the default (optional, default to &quot;0&quot;)
     * @param limit 每页数量，保持默认即可/Number per page, keep the default (optional, default to &quot;20&quot;)
     * @param type 搜索类型/Search type (optional, default to &quot;1&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0Async(String keywords, String offset, String limit, String type, final ApiCallback<String> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchV1ApiV1NetEaseCloudMusicAppSearchV1Get_0ValidateBeforeCall(keywords, offset, limit, type, _callback);
        Type localVarReturnType = new TypeToken<String>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
