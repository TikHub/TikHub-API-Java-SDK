/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TikTokAppV2ApiApi {
    private ApiClient localVarApiClient;

    public TikTokAppV2ApiApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TikTokAppV2ApiApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet
     * @param roomId 直播间id/Live room id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetCall(String roomId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/check_live_room_online";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetValidateBeforeCall(String roomId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet(Async)");
        }
        

        okhttp3.Call localVarCall = checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetCall(roomId, _callback);
        return localVarCall;

    }

    /**
     * 检测直播间是否在线/Check if live room is online
     * # [中文] ### 用途: - 检测直播间是否在线 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet(String roomId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetWithHttpInfo(roomId);
        return localVarResp.getData();
    }

    /**
     * 检测直播间是否在线/Check if live room is online
     * # [中文] ### 用途: - 检测直播间是否在线 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetWithHttpInfo(String roomId) throws ApiException {
        okhttp3.Call localVarCall = checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetValidateBeforeCall(roomId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 检测直播间是否在线/Check if live room is online (asynchronously)
     * # [中文] ### 用途: - 检测直播间是否在线 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetAsync(String roomId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetValidateBeforeCall(roomId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0
     * @param roomId 直播间id/Live room id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0Call(String roomId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/check_live_room_online";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0ValidateBeforeCall(String roomId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0Call(roomId, _callback);
        return localVarCall;

    }

    /**
     * 检测直播间是否在线/Check if live room is online
     * # [中文] ### 用途: - 检测直播间是否在线 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0(String roomId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0WithHttpInfo(roomId);
        return localVarResp.getData();
    }

    /**
     * 检测直播间是否在线/Check if live room is online
     * # [中文] ### 用途: - 检测直播间是否在线 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0WithHttpInfo(String roomId) throws ApiException {
        okhttp3.Call localVarCall = checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0ValidateBeforeCall(roomId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 检测直播间是否在线/Check if live room is online (asynchronously)
     * # [中文] ### 用途: - 检测直播间是否在线 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0Async(String roomId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0ValidateBeforeCall(roomId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetCall(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_general_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetCall(keyword, offset, count, sortType, publishTime, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetWithHttpInfo(keyword, offset, count, sortType, publishTime);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime) throws ApiException {
        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetAsync(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0Call(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_general_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0Call(keyword, offset, count, sortType, publishTime, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0WithHttpInfo(keyword, offset, count, sortType, publishTime);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime) throws ApiException {
        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0Async(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet
     * @param chId 话题id/Hashtag id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetCall(String chId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_hashtag_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (chId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ch_id", chId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetValidateBeforeCall(String chId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'chId' is set
        if (chId == null) {
            throw new ApiException("Missing the required parameter 'chId' when calling fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetCall(chId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     * @param chId 话题id/Hashtag id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet(String chId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetWithHttpInfo(chId);
        return localVarResp.getData();
    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     * @param chId 话题id/Hashtag id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetWithHttpInfo(String chId) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetValidateBeforeCall(chId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag (asynchronously)
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     * @param chId 话题id/Hashtag id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetAsync(String chId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetValidateBeforeCall(chId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0
     * @param chId 话题id/Hashtag id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0Call(String chId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_hashtag_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (chId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ch_id", chId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0ValidateBeforeCall(String chId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'chId' is set
        if (chId == null) {
            throw new ApiException("Missing the required parameter 'chId' when calling fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0Call(chId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     * @param chId 话题id/Hashtag id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0(String chId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0WithHttpInfo(chId);
        return localVarResp.getData();
    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     * @param chId 话题id/Hashtag id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0WithHttpInfo(String chId) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0ValidateBeforeCall(chId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定话题的详情数据/Get details of specified hashtag (asynchronously)
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     * @param chId 话题id/Hashtag id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0Async(String chId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0ValidateBeforeCall(chId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_hashtag_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetCall(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的话题搜索结果/Get hashtag search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetWithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的话题搜索结果/Get hashtag search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的话题搜索结果/Get hashtag search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetAsync(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0Call(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_hashtag_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0Call(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的话题搜索结果/Get hashtag search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0WithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的话题搜索结果/Get hashtag search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0ValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的话题搜索结果/Get hashtag search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0Async(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0ValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetCall(String chId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_hashtag_video_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (chId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ch_id", chId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetValidateBeforeCall(String chId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'chId' is set
        if (chId == null) {
            throw new ApiException("Missing the required parameter 'chId' when calling fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetCall(chId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet(String chId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetWithHttpInfo(chId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetWithHttpInfo(String chId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetValidateBeforeCall(chId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag (asynchronously)
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetAsync(String chId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetValidateBeforeCall(chId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0Call(String chId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_hashtag_video_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (chId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ch_id", chId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0ValidateBeforeCall(String chId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'chId' is set
        if (chId == null) {
            throw new ApiException("Missing the required parameter 'chId' when calling fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0Call(chId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0(String chId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0WithHttpInfo(chId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0WithHttpInfo(String chId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0ValidateBeforeCall(chId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag (asynchronously)
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     * @param chId 话题id/Hashtag id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0Async(String chId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0ValidateBeforeCall(chId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_home_feed";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetCall(_callback);
        return localVarCall;

    }

    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data (asynchronously)
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetAsync(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0Call(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_home_feed";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0Call(_callback);
        return localVarCall;

    }

    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0() throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0WithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0ValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data (asynchronously)
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0Async(final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0ValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet
     * @param roomId 直播间id/Live room id (required)
     * @param anchorId 主播id/Anchor id (optional, default to &quot;7222941468722758702&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetCall(String roomId, String anchorId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_live_ranking_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        if (anchorId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("anchor_id", anchorId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetValidateBeforeCall(String roomId, String anchorId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetCall(roomId, anchorId, _callback);
        return localVarCall;

    }

    /**
     * 获取直播间排行榜数据/Get live room ranking list
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @param anchorId 主播id/Anchor id (optional, default to &quot;7222941468722758702&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet(String roomId, String anchorId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetWithHttpInfo(roomId, anchorId);
        return localVarResp.getData();
    }

    /**
     * 获取直播间排行榜数据/Get live room ranking list
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @param anchorId 主播id/Anchor id (optional, default to &quot;7222941468722758702&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetWithHttpInfo(String roomId, String anchorId) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetValidateBeforeCall(roomId, anchorId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取直播间排行榜数据/Get live room ranking list (asynchronously)
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @param anchorId 主播id/Anchor id (optional, default to &quot;7222941468722758702&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetAsync(String roomId, String anchorId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetValidateBeforeCall(roomId, anchorId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0
     * @param roomId 直播间id/Live room id (required)
     * @param anchorId 主播id/Anchor id (optional, default to &quot;7222941468722758702&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0Call(String roomId, String anchorId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_live_ranking_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (roomId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("room_id", roomId));
        }

        if (anchorId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("anchor_id", anchorId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0ValidateBeforeCall(String roomId, String anchorId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'roomId' is set
        if (roomId == null) {
            throw new ApiException("Missing the required parameter 'roomId' when calling fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0Call(roomId, anchorId, _callback);
        return localVarCall;

    }

    /**
     * 获取直播间排行榜数据/Get live room ranking list
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @param anchorId 主播id/Anchor id (optional, default to &quot;7222941468722758702&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0(String roomId, String anchorId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0WithHttpInfo(roomId, anchorId);
        return localVarResp.getData();
    }

    /**
     * 获取直播间排行榜数据/Get live room ranking list
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @param anchorId 主播id/Anchor id (optional, default to &quot;7222941468722758702&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0WithHttpInfo(String roomId, String anchorId) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0ValidateBeforeCall(roomId, anchorId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取直播间排行榜数据/Get live room ranking list (asynchronously)
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     * @param roomId 直播间id/Live room id (required)
     * @param anchorId 主播id/Anchor id (optional, default to &quot;7222941468722758702&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0Async(String roomId, String anchorId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0ValidateBeforeCall(roomId, anchorId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_live_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetCall(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetWithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetAsync(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0Call(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_live_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0Call(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0WithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0ValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0Async(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0ValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet
     * @param musicId 音乐id/Music id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetCall(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_music_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetCall(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     * @param musicId 音乐id/Music id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet(String musicId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetWithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     * @param musicId 音乐id/Music id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetWithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music (asynchronously)
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     * @param musicId 音乐id/Music id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetAsync(String musicId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0
     * @param musicId 音乐id/Music id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0Call(String musicId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_music_detail";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0ValidateBeforeCall(String musicId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0Call(musicId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     * @param musicId 音乐id/Music id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0(String musicId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0WithHttpInfo(musicId);
        return localVarResp.getData();
    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     * @param musicId 音乐id/Music id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0WithHttpInfo(String musicId) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0ValidateBeforeCall(musicId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定音乐的详情数据/Get details of specified music (asynchronously)
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     * @param musicId 音乐id/Music id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0Async(String musicId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0ValidateBeforeCall(musicId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_music_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetCall(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的音乐搜索结果/Get music search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetWithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的音乐搜索结果/Get music search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的音乐搜索结果/Get music search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetAsync(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0Call(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_music_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0Call(keyword, offset, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的音乐搜索结果/Get music search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0(String keyword, Integer offset, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0WithHttpInfo(keyword, offset, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的音乐搜索结果/Get music search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0ValidateBeforeCall(keyword, offset, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的音乐搜索结果/Get music search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0Async(String keyword, Integer offset, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0ValidateBeforeCall(keyword, offset, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetCall(String musicId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_music_video_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetValidateBeforeCall(String musicId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetCall(musicId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet(String musicId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetWithHttpInfo(musicId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetWithHttpInfo(String musicId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetValidateBeforeCall(musicId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music (asynchronously)
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetAsync(String musicId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetValidateBeforeCall(musicId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0Call(String musicId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_music_video_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (musicId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("music_id", musicId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0ValidateBeforeCall(String musicId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'musicId' is set
        if (musicId == null) {
            throw new ApiException("Missing the required parameter 'musicId' when calling fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0Call(musicId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0(String musicId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0WithHttpInfo(musicId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0WithHttpInfo(String musicId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0ValidateBeforeCall(musicId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music (asynchronously)
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     * @param musicId 音乐id/Music id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 10)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0Async(String musicId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0ValidateBeforeCall(musicId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet
     * @param awemeId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetCall(String awemeId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_one_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetValidateBeforeCall(String awemeId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetCall(awemeId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet(String awemeId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetWithHttpInfo(awemeId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetWithHttpInfo(String awemeId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetValidateBeforeCall(awemeId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据/Get single video data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     * @param awemeId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetAsync(String awemeId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetValidateBeforeCall(awemeId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0
     * @param awemeId 作品id/Video id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0Call(String awemeId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_one_video";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0ValidateBeforeCall(String awemeId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0Call(awemeId, _callback);
        return localVarCall;

    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0(String awemeId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0WithHttpInfo(awemeId);
        return localVarResp.getData();
    }

    /**
     * 获取单个作品数据/Get single video data
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     * @param awemeId 作品id/Video id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0WithHttpInfo(String awemeId) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0ValidateBeforeCall(awemeId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个作品数据/Get single video data (asynchronously)
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     * @param awemeId 作品id/Video id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0Async(String awemeId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0ValidateBeforeCall(awemeId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet
     * @param shareUrl 分享链接/Share link (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetCall(String shareUrl, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_one_video_by_share_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (shareUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("share_url", shareUrl));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetValidateBeforeCall(String shareUrl, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'shareUrl' is set
        if (shareUrl == null) {
            throw new ApiException("Missing the required parameter 'shareUrl' when calling fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetCall(shareUrl, _callback);
        return localVarCall;

    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet(String shareUrl) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetWithHttpInfo(shareUrl);
        return localVarResp.getData();
    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetWithHttpInfo(String shareUrl) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetValidateBeforeCall(shareUrl, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link (asynchronously)
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetAsync(String shareUrl, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetValidateBeforeCall(shareUrl, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0
     * @param shareUrl 分享链接/Share link (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0Call(String shareUrl, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_one_video_by_share_url";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (shareUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("share_url", shareUrl));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0ValidateBeforeCall(String shareUrl, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'shareUrl' is set
        if (shareUrl == null) {
            throw new ApiException("Missing the required parameter 'shareUrl' when calling fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0Call(shareUrl, _callback);
        return localVarCall;

    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0(String shareUrl) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0WithHttpInfo(shareUrl);
        return localVarResp.getData();
    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0WithHttpInfo(String shareUrl) throws ApiException {
        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0ValidateBeforeCall(shareUrl, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link (asynchronously)
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     * @param shareUrl 分享链接/Share link (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0Async(String shareUrl, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0ValidateBeforeCall(shareUrl, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetCall(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_follower_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (minTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_time", minTime));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_token", pageToken));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetValidateBeforeCall(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetCall(secUserId, count, minTime, pageToken, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet(String secUserId, Integer count, Integer minTime, String pageToken) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetWithHttpInfo(secUserId, count, minTime, pageToken);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetWithHttpInfo(String secUserId, Integer count, Integer minTime, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetValidateBeforeCall(secUserId, count, minTime, pageToken, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetAsync(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetValidateBeforeCall(secUserId, count, minTime, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0Call(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_follower_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (minTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_time", minTime));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_token", pageToken));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0ValidateBeforeCall(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0Call(secUserId, count, minTime, pageToken, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0(String secUserId, Integer count, Integer minTime, String pageToken) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0WithHttpInfo(secUserId, count, minTime, pageToken);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0WithHttpInfo(String secUserId, Integer count, Integer minTime, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0ValidateBeforeCall(secUserId, count, minTime, pageToken, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0Async(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0ValidateBeforeCall(secUserId, count, minTime, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetCall(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_following_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (minTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_time", minTime));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_token", pageToken));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetValidateBeforeCall(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetCall(secUserId, count, minTime, pageToken, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的关注列表数据/Get following list of specified user
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet(String secUserId, Integer count, Integer minTime, String pageToken) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetWithHttpInfo(secUserId, count, minTime, pageToken);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的关注列表数据/Get following list of specified user
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetWithHttpInfo(String secUserId, Integer count, Integer minTime, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetValidateBeforeCall(secUserId, count, minTime, pageToken, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的关注列表数据/Get following list of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetAsync(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetValidateBeforeCall(secUserId, count, minTime, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0Call(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_following_list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (minTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_time", minTime));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_token", pageToken));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0ValidateBeforeCall(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0Call(secUserId, count, minTime, pageToken, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的关注列表数据/Get following list of specified user
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0(String secUserId, Integer count, Integer minTime, String pageToken) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0WithHttpInfo(secUserId, count, minTime, pageToken);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的关注列表数据/Get following list of specified user
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0WithHttpInfo(String secUserId, Integer count, Integer minTime, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0ValidateBeforeCall(secUserId, count, minTime, pageToken, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的关注列表数据/Get following list of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param count 数量/Number (optional, default to 20)
     * @param minTime 最小时间，用于翻页/Minimum time for paging (optional, default to 0)
     * @param pageToken 翻页token/Page token (optional, default to &quot;&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0Async(String secUserId, Integer count, Integer minTime, String pageToken, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0ValidateBeforeCall(secUserId, count, minTime, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_like_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetValidateBeforeCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetCall(secUserId, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetWithHttpInfo(secUserId, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetWithHttpInfo(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetValidateBeforeCall(secUserId, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data (asynchronously)
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetAsync(String secUserId, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetValidateBeforeCall(secUserId, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0Call(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_like_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (counts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("counts", counts));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0ValidateBeforeCall(String secUserId, Integer maxCursor, Integer counts, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0Call(secUserId, maxCursor, counts, _callback);
        return localVarCall;

    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0WithHttpInfo(secUserId, maxCursor, counts);
        return localVarResp.getData();
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0WithHttpInfo(String secUserId, Integer maxCursor, Integer counts) throws ApiException {
        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0ValidateBeforeCall(secUserId, maxCursor, counts, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户喜欢作品数据/Get user like video data (asynchronously)
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param counts 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0Async(String secUserId, Integer maxCursor, Integer counts, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0ValidateBeforeCall(secUserId, maxCursor, counts, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_post_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetValidateBeforeCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetCall(secUserId, maxCursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetWithHttpInfo(secUserId, maxCursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetWithHttpInfo(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetValidateBeforeCall(secUserId, maxCursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data (asynchronously)
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetAsync(String secUserId, Integer maxCursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetValidateBeforeCall(secUserId, maxCursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0Call(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_post_videos";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        if (maxCursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_cursor", maxCursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0ValidateBeforeCall(String secUserId, Integer maxCursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0Call(secUserId, maxCursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0WithHttpInfo(secUserId, maxCursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0WithHttpInfo(String secUserId, Integer maxCursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0ValidateBeforeCall(secUserId, maxCursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户主页作品数据/Get user homepage video data (asynchronously)
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param maxCursor 最大游标/Maximum cursor (optional, default to 0)
     * @param count 每页数量/Number per page (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0Async(String secUserId, Integer maxCursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0ValidateBeforeCall(secUserId, maxCursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param userSearchFollowerCount 根据粉丝数排序/Sort by number of followers (optional, default to &quot;&quot;)
     * @param userSearchProfileType 根据账号类型排序/Sort by account type (optional, default to &quot;&quot;)
     * @param userSearchOtherPref 根据其他偏好排序/Sort by other preferences (optional, default to &quot;&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetCall(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (userSearchFollowerCount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_search_follower_count", userSearchFollowerCount));
        }

        if (userSearchProfileType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_search_profile_type", userSearchProfileType));
        }

        if (userSearchOtherPref != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_search_other_pref", userSearchOtherPref));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetCall(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param userSearchFollowerCount 根据粉丝数排序/Sort by number of followers (optional, default to &quot;&quot;)
     * @param userSearchProfileType 根据账号类型排序/Sort by account type (optional, default to &quot;&quot;)
     * @param userSearchOtherPref 根据其他偏好排序/Sort by other preferences (optional, default to &quot;&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetWithHttpInfo(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param userSearchFollowerCount 根据粉丝数排序/Sort by number of followers (optional, default to &quot;&quot;)
     * @param userSearchProfileType 根据账号类型排序/Sort by account type (optional, default to &quot;&quot;)
     * @param userSearchOtherPref 根据其他偏好排序/Sort by other preferences (optional, default to &quot;&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref) throws ApiException {
        okhttp3.Call localVarCall = fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetValidateBeforeCall(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param userSearchFollowerCount 根据粉丝数排序/Sort by number of followers (optional, default to &quot;&quot;)
     * @param userSearchProfileType 根据账号类型排序/Sort by account type (optional, default to &quot;&quot;)
     * @param userSearchOtherPref 根据其他偏好排序/Sort by other preferences (optional, default to &quot;&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetAsync(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetValidateBeforeCall(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param userSearchFollowerCount 根据粉丝数排序/Sort by number of followers (optional, default to &quot;&quot;)
     * @param userSearchProfileType 根据账号类型排序/Sort by account type (optional, default to &quot;&quot;)
     * @param userSearchOtherPref 根据其他偏好排序/Sort by other preferences (optional, default to &quot;&quot;)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0Call(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_user_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (userSearchFollowerCount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_search_follower_count", userSearchFollowerCount));
        }

        if (userSearchProfileType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_search_profile_type", userSearchProfileType));
        }

        if (userSearchOtherPref != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_search_other_pref", userSearchOtherPref));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0Call(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param userSearchFollowerCount 根据粉丝数排序/Sort by number of followers (optional, default to &quot;&quot;)
     * @param userSearchProfileType 根据账号类型排序/Sort by account type (optional, default to &quot;&quot;)
     * @param userSearchOtherPref 根据其他偏好排序/Sort by other preferences (optional, default to &quot;&quot;)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0WithHttpInfo(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param userSearchFollowerCount 根据粉丝数排序/Sort by number of followers (optional, default to &quot;&quot;)
     * @param userSearchProfileType 根据账号类型排序/Sort by account type (optional, default to &quot;&quot;)
     * @param userSearchOtherPref 根据其他偏好排序/Sort by other preferences (optional, default to &quot;&quot;)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref) throws ApiException {
        okhttp3.Call localVarCall = fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0ValidateBeforeCall(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param userSearchFollowerCount 根据粉丝数排序/Sort by number of followers (optional, default to &quot;&quot;)
     * @param userSearchProfileType 根据账号类型排序/Sort by account type (optional, default to &quot;&quot;)
     * @param userSearchOtherPref 根据其他偏好排序/Sort by other preferences (optional, default to &quot;&quot;)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0Async(String keyword, Integer offset, Integer count, String userSearchFollowerCount, String userSearchProfileType, String userSearchOtherPref, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0ValidateBeforeCall(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_video_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetValidateBeforeCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetCall(awemeId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet(String awemeId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetWithHttpInfo(awemeId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetWithHttpInfo(String awemeId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetValidateBeforeCall(awemeId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个视频评论数据/Get single video comments data (asynchronously)
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetAsync(String awemeId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetValidateBeforeCall(awemeId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0Call(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_video_comments";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (awemeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("aweme_id", awemeId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0ValidateBeforeCall(String awemeId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'awemeId' is set
        if (awemeId == null) {
            throw new ApiException("Missing the required parameter 'awemeId' when calling fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0Call(awemeId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0(String awemeId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0WithHttpInfo(awemeId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取单个视频评论数据/Get single video comments data
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0WithHttpInfo(String awemeId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0ValidateBeforeCall(awemeId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个视频评论数据/Get single video comments data (asynchronously)
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param awemeId 作品id/Video id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0Async(String awemeId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0ValidateBeforeCall(awemeId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_video_comment_replies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (itemId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_id", itemId));
        }

        if (commentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("comment_id", commentId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetValidateBeforeCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'itemId' is set
        if (itemId == null) {
            throw new ApiException("Missing the required parameter 'itemId' when calling fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet(Async)");
        }
        
        // verify the required parameter 'commentId' is set
        if (commentId == null) {
            throw new ApiException("Missing the required parameter 'commentId' when calling fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetCall(itemId, commentId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetWithHttpInfo(itemId, commentId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetWithHttpInfo(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetValidateBeforeCall(itemId, commentId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video (asynchronously)
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetAsync(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetValidateBeforeCall(itemId, commentId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0Call(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_video_comment_replies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (itemId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_id", itemId));
        }

        if (commentId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("comment_id", commentId));
        }

        if (cursor != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("cursor", cursor));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0ValidateBeforeCall(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'itemId' is set
        if (itemId == null) {
            throw new ApiException("Missing the required parameter 'itemId' when calling fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0(Async)");
        }
        
        // verify the required parameter 'commentId' is set
        if (commentId == null) {
            throw new ApiException("Missing the required parameter 'commentId' when calling fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0Call(itemId, commentId, cursor, count, _callback);
        return localVarCall;

    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0WithHttpInfo(itemId, commentId, cursor, count);
        return localVarResp.getData();
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0WithHttpInfo(String itemId, String commentId, Integer cursor, Integer count) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0ValidateBeforeCall(itemId, commentId, cursor, count, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video (asynchronously)
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     * @param itemId 作品id/Video id (required)
     * @param commentId 评论id/Comment id (required)
     * @param cursor 游标/Cursor (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0Async(String itemId, String commentId, Integer cursor, Integer count, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0ValidateBeforeCall(itemId, commentId, cursor, count, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetCall(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_video_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetValidateBeforeCall(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetCall(keyword, offset, count, sortType, publishTime, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetWithHttpInfo(keyword, offset, count, sortType, publishTime);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetWithHttpInfo(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetAsync(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetValidateBeforeCall(keyword, offset, count, sortType, publishTime, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0Call(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/fetch_video_search_result";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (keyword != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyword", keyword));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (sortType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_type", sortType));
        }

        if (publishTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("publish_time", publishTime));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0ValidateBeforeCall(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'keyword' is set
        if (keyword == null) {
            throw new ApiException("Missing the required parameter 'keyword' when calling fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0Call(keyword, offset, count, sortType, publishTime, _callback);
        return localVarCall;

    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0WithHttpInfo(keyword, offset, count, sortType, publishTime);
        return localVarResp.getData();
    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0WithHttpInfo(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime) throws ApiException {
        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords (asynchronously)
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     * @param keyword 关键词/Keyword (required)
     * @param offset 偏移量/Offset (optional, default to 0)
     * @param count 数量/Number (optional, default to 20)
     * @param sortType 排序类型/Sort type (optional)
     * @param publishTime 发布时间/Publish time (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0Async(String keyword, Integer offset, Integer count, Integer sortType, Integer publishTime, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0ValidateBeforeCall(keyword, offset, count, sortType, publishTime, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetCall(String secUserId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/handler_user_profile";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetValidateBeforeCall(String secUserId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet(Async)");
        }
        

        okhttp3.Call localVarCall = handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetCall(secUserId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet(String secUserId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetWithHttpInfo(secUserId);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetWithHttpInfo(String secUserId) throws ApiException {
        okhttp3.Call localVarCall = handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetValidateBeforeCall(secUserId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的信息/Get information of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetAsync(String secUserId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetValidateBeforeCall(secUserId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0Call(String secUserId, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/tiktok/app/v2/handler_user_profile";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (secUserId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sec_user_id", secUserId));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "bearer" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0ValidateBeforeCall(String secUserId, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'secUserId' is set
        if (secUserId == null) {
            throw new ApiException("Missing the required parameter 'secUserId' when calling handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0(Async)");
        }
        

        okhttp3.Call localVarCall = handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0Call(secUserId, _callback);
        return localVarCall;

    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ResponseModel handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0(String secUserId) throws ApiException {
        ApiResponse<ResponseModel> localVarResp = handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0WithHttpInfo(secUserId);
        return localVarResp.getData();
    }

    /**
     * 获取指定用户的信息/Get information of specified user
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @return ApiResponse&lt;ResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ResponseModel> handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0WithHttpInfo(String secUserId) throws ApiException {
        okhttp3.Call localVarCall = handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0ValidateBeforeCall(secUserId, null);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取指定用户的信息/Get information of specified user (asynchronously)
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     * @param secUserId 用户sec_user_id/User sec_user_id (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0Async(String secUserId, final ApiCallback<ResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0ValidateBeforeCall(secUserId, _callback);
        Type localVarReturnType = new TypeToken<ResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
