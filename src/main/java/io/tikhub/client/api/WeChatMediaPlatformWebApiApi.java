/*
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.tikhub.client.api;

import io.tikhub.client.ApiClient;
import io.tikhub.client.ApiException;
import io.tikhub.client.Pair;

import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.time.Duration;
import java.util.function.Consumer;

import java.util.ArrayList;
import java.util.StringJoiner;
import java.util.List;
import java.util.Map;

import java.util.concurrent.CompletableFuture;


public class WeChatMediaPlatformWebApiApi {
  private final HttpClient memberVarHttpClient;
  private final ObjectMapper memberVarObjectMapper;
  private final String memberVarBaseUri;
  private final Consumer<HttpRequest.Builder> memberVarInterceptor;
  private final Duration memberVarReadTimeout;
  private final Consumer<HttpResponse<InputStream>> memberVarResponseInterceptor;
  
  public WeChatMediaPlatformWebApiApi() {
    this(new ApiClient());
  }

  public WeChatMediaPlatformWebApiApi(ApiClient apiClient) {
    memberVarHttpClient = apiClient.getHttpClient();
    memberVarObjectMapper = apiClient.getObjectMapper();
    memberVarBaseUri = apiClient.getBaseUri();
    memberVarInterceptor = apiClient.getRequestInterceptor();
    memberVarReadTimeout = apiClient.getReadTimeout();
    memberVarResponseInterceptor = apiClient.getResponseInterceptor();
  }

  /**
   * 获取微信公众号广告/Get Wechat MP Article Ad
   * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_ad";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号广告/Get Wechat MP Article Ad
   * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_0 (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_ad";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
   * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\&quot; comment_id &#x3D; \&quot;\&quot; offset &#x3D; \&quot;0\&quot;
   * @param url 文章链接/Article URL (required)
   * @param commentId 评论ID/Comment ID (optional, default to &quot;&quot;)
   * @param offset 偏移量/Offset (optional, default to &quot;0&quot;)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet (String url, String commentId, String offset) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_comment_list";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("comment_id", commentId));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("offset", offset));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
   * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\&quot; comment_id &#x3D; \&quot;\&quot; offset &#x3D; \&quot;0\&quot;
   * @param url 文章链接/Article URL (required)
   * @param commentId 评论ID/Comment ID (optional, default to &quot;&quot;)
   * @param offset 偏移量/Offset (optional, default to &quot;0&quot;)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_0 (String url, String commentId, String offset) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_comment_list";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("comment_id", commentId));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("offset", offset));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
   * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\&quot; comment_id &#x3D; \&quot;3601466901697855492\&quot; content_id &#x3D; \&quot;6387234930341970671\&quot; offset &#x3D; \&quot;0\&quot;
   * @param commentId 评论ID/Comment ID (required)
   * @param contentId 内容ID/Content ID (required)
   * @param url 文章链接/Article URL (optional, default to &quot;https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ&quot;)
   * @param offset 偏移量/Offset (optional, default to &quot;0&quot;)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet (String commentId, String contentId, String url, String offset) throws ApiException {
    // verify the required parameter 'commentId' is set
    if (commentId == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'commentId' when calling fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet"));
    }
    // verify the required parameter 'contentId' is set
    if (contentId == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'contentId' when calling fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_comment_reply_list";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("comment_id", commentId));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("content_id", contentId));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("offset", offset));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
   * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\&quot; comment_id &#x3D; \&quot;3601466901697855492\&quot; content_id &#x3D; \&quot;6387234930341970671\&quot; offset &#x3D; \&quot;0\&quot;
   * @param commentId 评论ID/Comment ID (required)
   * @param contentId 内容ID/Content ID (required)
   * @param url 文章链接/Article URL (optional, default to &quot;https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ&quot;)
   * @param offset 偏移量/Offset (optional, default to &quot;0&quot;)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_0 (String commentId, String contentId, String url, String offset) throws ApiException {
    // verify the required parameter 'commentId' is set
    if (commentId == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'commentId' when calling fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_0"));
    }
    // verify the required parameter 'contentId' is set
    if (contentId == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'contentId' when calling fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_comment_reply_list";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("comment_id", commentId));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("content_id", contentId));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("offset", offset));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
   * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用&#x60;/api/v1/wechat_mp/web/fetch_mp_article_detail_json&#x60;接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the &#x60;/api/v1/wechat_mp/web/fetch_mp_article_detail_json&#x60; interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_detail_html";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
   * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用&#x60;/api/v1/wechat_mp/web/fetch_mp_article_detail_json&#x60;接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the &#x60;/api/v1/wechat_mp/web/fetch_mp_article_detail_json&#x60; interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_0 (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_detail_html";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
   * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用&#x60;/api/v1/wechat_mp/web/fetch_mp_article_detail_html&#x60;接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the &#x60;/api/v1/wechat_mp/web/fetch_mp_article_detail_html&#x60; interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_detail_json";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
   * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用&#x60;/api/v1/wechat_mp/web/fetch_mp_article_detail_html&#x60;接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the &#x60;/api/v1/wechat_mp/web/fetch_mp_article_detail_html&#x60; interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_0 (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_detail_json";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章列表/Get Wechat MP Article List
   * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid &#x3D; \&quot;gh_a3d35d4c9d3f\&quot; offset &#x3D; \&quot;\&quot;
   * @param ghid 公众号ID/MP ID (required)
   * @param offset 偏移量/Offset (optional, default to &quot;&quot;)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet (String ghid, String offset) throws ApiException {
    // verify the required parameter 'ghid' is set
    if (ghid == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'ghid' when calling fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_list";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("ghid", ghid));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("offset", offset));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章列表/Get Wechat MP Article List
   * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid &#x3D; \&quot;gh_a3d35d4c9d3f\&quot; offset &#x3D; \&quot;\&quot;
   * @param ghid 公众号ID/MP ID (required)
   * @param offset 偏移量/Offset (optional, default to &quot;&quot;)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_0 (String ghid, String offset) throws ApiException {
    // verify the required parameter 'ghid' is set
    if (ghid == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'ghid' when calling fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_list";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("ghid", ghid));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("offset", offset));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
   * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\&quot; comment_id &#x3D; \&quot;3363399664632332289\&quot;
   * @param url 文章链接/Article URL (required)
   * @param commentId 评论ID/Comment ID (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet (String url, String commentId) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet"));
    }
    // verify the required parameter 'commentId' is set
    if (commentId == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'commentId' when calling fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_read_count";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("comment_id", commentId));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
   * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\&quot; comment_id &#x3D; \&quot;3363399664632332289\&quot;
   * @param url 文章链接/Article URL (required)
   * @param commentId 评论ID/Comment ID (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_0 (String url, String commentId) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_0"));
    }
    // verify the required parameter 'commentId' is set
    if (commentId == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'commentId' when calling fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_read_count";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));
    localVarQueryParams.addAll(ApiClient.parameterToPairs("comment_id", commentId));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章永久链接/Get Wechat MP Article URL
   * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url &#x3D; \&quot;https://weixin.sogou.com/link?url&#x3D;dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&amp;type&#x3D;2&amp;query&#x3D;deepseek&amp;token&#x3D;C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&amp;k&#x3D;4&amp;h&#x3D;k\&quot;
   * @param sogouUrl 搜狗链接/Sogou URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet (String sogouUrl) throws ApiException {
    // verify the required parameter 'sogouUrl' is set
    if (sogouUrl == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'sogouUrl' when calling fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_url";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("sogou_url", sogouUrl));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号文章永久链接/Get Wechat MP Article URL
   * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url &#x3D; \&quot;https://weixin.sogou.com/link?url&#x3D;dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&amp;type&#x3D;2&amp;query&#x3D;deepseek&amp;token&#x3D;C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&amp;k&#x3D;4&amp;h&#x3D;k\&quot;
   * @param sogouUrl 搜狗链接/Sogou URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_0 (String sogouUrl) throws ApiException {
    // verify the required parameter 'sogouUrl' is set
    if (sogouUrl == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'sogouUrl' when calling fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_url";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("sogou_url", sogouUrl));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
   * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url &#x3D; \&quot;http://mp.weixin.qq.com/s?__biz&#x3D;MzIyMDQzMTM4Mg&#x3D;&#x3D;&amp;mid&#x3D;2247504868&amp;idx&#x3D;1&amp;sn&#x3D;37ee48875df1be54cb766783177ce61d\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_url_conversion";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
   * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url &#x3D; \&quot;http://mp.weixin.qq.com/s?__biz&#x3D;MzIyMDQzMTM4Mg&#x3D;&#x3D;&amp;mid&#x3D;2247504868&amp;idx&#x3D;1&amp;sn&#x3D;37ee48875df1be54cb766783177ce61d\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_0 (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_article_url_conversion";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号关联文章/Get Wechat MP Related Articles
   * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_related_articles";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
  /**
   * 获取微信公众号关联文章/Get Wechat MP Related Articles
   * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url &#x3D; \&quot;https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\&quot;
   * @param url 文章链接/Article URL (required)
   * @return ResponseModel
   * @throws ApiException if fails to make API call
   */
  public CompletableFuture<ResponseModel> fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_0 (String url) throws ApiException {
    // verify the required parameter 'url' is set
    if (url == null) {
        return CompletableFuture.failedFuture(new ApiException(400, "Missing the required parameter 'url' when calling fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_0"));
    }

    HttpRequest.Builder localVarRequestBuilder = HttpRequest.newBuilder();

    String localVarPath = "/api/v1/wechat_mp/web/fetch_mp_related_articles";

    List<Pair> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(ApiClient.parameterToPairs("url", url));

    if (!localVarQueryParams.isEmpty()) {
      StringJoiner queryJoiner = new StringJoiner("&");
      localVarQueryParams.forEach(p -> queryJoiner.add(p.getName() + '=' + p.getValue()));
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath + '?' + queryJoiner.toString()));
    } else {
      localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));
    }

    localVarRequestBuilder.header("Accept", "application/json");

      localVarRequestBuilder.method("GET", HttpRequest.BodyPublishers.noBody());
      if (memberVarReadTimeout != null) {
        localVarRequestBuilder.timeout(memberVarReadTimeout);
      }
      if (memberVarInterceptor != null) {
        memberVarInterceptor.accept(localVarRequestBuilder);
      }
      return memberVarHttpClient.sendAsync(
              localVarRequestBuilder.build(),
              HttpResponse.BodyHandlers.ofString()).thenComposeAsync(localVarResponse -> {
          if (localVarResponse.statusCode()/ 100 != 2) {
              return CompletableFuture.failedFuture(new ApiException(localVarResponse.statusCode(),
                  "fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_0 call received non-success response",
                  localVarResponse.headers(),
                  localVarResponse.body())
              );
          } else {
               try {
                  return CompletableFuture.completedFuture(
                          memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference<ResponseModel>() {})
                  );
              } catch (IOException e) {
                  return CompletableFuture.failedFuture(new ApiException(e));
              }
          }
      });
  }
}
