/*
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tikhub.client.api;

import io.tikhub.client.ApiException;
import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KuaishouAppApiApi
 */
public class KuaishouAppApiApiTest {

    private final KuaishouAppApiApi api = new KuaishouAppApiApi();

    /**
     * 快手品牌榜单/Kuaishou brand top list
     *
     * # [中文] ### 用途: - 快手品牌榜单 ### 参数: 获取快手品牌榜单，支持多个子榜单，具体参数如下：  - 品牌榜单热门美妆榜对应参数：     - subTabId &#x3D; 0     - subTabName &#x3D; None - 品牌榜单热门服饰榜对应参数：     - subTabId &#x3D; 131     - subTabName &#x3D; \&quot;服饰\&quot; - 品牌榜单热门汽车榜对应参数：     - subTabId &#x3D; 1     - subTabName &#x3D; \&quot;汽车\&quot; - 品牌榜单热门游戏榜对应参数：     - subTabId &#x3D; 25     - subTabName &#x3D; \&quot;游戏\&quot; - 品牌榜单热门医疗健康榜对应参数：     - subTabId &#x3D; 24     - subTabName &#x3D; \&quot;医疗健康\&quot; - 品牌榜单热门3C数码榜对应参数：     - subTabId &#x3D; 130     - subTabName &#x3D; \&quot;3C数码\&quot; - 品牌榜单热门手机榜对应参数：     - subTabId &#x3D; 128     - subTabName &#x3D; \&quot;手机\&quot; - 品牌榜单热门家电榜对应参数：     - subTabId &#x3D; 11     - subTabName &#x3D; \&quot;家电\&quot; - 品牌榜单热门母婴榜对应参数：     - subTabId &#x3D; 4     - subTabName &#x3D; \&quot;母婴\&quot; - 品牌榜单热门食品饮料榜对应参数：     - subTabId &#x3D; 2     - subTabName &#x3D; \&quot;食品饮料\&quot;  ### 返回: - 榜单数据  # [English] ### Purpose: - Kuaishou brand top list ### Parameters: Get the Kuaishou brand top list, support multiple sub-top lists, specific parameters are as follows:  - Corresponding parameters for the brand hot beauty list:     - subTabId &#x3D; 0     - subTabName &#x3D; None - Corresponding parameters for the brand hot clothing list:     - subTabId &#x3D; 131     - subTabName &#x3D; \&quot;Clothing\&quot; - Corresponding parameters for the brand hot car list:     - subTabId &#x3D; 1     - subTabName &#x3D; \&quot;Car\&quot; - Corresponding parameters for the brand hot game list:     - subTabId &#x3D; 25     - subTabName &#x3D; \&quot;Game\&quot; - Corresponding parameters for the brand hot medical health list:     - subTabId &#x3D; 24     - subTabName &#x3D; \&quot;Medical Health\&quot; - Corresponding parameters for the brand hot 3C digital list:     - subTabId &#x3D; 130     - subTabName &#x3D; \&quot;3C Digital\&quot; - Corresponding parameters for the brand hot mobile phone list:     - subTabId &#x3D; 128     - subTabName &#x3D; \&quot;Mobile Phone\&quot; - Corresponding parameters for the brand hot home appliance list:     - subTabId &#x3D; 11     - subTabName &#x3D; \&quot;Home Appliance\&quot; - Corresponding parameters for the brand hot maternal and child list:     - subTabId &#x3D; 4     - subTabName &#x3D; \&quot;Maternal and Child\&quot; - Corresponding parameters for the brand hot food and beverage list:     - subTabId &#x3D; 2     - subTabName &#x3D; \&quot;Food and Beverage\&quot;   ### Returns: - List data  # [示例/Example] subTabId &#x3D; 0 subTabName &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchBrandTopListApiV1KuaishouAppFetchBrandTopListGetTest() throws ApiException {
        //
        //Integer subTabId = null;
        //
        //String subTabName = null;
        //
        //ResponseModel response = api.fetchBrandTopListApiV1KuaishouAppFetchBrandTopListGet(subTabId, subTabName);

        // TODO: test validations
    }
    /**
     * 快手品牌榜单/Kuaishou brand top list
     *
     * # [中文] ### 用途: - 快手品牌榜单 ### 参数: 获取快手品牌榜单，支持多个子榜单，具体参数如下：  - 品牌榜单热门美妆榜对应参数：     - subTabId &#x3D; 0     - subTabName &#x3D; None - 品牌榜单热门服饰榜对应参数：     - subTabId &#x3D; 131     - subTabName &#x3D; \&quot;服饰\&quot; - 品牌榜单热门汽车榜对应参数：     - subTabId &#x3D; 1     - subTabName &#x3D; \&quot;汽车\&quot; - 品牌榜单热门游戏榜对应参数：     - subTabId &#x3D; 25     - subTabName &#x3D; \&quot;游戏\&quot; - 品牌榜单热门医疗健康榜对应参数：     - subTabId &#x3D; 24     - subTabName &#x3D; \&quot;医疗健康\&quot; - 品牌榜单热门3C数码榜对应参数：     - subTabId &#x3D; 130     - subTabName &#x3D; \&quot;3C数码\&quot; - 品牌榜单热门手机榜对应参数：     - subTabId &#x3D; 128     - subTabName &#x3D; \&quot;手机\&quot; - 品牌榜单热门家电榜对应参数：     - subTabId &#x3D; 11     - subTabName &#x3D; \&quot;家电\&quot; - 品牌榜单热门母婴榜对应参数：     - subTabId &#x3D; 4     - subTabName &#x3D; \&quot;母婴\&quot; - 品牌榜单热门食品饮料榜对应参数：     - subTabId &#x3D; 2     - subTabName &#x3D; \&quot;食品饮料\&quot;  ### 返回: - 榜单数据  # [English] ### Purpose: - Kuaishou brand top list ### Parameters: Get the Kuaishou brand top list, support multiple sub-top lists, specific parameters are as follows:  - Corresponding parameters for the brand hot beauty list:     - subTabId &#x3D; 0     - subTabName &#x3D; None - Corresponding parameters for the brand hot clothing list:     - subTabId &#x3D; 131     - subTabName &#x3D; \&quot;Clothing\&quot; - Corresponding parameters for the brand hot car list:     - subTabId &#x3D; 1     - subTabName &#x3D; \&quot;Car\&quot; - Corresponding parameters for the brand hot game list:     - subTabId &#x3D; 25     - subTabName &#x3D; \&quot;Game\&quot; - Corresponding parameters for the brand hot medical health list:     - subTabId &#x3D; 24     - subTabName &#x3D; \&quot;Medical Health\&quot; - Corresponding parameters for the brand hot 3C digital list:     - subTabId &#x3D; 130     - subTabName &#x3D; \&quot;3C Digital\&quot; - Corresponding parameters for the brand hot mobile phone list:     - subTabId &#x3D; 128     - subTabName &#x3D; \&quot;Mobile Phone\&quot; - Corresponding parameters for the brand hot home appliance list:     - subTabId &#x3D; 11     - subTabName &#x3D; \&quot;Home Appliance\&quot; - Corresponding parameters for the brand hot maternal and child list:     - subTabId &#x3D; 4     - subTabName &#x3D; \&quot;Maternal and Child\&quot; - Corresponding parameters for the brand hot food and beverage list:     - subTabId &#x3D; 2     - subTabName &#x3D; \&quot;Food and Beverage\&quot;   ### Returns: - List data  # [示例/Example] subTabId &#x3D; 0 subTabName &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchBrandTopListApiV1KuaishouAppFetchBrandTopListGet_0Test() throws ApiException {
        //
        //Integer subTabId = null;
        //
        //String subTabName = null;
        //
        //ResponseModel response = api.fetchBrandTopListApiV1KuaishouAppFetchBrandTopListGet_0(subTabId, subTabName);

        // TODO: test validations
    }
    /**
     * 快手热榜分类/Kuaishou hot categories
     *
     * # [中文] ### 用途: - 快手热榜分类 ### 返回: - 分类数据  # [English] ### Purpose: - Kuaishou hot categories ### Returns: - Categories data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotBoardCategoriesApiV1KuaishouAppFetchHotBoardCategoriesGetTest() throws ApiException {
        //
        //ResponseModel response = api.fetchHotBoardCategoriesApiV1KuaishouAppFetchHotBoardCategoriesGet();

        // TODO: test validations
    }
    /**
     * 快手热榜分类/Kuaishou hot categories
     *
     * # [中文] ### 用途: - 快手热榜分类 ### 返回: - 分类数据  # [English] ### Purpose: - Kuaishou hot categories ### Returns: - Categories data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotBoardCategoriesApiV1KuaishouAppFetchHotBoardCategoriesGet_0Test() throws ApiException {
        //
        //ResponseModel response = api.fetchHotBoardCategoriesApiV1KuaishouAppFetchHotBoardCategoriesGet_0();

        // TODO: test validations
    }
    /**
     * 快手热榜详情/Kuaishou hot board detail
     *
     * # [中文] ### 用途: - 快手热榜详情 ### 参数: - boardType: 榜单类型 - boardId: 榜单ID - boardType 和 boardId 可以从热榜分类接口中获取。 ### 返回: - 详情数据  # [English] ### Purpose: - Kuaishou hot board detail ### Parameters: - boardType: Board type - boardId: Board ID - boardType and boardId can be obtained from the hot board categories interface. ### Returns: - Detail data  # [示例/Example] boardType &#x3D; 1 boardId &#x3D; 1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotBoardDetailApiV1KuaishouAppFetchHotBoardDetailGetTest() throws ApiException {
        //
        //Integer boardType = null;
        //
        //Integer boardId = null;
        //
        //ResponseModel response = api.fetchHotBoardDetailApiV1KuaishouAppFetchHotBoardDetailGet(boardType, boardId);

        // TODO: test validations
    }
    /**
     * 快手热榜详情/Kuaishou hot board detail
     *
     * # [中文] ### 用途: - 快手热榜详情 ### 参数: - boardType: 榜单类型 - boardId: 榜单ID - boardType 和 boardId 可以从热榜分类接口中获取。 ### 返回: - 详情数据  # [English] ### Purpose: - Kuaishou hot board detail ### Parameters: - boardType: Board type - boardId: Board ID - boardType and boardId can be obtained from the hot board categories interface. ### Returns: - Detail data  # [示例/Example] boardType &#x3D; 1 boardId &#x3D; 1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotBoardDetailApiV1KuaishouAppFetchHotBoardDetailGet_0Test() throws ApiException {
        //
        //Integer boardType = null;
        //
        //Integer boardId = null;
        //
        //ResponseModel response = api.fetchHotBoardDetailApiV1KuaishouAppFetchHotBoardDetailGet_0(boardType, boardId);

        // TODO: test validations
    }
    /**
     * 快手热搜人物榜单/Kuaishou hot search person board
     *
     * # [中文] ### 用途: - 快手热搜人物榜单 ### 返回: - 榜单数据  # [English] ### Purpose: - Kuaishou hot search person board ### Returns: - Board data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotSearchPersonApiV1KuaishouAppFetchHotSearchPersonGetTest() throws ApiException {
        //
        //ResponseModel response = api.fetchHotSearchPersonApiV1KuaishouAppFetchHotSearchPersonGet();

        // TODO: test validations
    }
    /**
     * 快手热搜人物榜单/Kuaishou hot search person board
     *
     * # [中文] ### 用途: - 快手热搜人物榜单 ### 返回: - 榜单数据  # [English] ### Purpose: - Kuaishou hot search person board ### Returns: - Board data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotSearchPersonApiV1KuaishouAppFetchHotSearchPersonGet_0Test() throws ApiException {
        //
        //ResponseModel response = api.fetchHotSearchPersonApiV1KuaishouAppFetchHotSearchPersonGet_0();

        // TODO: test validations
    }
    /**
     * 快手直播榜单/Kuaishou live top list
     *
     * # [中文] ### 用途: - 快手直播榜单 ### 参数: 获取快手直播榜单，支持多个子榜单，具体参数如下：  - 直播总榜对应参数：     - subTabId &#x3D; 0     - subTabName &#x3D; None - 直播音乐榜对应参数：     - subTabId &#x3D; 102     - subTabName &#x3D; \&quot;音乐\&quot; - 直播舞蹈榜对应参数：     - subTabId &#x3D; 107     - subTabName &#x3D; \&quot;舞蹈\&quot; - 直播颜值榜对应参数：     - subTabId &#x3D; 101     - subTabName &#x3D; \&quot;颜值\&quot; - 直播国艺榜对应参数：     - subTabId &#x3D; 105     - subTabName &#x3D; \&quot;国艺\&quot; - 直播相亲榜对应参数：     - subTabId &#x3D; 111     - subTabName &#x3D; \&quot;相亲\&quot; - 直播游戏榜对应参数：     - subTabId &#x3D; 106     - subTabName &#x3D; \&quot;游戏\&quot; - 直播二次元榜对应参数：     - subTabId &#x3D; 110     - subTabName &#x3D; \&quot;二次元\&quot; - 直播故事榜对应参数：     - subTabId &#x3D; 104     - subTabName &#x3D; \&quot;故事\&quot; - 直播团播榜对应参数：     - subTabId &#x3D; 113     - subTabName &#x3D; \&quot;团播\&quot; - 直播九宫格榜对应参数：     - subTabId &#x3D; 114     - subTabName &#x3D; \&quot;九宫格\&quot;  ### 返回: - 榜单数据  # [English] ### Purpose: - Kuaishou live top list ### Parameters: Get the Kuaishou live top list, support multiple sub-top lists, specific parameters are as follows:  - Corresponding parameters for the live total list:     - subTabId &#x3D; 0     - subTabName &#x3D; None - Corresponding parameters for the live music list:     - subTabId &#x3D; 102     - subTabName &#x3D; \&quot;Music\&quot; - Corresponding parameters for the live dance list:     - subTabId &#x3D; 107     - subTabName &#x3D; \&quot;Dance\&quot; - Corresponding parameters for the live beauty list:     - subTabId &#x3D; 101     - subTabName &#x3D; \&quot;Beauty\&quot; - Corresponding parameters for the live national art list:     - subTabId &#x3D; 105     - subTabName &#x3D; \&quot;National Art\&quot; - Corresponding parameters for the live blind date list:     - subTabId &#x3D; 111     - subTabName &#x3D; \&quot;Blind Date\&quot; - Corresponding parameters for the live game list:     - subTabId &#x3D; 106     - subTabName &#x3D; \&quot;Game\&quot; - Corresponding parameters for the live second element list:     - subTabId &#x3D; 110     - subTabName &#x3D; \&quot;Second Element\&quot; - Corresponding parameters for the live story list:     - subTabId &#x3D; 104     - subTabName &#x3D; \&quot;Story\&quot; - Corresponding parameters for the live group broadcast list:     - subTabId &#x3D; 113     - subTabName &#x3D; \&quot;Group Broadcast\&quot; - Corresponding parameters for the live nine-grid list:     - subTabId &#x3D; 114     - subTabName &#x3D; \&quot;Nine Grid\&quot;  ### Returns: - List data  # [示例/Example] subTabId &#x3D; 0 subTabName &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveTopListApiV1KuaishouAppFetchLiveTopListGetTest() throws ApiException {
        //
        //Integer subTabId = null;
        //
        //String subTabName = null;
        //
        //ResponseModel response = api.fetchLiveTopListApiV1KuaishouAppFetchLiveTopListGet(subTabId, subTabName);

        // TODO: test validations
    }
    /**
     * 快手直播榜单/Kuaishou live top list
     *
     * # [中文] ### 用途: - 快手直播榜单 ### 参数: 获取快手直播榜单，支持多个子榜单，具体参数如下：  - 直播总榜对应参数：     - subTabId &#x3D; 0     - subTabName &#x3D; None - 直播音乐榜对应参数：     - subTabId &#x3D; 102     - subTabName &#x3D; \&quot;音乐\&quot; - 直播舞蹈榜对应参数：     - subTabId &#x3D; 107     - subTabName &#x3D; \&quot;舞蹈\&quot; - 直播颜值榜对应参数：     - subTabId &#x3D; 101     - subTabName &#x3D; \&quot;颜值\&quot; - 直播国艺榜对应参数：     - subTabId &#x3D; 105     - subTabName &#x3D; \&quot;国艺\&quot; - 直播相亲榜对应参数：     - subTabId &#x3D; 111     - subTabName &#x3D; \&quot;相亲\&quot; - 直播游戏榜对应参数：     - subTabId &#x3D; 106     - subTabName &#x3D; \&quot;游戏\&quot; - 直播二次元榜对应参数：     - subTabId &#x3D; 110     - subTabName &#x3D; \&quot;二次元\&quot; - 直播故事榜对应参数：     - subTabId &#x3D; 104     - subTabName &#x3D; \&quot;故事\&quot; - 直播团播榜对应参数：     - subTabId &#x3D; 113     - subTabName &#x3D; \&quot;团播\&quot; - 直播九宫格榜对应参数：     - subTabId &#x3D; 114     - subTabName &#x3D; \&quot;九宫格\&quot;  ### 返回: - 榜单数据  # [English] ### Purpose: - Kuaishou live top list ### Parameters: Get the Kuaishou live top list, support multiple sub-top lists, specific parameters are as follows:  - Corresponding parameters for the live total list:     - subTabId &#x3D; 0     - subTabName &#x3D; None - Corresponding parameters for the live music list:     - subTabId &#x3D; 102     - subTabName &#x3D; \&quot;Music\&quot; - Corresponding parameters for the live dance list:     - subTabId &#x3D; 107     - subTabName &#x3D; \&quot;Dance\&quot; - Corresponding parameters for the live beauty list:     - subTabId &#x3D; 101     - subTabName &#x3D; \&quot;Beauty\&quot; - Corresponding parameters for the live national art list:     - subTabId &#x3D; 105     - subTabName &#x3D; \&quot;National Art\&quot; - Corresponding parameters for the live blind date list:     - subTabId &#x3D; 111     - subTabName &#x3D; \&quot;Blind Date\&quot; - Corresponding parameters for the live game list:     - subTabId &#x3D; 106     - subTabName &#x3D; \&quot;Game\&quot; - Corresponding parameters for the live second element list:     - subTabId &#x3D; 110     - subTabName &#x3D; \&quot;Second Element\&quot; - Corresponding parameters for the live story list:     - subTabId &#x3D; 104     - subTabName &#x3D; \&quot;Story\&quot; - Corresponding parameters for the live group broadcast list:     - subTabId &#x3D; 113     - subTabName &#x3D; \&quot;Group Broadcast\&quot; - Corresponding parameters for the live nine-grid list:     - subTabId &#x3D; 114     - subTabName &#x3D; \&quot;Nine Grid\&quot;  ### Returns: - List data  # [示例/Example] subTabId &#x3D; 0 subTabName &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveTopListApiV1KuaishouAppFetchLiveTopListGet_0Test() throws ApiException {
        //
        //Integer subTabId = null;
        //
        //String subTabName = null;
        //
        //ResponseModel response = api.fetchLiveTopListApiV1KuaishouAppFetchLiveTopListGet_0(subTabId, subTabName);

        // TODO: test validations
    }
    /**
     * 获取单个用户数据V2/Get single user data V2
     *
     * # [中文] ### 用途: - 获取单个用户数据 V2 - 此接口收费较贵，但稳定性更高，具体价格请在用户后台查看价格表。 ### 参数: - user_id: 支持&#x60;eid&#x60;或&#x60;userId&#x60;，eid是用户主页链接中的一部分，user_id则可以从不同的接口中获取。 - 两种用户ID都可以使用，下面是两种用户ID的示例，这两个ID都指向同一个用户：     - eid &#x3D; \&quot;3xz63mn6fngqtiq\&quot;     - userId &#x3D; \&quot;228905802\&quot; ### 返回: - 用户数据  # [English] ### Purpose: - Fetch single user data V2 - This API is more expensive, but more stable, please check the price list in the user background for specific prices. ### Parameters: - user_id: Supports &#x60;eid&#x60; or &#x60;userId&#x60;, &#x60;eid&#x60; is part of the user profile link, and &#x60;user_id&#x60; can be obtained from different interfaces. - Both user IDs can be used, here are examples of the two user IDs, both of which point to the same user:     - eid &#x3D; \&quot;3xz63mn6fngqtiq\&quot;     - userId &#x3D; \&quot;228905802\&quot; ### Returns: - User data  # [示例/Example] user_id &#x3D; \&quot;3xz63mn6fngqtiq\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneUserV2ApiV1KuaishouAppFetchOneUserV2GetTest() throws ApiException {
        //
        //String userId = null;
        //
        //ResponseModel response = api.fetchOneUserV2ApiV1KuaishouAppFetchOneUserV2Get(userId);

        // TODO: test validations
    }
    /**
     * 获取单个用户数据V2/Get single user data V2
     *
     * # [中文] ### 用途: - 获取单个用户数据 V2 - 此接口收费较贵，但稳定性更高，具体价格请在用户后台查看价格表。 ### 参数: - user_id: 支持&#x60;eid&#x60;或&#x60;userId&#x60;，eid是用户主页链接中的一部分，user_id则可以从不同的接口中获取。 - 两种用户ID都可以使用，下面是两种用户ID的示例，这两个ID都指向同一个用户：     - eid &#x3D; \&quot;3xz63mn6fngqtiq\&quot;     - userId &#x3D; \&quot;228905802\&quot; ### 返回: - 用户数据  # [English] ### Purpose: - Fetch single user data V2 - This API is more expensive, but more stable, please check the price list in the user background for specific prices. ### Parameters: - user_id: Supports &#x60;eid&#x60; or &#x60;userId&#x60;, &#x60;eid&#x60; is part of the user profile link, and &#x60;user_id&#x60; can be obtained from different interfaces. - Both user IDs can be used, here are examples of the two user IDs, both of which point to the same user:     - eid &#x3D; \&quot;3xz63mn6fngqtiq\&quot;     - userId &#x3D; \&quot;228905802\&quot; ### Returns: - User data  # [示例/Example] user_id &#x3D; \&quot;3xz63mn6fngqtiq\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneUserV2ApiV1KuaishouAppFetchOneUserV2Get_0Test() throws ApiException {
        //
        //String userId = null;
        //
        //ResponseModel response = api.fetchOneUserV2ApiV1KuaishouAppFetchOneUserV2Get_0(userId);

        // TODO: test validations
    }
    /**
     * 根据链接获取单个作品数据/Fetch single video by URL
     *
     * # [中文] ### 用途: - 根据链接获取单个作品数据，此接口默认使用价格更便宜的V1接口进行请求。 ### 参数: - share_text: 作品链接或分享文本 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL, this API defaults to using the cheaper V1 API for requests. ### Parameters: - share_text: Photo URL or share text ### Returns: - Video data  # [示例/Example] share_text &#x3D; \&quot;https://v.kuaishou.com/cNYP0Z\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoByShareTextApiV1KuaishouAppFetchOneVideoByUrlGetTest() throws ApiException {
        //
        //String shareText = null;
        //
        //ResponseModel response = api.fetchOneVideoByShareTextApiV1KuaishouAppFetchOneVideoByUrlGet(shareText);

        // TODO: test validations
    }
    /**
     * 根据链接获取单个作品数据/Fetch single video by URL
     *
     * # [中文] ### 用途: - 根据链接获取单个作品数据，此接口默认使用价格更便宜的V1接口进行请求。 ### 参数: - share_text: 作品链接或分享文本 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL, this API defaults to using the cheaper V1 API for requests. ### Parameters: - share_text: Photo URL or share text ### Returns: - Video data  # [示例/Example] share_text &#x3D; \&quot;https://v.kuaishou.com/cNYP0Z\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoByShareTextApiV1KuaishouAppFetchOneVideoByUrlGet_0Test() throws ApiException {
        //
        //String shareText = null;
        //
        //ResponseModel response = api.fetchOneVideoByShareTextApiV1KuaishouAppFetchOneVideoByUrlGet_0(shareText);

        // TODO: test validations
    }
    /**
     * 快手单一视频查询接口V1/Kuaishou single video query API V1
     *
     * # [中文] ### 用途: - 获取单个作品数据，如果此接口连续请求失败，可以尝试使用价格更昂贵的V2接口进行冗余请求。 ### 参数: - photo_id: 作品ID，作品ID可以从分享链接中提取 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video data, if this API continuously fails, you can try to use the more expensive V2 API for redundant requests. ### Parameters: - photo_id: Photo ID, the photo ID can be extracted from the share link ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xhpk3xcf6e4iac\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoV1ApiV1KuaishouAppFetchOneVideoGetTest() throws ApiException {
        //
        //String photoId = null;
        //
        //ResponseModel response = api.fetchOneVideoV1ApiV1KuaishouAppFetchOneVideoGet(photoId);

        // TODO: test validations
    }
    /**
     * 快手单一视频查询接口V1/Kuaishou single video query API V1
     *
     * # [中文] ### 用途: - 获取单个作品数据，如果此接口连续请求失败，可以尝试使用价格更昂贵的V2接口进行冗余请求。 ### 参数: - photo_id: 作品ID，作品ID可以从分享链接中提取 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video data, if this API continuously fails, you can try to use the more expensive V2 API for redundant requests. ### Parameters: - photo_id: Photo ID, the photo ID can be extracted from the share link ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xhpk3xcf6e4iac\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoV1ApiV1KuaishouAppFetchOneVideoGet_0Test() throws ApiException {
        //
        //String photoId = null;
        //
        //ResponseModel response = api.fetchOneVideoV1ApiV1KuaishouAppFetchOneVideoGet_0(photoId);

        // TODO: test validations
    }
    /**
     * 快手单一视频查询接口V2/Kuaishou single video query API V2
     *
     * # [中文] ### 用途: - 获取单个作品数据接口 V2，此接口仅作为备选接口，收费较贵，但稳定性更高。 - 此接口请求价格为 0.01 美元/次，请求不成功不收费。 ### 参数: - photo_id: 作品ID ### 返回: - 视频数据  # [English] ### Purpose: - Single video query API V2, this API is only used as an alternative API, it is more expensive, but more stable. - The request price of this API is 0.01 USD/time, and the request is not successful without charge. ### Parameters: - photo_id: Photo ID ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xtdqvdnqd3psuc\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoV2ApiV1KuaishouAppFetchOneVideoV2GetTest() throws ApiException {
        //
        //String photoId = null;
        //
        //ResponseModel response = api.fetchOneVideoV2ApiV1KuaishouAppFetchOneVideoV2Get(photoId);

        // TODO: test validations
    }
    /**
     * 快手单一视频查询接口V2/Kuaishou single video query API V2
     *
     * # [中文] ### 用途: - 获取单个作品数据接口 V2，此接口仅作为备选接口，收费较贵，但稳定性更高。 - 此接口请求价格为 0.01 美元/次，请求不成功不收费。 ### 参数: - photo_id: 作品ID ### 返回: - 视频数据  # [English] ### Purpose: - Single video query API V2, this API is only used as an alternative API, it is more expensive, but more stable. - The request price of this API is 0.01 USD/time, and the request is not successful without charge. ### Parameters: - photo_id: Photo ID ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xtdqvdnqd3psuc\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoV2ApiV1KuaishouAppFetchOneVideoV2Get_0Test() throws ApiException {
        //
        //String photoId = null;
        //
        //ResponseModel response = api.fetchOneVideoV2ApiV1KuaishouAppFetchOneVideoV2Get_0(photoId);

        // TODO: test validations
    }
    /**
     * 快手购物榜单/Kuaishou shopping top list
     *
     * # [中文] ### 用途: - 快手购物榜单 ### 参数: 获取快手购物榜单，支持多个子榜单，具体参数如下：  - 购物榜单热门主播榜对应参数：     - subTabId &#x3D; 0     - subTabName &#x3D; None - 购物榜单热销商品榜对应参数：     - subTabId &#x3D; 102     - subTabName &#x3D; \&quot;热销商品\&quot;  ### 返回: - 榜单数据  # [English] ### Purpose: - Kuaishou shopping top list ### Parameters: Get the Kuaishou shopping top list, support multiple sub-top lists, specific parameters are as follows:  - Corresponding parameters for the shopping hot anchor list:     - subTabId &#x3D; 0     - subTabName &#x3D; None - Corresponding parameters for the shopping hot selling product list:     - subTabId &#x3D; 102     - subTabName &#x3D; \&quot;Hot Selling Product\&quot;  ### Returns: - List data  # [示例/Example] subTabId &#x3D; 0 subTabName &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShoppingTopListApiV1KuaishouAppFetchShoppingTopListGetTest() throws ApiException {
        //
        //Integer subTabId = null;
        //
        //String subTabName = null;
        //
        //ResponseModel response = api.fetchShoppingTopListApiV1KuaishouAppFetchShoppingTopListGet(subTabId, subTabName);

        // TODO: test validations
    }
    /**
     * 快手购物榜单/Kuaishou shopping top list
     *
     * # [中文] ### 用途: - 快手购物榜单 ### 参数: 获取快手购物榜单，支持多个子榜单，具体参数如下：  - 购物榜单热门主播榜对应参数：     - subTabId &#x3D; 0     - subTabName &#x3D; None - 购物榜单热销商品榜对应参数：     - subTabId &#x3D; 102     - subTabName &#x3D; \&quot;热销商品\&quot;  ### 返回: - 榜单数据  # [English] ### Purpose: - Kuaishou shopping top list ### Parameters: Get the Kuaishou shopping top list, support multiple sub-top lists, specific parameters are as follows:  - Corresponding parameters for the shopping hot anchor list:     - subTabId &#x3D; 0     - subTabName &#x3D; None - Corresponding parameters for the shopping hot selling product list:     - subTabId &#x3D; 102     - subTabName &#x3D; \&quot;Hot Selling Product\&quot;  ### Returns: - List data  # [示例/Example] subTabId &#x3D; 0 subTabName &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShoppingTopListApiV1KuaishouAppFetchShoppingTopListGet_0Test() throws ApiException {
        //
        //Integer subTabId = null;
        //
        //String subTabName = null;
        //
        //ResponseModel response = api.fetchShoppingTopListApiV1KuaishouAppFetchShoppingTopListGet_0(subTabId, subTabName);

        // TODO: test validations
    }
    /**
     * 获取用户热门作品数据/Get user hot post data
     *
     * # [中文] ### 用途: - 获取用户热门作品数据 ### 参数: - user_id: 用户ID，此接口只支持用户ID，不支持用户eid，也就是输入必须要是纯数字ID。 - user_id 可以从获取单个用户数据接口中获取。 - pcursor: 作品游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 作品数据  # [English] ### Purpose: - Get user hot post data ### Parameters: - user_id: User ID, this API only supports user ID, not user eid, that is, the input must be a pure digital ID. - user_id can be obtained from the get single user data interface. - pcursor: Post cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Post data  # [示例/Example] user_id &#x3D; \&quot;228905802\&quot; pcursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserHotPostApiV1KuaishouAppFetchUserHotPostGetTest() throws ApiException {
        //
        //String userId = null;
        //
        //String pcursor = null;
        //
        //ResponseModel response = api.fetchUserHotPostApiV1KuaishouAppFetchUserHotPostGet(userId, pcursor);

        // TODO: test validations
    }
    /**
     * 获取用户热门作品数据/Get user hot post data
     *
     * # [中文] ### 用途: - 获取用户热门作品数据 ### 参数: - user_id: 用户ID，此接口只支持用户ID，不支持用户eid，也就是输入必须要是纯数字ID。 - user_id 可以从获取单个用户数据接口中获取。 - pcursor: 作品游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 作品数据  # [English] ### Purpose: - Get user hot post data ### Parameters: - user_id: User ID, this API only supports user ID, not user eid, that is, the input must be a pure digital ID. - user_id can be obtained from the get single user data interface. - pcursor: Post cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Post data  # [示例/Example] user_id &#x3D; \&quot;228905802\&quot; pcursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserHotPostApiV1KuaishouAppFetchUserHotPostGet_0Test() throws ApiException {
        //
        //String userId = null;
        //
        //String pcursor = null;
        //
        //ResponseModel response = api.fetchUserHotPostApiV1KuaishouAppFetchUserHotPostGet_0(userId, pcursor);

        // TODO: test validations
    }
    /**
     * 获取用户直播信息/Get user live info
     *
     * # [中文] ### 用途: - 获取用户直播信息 ### 参数: - user_id: 用户ID，此接口只支持用户ID，不支持用户eid，也就是输入必须要是纯数字ID。 - user_id 可以从获取单个用户数据接口中获取。 ### 返回: - 直播信息  # [English] ### Purpose: - Get user live info ### Parameters: - user_id: User ID, this API only supports user ID, not user eid, that is, the input must be a pure digital ID. - user_id can be obtained from the get single user data interface. ### Returns: - Live info  # [示例/Example] user_id &#x3D; \&quot;1377082950\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserLiveInfoApiV1KuaishouAppFetchUserLiveInfoGetTest() throws ApiException {
        //
        //String userId = null;
        //
        //ResponseModel response = api.fetchUserLiveInfoApiV1KuaishouAppFetchUserLiveInfoGet(userId);

        // TODO: test validations
    }
    /**
     * 获取用户直播信息/Get user live info
     *
     * # [中文] ### 用途: - 获取用户直播信息 ### 参数: - user_id: 用户ID，此接口只支持用户ID，不支持用户eid，也就是输入必须要是纯数字ID。 - user_id 可以从获取单个用户数据接口中获取。 ### 返回: - 直播信息  # [English] ### Purpose: - Get user live info ### Parameters: - user_id: User ID, this API only supports user ID, not user eid, that is, the input must be a pure digital ID. - user_id can be obtained from the get single user data interface. ### Returns: - Live info  # [示例/Example] user_id &#x3D; \&quot;1377082950\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserLiveInfoApiV1KuaishouAppFetchUserLiveInfoGet_0Test() throws ApiException {
        //
        //String userId = null;
        //
        //ResponseModel response = api.fetchUserLiveInfoApiV1KuaishouAppFetchUserLiveInfoGet_0(userId);

        // TODO: test validations
    }
    /**
     * 用户视频列表V2/User video list V2
     *
     * # [中文] ### 用途: - 用户视频列表 V2 - 此接口收费较贵，但稳定性更高，具体价格请在用户后台查看价格表。 ### 参数: - user_id: 用户ID，此接口只支持用户ID，不支持用户eid，也就是输入必须要是纯数字ID。 - user_id 可以从获取单个用户数据接口中获取。 - pcursor: 视频游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 视频数据  # [English] ### Purpose: - User video list V2 - This API is more expensive, but more stable, please check the price list in the user background for specific prices. ### Parameters: - user_id: User ID, this API only supports user ID, not user eid, that is, the input must be a pure digital ID. - user_id can be obtained from the get single user data interface. - pcursor: Video cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Videos data  # [示例/Example] user_id &#x3D; \&quot;228905802\&quot; pcursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostV2ApiV1KuaishouAppFetchUserPostV2GetTest() throws ApiException {
        //
        //String userId = null;
        //
        //String pcursor = null;
        //
        //ResponseModel response = api.fetchUserPostV2ApiV1KuaishouAppFetchUserPostV2Get(userId, pcursor);

        // TODO: test validations
    }
    /**
     * 用户视频列表V2/User video list V2
     *
     * # [中文] ### 用途: - 用户视频列表 V2 - 此接口收费较贵，但稳定性更高，具体价格请在用户后台查看价格表。 ### 参数: - user_id: 用户ID，此接口只支持用户ID，不支持用户eid，也就是输入必须要是纯数字ID。 - user_id 可以从获取单个用户数据接口中获取。 - pcursor: 视频游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 视频数据  # [English] ### Purpose: - User video list V2 - This API is more expensive, but more stable, please check the price list in the user background for specific prices. ### Parameters: - user_id: User ID, this API only supports user ID, not user eid, that is, the input must be a pure digital ID. - user_id can be obtained from the get single user data interface. - pcursor: Video cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Videos data  # [示例/Example] user_id &#x3D; \&quot;228905802\&quot; pcursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostV2ApiV1KuaishouAppFetchUserPostV2Get_0Test() throws ApiException {
        //
        //String userId = null;
        //
        //String pcursor = null;
        //
        //ResponseModel response = api.fetchUserPostV2ApiV1KuaishouAppFetchUserPostV2Get_0(userId, pcursor);

        // TODO: test validations
    }
    /**
     * 获取单个作品评论数据/Get single video comment data
     *
     * # [中文] ### 用途: - 获取单个作品评论数据 ### 参数: - photo_id: 作品ID - pcursor: 评论游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 评论数据  # [English] ### Purpose: - Fetch single video comment data ### Parameters: - photo_id: Photo ID - pcursor: Comment cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Comments data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot; pcursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentApiV1KuaishouAppFetchOneVideoCommentGetTest() throws ApiException {
        //
        //String photoId = null;
        //
        //String pcursor = null;
        //
        //ResponseModel response = api.fetchVideoCommentApiV1KuaishouAppFetchOneVideoCommentGet(photoId, pcursor);

        // TODO: test validations
    }
    /**
     * 获取单个作品评论数据/Get single video comment data
     *
     * # [中文] ### 用途: - 获取单个作品评论数据 ### 参数: - photo_id: 作品ID - pcursor: 评论游标，第一次请求为空，后续请求使用返回响应中的pcursor值进行翻页。 ### 返回: - 评论数据  # [English] ### Purpose: - Fetch single video comment data ### Parameters: - photo_id: Photo ID - pcursor: Comment cursor, empty for the first request, and use the pcursor value in the returned response for subsequent requests. ### Returns: - Comments data  # [示例/Example] photo_id &#x3D; \&quot;3x7gxp2zhgjv832\&quot; pcursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentApiV1KuaishouAppFetchOneVideoCommentGet_0Test() throws ApiException {
        //
        //String photoId = null;
        //
        //String pcursor = null;
        //
        //ResponseModel response = api.fetchVideoCommentApiV1KuaishouAppFetchOneVideoCommentGet_0(photoId, pcursor);

        // TODO: test validations
    }
    /**
     * 生成快手分享链接/Generate Kuaishou share link
     *
     * # [中文] ### 用途: - 生成快手分享链接 ### 参数: - shareObjectId: 作品ID ### 返回: - 分享链接  # [English] ### Purpose: - Generate Kuaishou share link ### Parameters: - photo_id: Photo ID ### Returns: - Share link  # [示例/Example] shareObjectId &#x3D; \&quot;3xg5wjqdtekbb3u\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateKuaishouShareLinkApiV1KuaishouAppGenerateKuaishouShareLinkGetTest() throws ApiException {
        //
        //String shareObjectId = null;
        //
        //ResponseModel response = api.generateKuaishouShareLinkApiV1KuaishouAppGenerateKuaishouShareLinkGet(shareObjectId);

        // TODO: test validations
    }
    /**
     * 生成快手分享链接/Generate Kuaishou share link
     *
     * # [中文] ### 用途: - 生成快手分享链接 ### 参数: - shareObjectId: 作品ID ### 返回: - 分享链接  # [English] ### Purpose: - Generate Kuaishou share link ### Parameters: - photo_id: Photo ID ### Returns: - Share link  # [示例/Example] shareObjectId &#x3D; \&quot;3xg5wjqdtekbb3u\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateKuaishouShareLinkApiV1KuaishouAppGenerateKuaishouShareLinkGet_0Test() throws ApiException {
        //
        //String shareObjectId = null;
        //
        //ResponseModel response = api.generateKuaishouShareLinkApiV1KuaishouAppGenerateKuaishouShareLinkGet_0(shareObjectId);

        // TODO: test validations
    }
    /**
     * 搜索用户V2/Search user V2
     *
     * # [中文] ### 用途: - 搜索用户 V2 - 此接口收费较贵，但稳定性更高，具体价格请在用户后台查看价格表。 ### 参数: - keyword: 搜索关键词 - page: 用户页数，从1开始 ### 返回: - 用户数据  # [English] ### Purpose: - Search user V2 - This API is more expensive, but more stable, please check the price list in the user background for specific prices. ### Parameters: - keyword: Search keyword - page: User page number, starting from 1 ### Returns: - User data  # [示例/Example] keyword &#x3D; \&quot;人工智能\&quot; page &#x3D; \&quot;1\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchUserV2ApiV1KuaishouAppSearchUserV2GetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //String page = null;
        //
        //ResponseModel response = api.searchUserV2ApiV1KuaishouAppSearchUserV2Get(keyword, page);

        // TODO: test validations
    }
    /**
     * 搜索用户V2/Search user V2
     *
     * # [中文] ### 用途: - 搜索用户 V2 - 此接口收费较贵，但稳定性更高，具体价格请在用户后台查看价格表。 ### 参数: - keyword: 搜索关键词 - page: 用户页数，从1开始 ### 返回: - 用户数据  # [English] ### Purpose: - Search user V2 - This API is more expensive, but more stable, please check the price list in the user background for specific prices. ### Parameters: - keyword: Search keyword - page: User page number, starting from 1 ### Returns: - User data  # [示例/Example] keyword &#x3D; \&quot;人工智能\&quot; page &#x3D; \&quot;1\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchUserV2ApiV1KuaishouAppSearchUserV2Get_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //String page = null;
        //
        //ResponseModel response = api.searchUserV2ApiV1KuaishouAppSearchUserV2Get_0(keyword, page);

        // TODO: test validations
    }
    /**
     * 搜索视频V2/Search video V2
     *
     * # [中文] ### 用途: - 搜索视频 V2 - 此接口收费较贵，但稳定性更高，具体价格请在用户后台查看价格表。 ### 参数: - keyword: 搜索关键词 - page: 视频页数，从1开始 ### 返回: - 视频数据  # [English] ### Purpose: - Search video V2 - This API is more expensive, but more stable, please check the price list in the user background for specific prices. ### Parameters: - keyword: Search keyword - page: Page number, starting from 1 ### Returns: - Videos data  # [示例/Example] keyword &#x3D; \&quot;人工智能\&quot; page &#x3D; \&quot;1\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchVideoV2ApiV1KuaishouAppSearchVideoV2GetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //String page = null;
        //
        //ResponseModel response = api.searchVideoV2ApiV1KuaishouAppSearchVideoV2Get(keyword, page);

        // TODO: test validations
    }
    /**
     * 搜索视频V2/Search video V2
     *
     * # [中文] ### 用途: - 搜索视频 V2 - 此接口收费较贵，但稳定性更高，具体价格请在用户后台查看价格表。 ### 参数: - keyword: 搜索关键词 - page: 视频页数，从1开始 ### 返回: - 视频数据  # [English] ### Purpose: - Search video V2 - This API is more expensive, but more stable, please check the price list in the user background for specific prices. ### Parameters: - keyword: Search keyword - page: Page number, starting from 1 ### Returns: - Videos data  # [示例/Example] keyword &#x3D; \&quot;人工智能\&quot; page &#x3D; \&quot;1\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchVideoV2ApiV1KuaishouAppSearchVideoV2Get_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //String page = null;
        //
        //ResponseModel response = api.searchVideoV2ApiV1KuaishouAppSearchVideoV2Get_0(keyword, page);

        // TODO: test validations
    }
}
