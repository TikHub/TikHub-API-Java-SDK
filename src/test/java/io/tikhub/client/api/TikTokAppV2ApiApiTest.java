/*
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tikhub.client.api;

import io.tikhub.client.ApiException;
import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TikTokAppV2ApiApi
 */
public class TikTokAppV2ApiApiTest {

    private final TikTokAppV2ApiApi api = new TikTokAppV2ApiApi();

    /**
     * 检测直播间是否在线/Check if live room is online
     *
     * # [中文] ### 用途: - 检测直播间是否在线 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGetTest() throws ApiException {
        //
        //String roomId = null;
        //
        //ResponseModel response = api.checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet(roomId);

        // TODO: test validations
    }
    /**
     * 检测直播间是否在线/Check if live room is online
     *
     * # [中文] ### 用途: - 检测直播间是否在线 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0Test() throws ApiException {
        //
        //String roomId = null;
        //
        //ResponseModel response = api.checkLiveRoomOnlineApiV1TiktokAppV2CheckLiveRoomOnlineGet_0(roomId);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的综合搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_general_search_result） | Get comprehensive search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_general_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //Integer sortType = null;
        //
        //Integer publishTime = null;
        //
        //ResponseModel response = api.fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet(keyword, offset, count, sortType, publishTime);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的综合搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_general_search_result） | Get comprehensive search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_general_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //Integer sortType = null;
        //
        //Integer publishTime = null;
        //
        //ResponseModel response = api.fetchGeneralSearchResultApiV1TiktokAppV2FetchGeneralSearchResultGet_0(keyword, offset, count, sortType, publishTime);

        // TODO: test validations
    }
    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     *
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGetTest() throws ApiException {
        //
        //String chId = null;
        //
        //ResponseModel response = api.fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet(chId);

        // TODO: test validations
    }
    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     *
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0Test() throws ApiException {
        //
        //String chId = null;
        //
        //ResponseModel response = api.fetchHashtagDetailApiV1TiktokAppV2FetchHashtagDetailGet_0(chId);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的话题搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_hashtag_search_result） | Get hashtag search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_hashtag_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet(keyword, offset, count);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的话题搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_hashtag_search_result） | Get hashtag search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_hashtag_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchHashtagSearchResultApiV1TiktokAppV2FetchHashtagSearchResultGet_0(keyword, offset, count);

        // TODO: test validations
    }
    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     *
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGetTest() throws ApiException {
        //
        //String chId = null;
        //
        //Integer cursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet(chId, cursor, count);

        // TODO: test validations
    }
    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     *
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0Test() throws ApiException {
        //
        //String chId = null;
        //
        //Integer cursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchHashtagVideoListApiV1TiktokAppV2FetchHashtagVideoListGet_0(chId, cursor, count);

        // TODO: test validations
    }
    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data
     *
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGetTest() throws ApiException {
        //
        //ResponseModel response = api.fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet();

        // TODO: test validations
    }
    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data
     *
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0Test() throws ApiException {
        //
        //ResponseModel response = api.fetchHomeFeedApiV1TiktokAppV2FetchHomeFeedGet_0();

        // TODO: test validations
    }
    /**
     * 获取直播间排行榜数据/Get live room ranking list
     *
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGetTest() throws ApiException {
        //
        //String roomId = null;
        //
        //String anchorId = null;
        //
        //ResponseModel response = api.fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet(roomId, anchorId);

        // TODO: test validations
    }
    /**
     * 获取直播间排行榜数据/Get live room ranking list
     *
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0Test() throws ApiException {
        //
        //String roomId = null;
        //
        //String anchorId = null;
        //
        //ResponseModel response = api.fetchLiveRankingListApiV1TiktokAppV2FetchLiveRankingListGet_0(roomId, anchorId);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的直播搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_live_search_result） | Get live search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_live_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet(keyword, offset, count);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的直播搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_live_search_result） | Get live search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_live_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchLiveSearchResultApiV1TiktokAppV2FetchLiveSearchResultGet_0(keyword, offset, count);

        // TODO: test validations
    }
    /**
     * 获取指定音乐的详情数据/Get details of specified music
     *
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGetTest() throws ApiException {
        //
        //String musicId = null;
        //
        //ResponseModel response = api.fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet(musicId);

        // TODO: test validations
    }
    /**
     * 获取指定音乐的详情数据/Get details of specified music
     *
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0Test() throws ApiException {
        //
        //String musicId = null;
        //
        //ResponseModel response = api.fetchMusicDetailApiV1TiktokAppV2FetchMusicDetailGet_0(musicId);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的音乐搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_music_search_result） | Get music search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_music_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet(keyword, offset, count);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的音乐搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_music_search_result） | Get music search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_music_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchMusicSearchResultApiV1TiktokAppV2FetchMusicSearchResultGet_0(keyword, offset, count);

        // TODO: test validations
    }
    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     *
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGetTest() throws ApiException {
        //
        //String musicId = null;
        //
        //Integer cursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet(musicId, cursor, count);

        // TODO: test validations
    }
    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     *
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0Test() throws ApiException {
        //
        //String musicId = null;
        //
        //Integer cursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchMusicVideoListApiV1TiktokAppV2FetchMusicVideoListGet_0(musicId, cursor, count);

        // TODO: test validations
    }
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoApiV1TiktokAppV2FetchOneVideoGetTest() throws ApiException {
        //
        //String awemeId = null;
        //
        //ResponseModel response = api.fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet(awemeId);

        // TODO: test validations
    }
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0Test() throws ApiException {
        //
        //String awemeId = null;
        //
        //ResponseModel response = api.fetchOneVideoApiV1TiktokAppV2FetchOneVideoGet_0(awemeId);

        // TODO: test validations
    }
    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     *
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGetTest() throws ApiException {
        //
        //String shareUrl = null;
        //
        //ResponseModel response = api.fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet(shareUrl);

        // TODO: test validations
    }
    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     *
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0Test() throws ApiException {
        //
        //String shareUrl = null;
        //
        //ResponseModel response = api.fetchOneVideoByShareUrlApiV1TiktokAppV2FetchOneVideoByShareUrlGet_0(shareUrl);

        // TODO: test validations
    }
    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGetTest() throws ApiException {
        //
        //String secUserId = null;
        //
        //Integer count = null;
        //
        //Integer minTime = null;
        //
        //String pageToken = null;
        //
        //ResponseModel response = api.fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet(secUserId, count, minTime, pageToken);

        // TODO: test validations
    }
    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0Test() throws ApiException {
        //
        //String secUserId = null;
        //
        //Integer count = null;
        //
        //Integer minTime = null;
        //
        //String pageToken = null;
        //
        //ResponseModel response = api.fetchUserFollowerListApiV1TiktokAppV2FetchUserFollowerListGet_0(secUserId, count, minTime, pageToken);

        // TODO: test validations
    }
    /**
     * 获取指定用户的关注列表数据/Get following list of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGetTest() throws ApiException {
        //
        //String secUserId = null;
        //
        //Integer count = null;
        //
        //Integer minTime = null;
        //
        //String pageToken = null;
        //
        //ResponseModel response = api.fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet(secUserId, count, minTime, pageToken);

        // TODO: test validations
    }
    /**
     * 获取指定用户的关注列表数据/Get following list of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0Test() throws ApiException {
        //
        //String secUserId = null;
        //
        //Integer count = null;
        //
        //Integer minTime = null;
        //
        //String pageToken = null;
        //
        //ResponseModel response = api.fetchUserFollowingListApiV1TiktokAppV2FetchUserFollowingListGet_0(secUserId, count, minTime, pageToken);

        // TODO: test validations
    }
    /**
     * 获取用户喜欢作品数据/Get user like video data
     *
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGetTest() throws ApiException {
        //
        //String secUserId = null;
        //
        //Integer maxCursor = null;
        //
        //Integer counts = null;
        //
        //ResponseModel response = api.fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet(secUserId, maxCursor, counts);

        // TODO: test validations
    }
    /**
     * 获取用户喜欢作品数据/Get user like video data
     *
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0Test() throws ApiException {
        //
        //String secUserId = null;
        //
        //Integer maxCursor = null;
        //
        //Integer counts = null;
        //
        //ResponseModel response = api.fetchUserLikeVideosApiV1TiktokAppV2FetchUserLikeVideosGet_0(secUserId, maxCursor, counts);

        // TODO: test validations
    }
    /**
     * 获取用户主页作品数据/Get user homepage video data
     *
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGetTest() throws ApiException {
        //
        //String secUserId = null;
        //
        //Integer maxCursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet(secUserId, maxCursor, count);

        // TODO: test validations
    }
    /**
     * 获取用户主页作品数据/Get user homepage video data
     *
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0Test() throws ApiException {
        //
        //String secUserId = null;
        //
        //Integer maxCursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchUserPostVideosApiV1TiktokAppV2FetchUserPostVideosGet_0(secUserId, maxCursor, count);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的用户搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_user_search_result） | Get user search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_user_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //String userSearchFollowerCount = null;
        //
        //String userSearchProfileType = null;
        //
        //String userSearchOtherPref = null;
        //
        //ResponseModel response = api.fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的用户搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_user_search_result） | Get user search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_user_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //String userSearchFollowerCount = null;
        //
        //String userSearchProfileType = null;
        //
        //String userSearchOtherPref = null;
        //
        //ResponseModel response = api.fetchUserSearchResultApiV1TiktokAppV2FetchUserSearchResultGet_0(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref);

        // TODO: test validations
    }
    /**
     * 获取单个视频评论数据/Get single video comments data
     *
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGetTest() throws ApiException {
        //
        //String awemeId = null;
        //
        //Integer cursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet(awemeId, cursor, count);

        // TODO: test validations
    }
    /**
     * 获取单个视频评论数据/Get single video comments data
     *
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0Test() throws ApiException {
        //
        //String awemeId = null;
        //
        //Integer cursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchVideoCommentsApiV1TiktokAppV2FetchVideoCommentsGet_0(awemeId, cursor, count);

        // TODO: test validations
    }
    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     *
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGetTest() throws ApiException {
        //
        //String itemId = null;
        //
        //String commentId = null;
        //
        //Integer cursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet(itemId, commentId, cursor, count);

        // TODO: test validations
    }
    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     *
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0Test() throws ApiException {
        //
        //String itemId = null;
        //
        //String commentId = null;
        //
        //Integer cursor = null;
        //
        //Integer count = null;
        //
        //ResponseModel response = api.fetchVideoCommentsReplyApiV1TiktokAppV2FetchVideoCommentRepliesGet_0(itemId, commentId, cursor, count);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的视频搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_video_search_result） | Get video search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_video_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //Integer sortType = null;
        //
        //Integer publishTime = null;
        //
        //ResponseModel response = api.fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet(keyword, offset, count, sortType, publishTime);

        // TODO: test validations
    }
    /**
     * 获取指定关键词的视频搜索结果（弃用，替代接口：/api/v1/tiktok/app/v3/fetch_video_search_result） | Get video search results of specified keywords (deprecated, replaced by interface: /api/v1/tiktok/app/v3/fetch_video_search_result)
     *
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //Integer offset = null;
        //
        //Integer count = null;
        //
        //Integer sortType = null;
        //
        //Integer publishTime = null;
        //
        //ResponseModel response = api.fetchVideoSearchResultApiV1TiktokAppV2FetchVideoSearchResultGet_0(keyword, offset, count, sortType, publishTime);

        // TODO: test validations
    }
    /**
     * 获取指定用户的信息/Get information of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGetTest() throws ApiException {
        //
        //String secUserId = null;
        //
        //ResponseModel response = api.handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet(secUserId);

        // TODO: test validations
    }
    /**
     * 获取指定用户的信息/Get information of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0Test() throws ApiException {
        //
        //String secUserId = null;
        //
        //ResponseModel response = api.handlerUserProfileApiV1TiktokAppV2HandlerUserProfileGet_0(secUserId);

        // TODO: test validations
    }
}
