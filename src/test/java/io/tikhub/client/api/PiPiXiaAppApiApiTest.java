/*
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tikhub.client.api;

import io.tikhub.client.ApiException;
import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PiPiXiaAppApiApi
 */
public class PiPiXiaAppApiApiTest {

    private final PiPiXiaAppApiApi api = new PiPiXiaAppApiApi();

    /**
     * 获取话题详情/Get hashtag detail
     *
     * # [中文] ### 用途: - 获取话题详情数据。 ### 参数: - hashtag_id: 话题id，可以从分享链接中获取。 ### 返回: - 话题详情数据  # [English] ### Purpose: - Get hashtag detail data. ### Parameters: - hashtag_id: AKA hashtag id, can be obtained from the share link. ### Return: - Hashtag detail data # [示例/Example] hashtag_id &#x3D; \&quot;129559\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagDetailApiV1PipixiaAppFetchHashtagDetailGetTest() throws ApiException {
        //
        //String hashtagId = null;
        //
        //ResponseModel response = api.fetchHashtagDetailApiV1PipixiaAppFetchHashtagDetailGet(hashtagId);

        // TODO: test validations
    }
    /**
     * 获取话题详情/Get hashtag detail
     *
     * # [中文] ### 用途: - 获取话题详情数据。 ### 参数: - hashtag_id: 话题id，可以从分享链接中获取。 ### 返回: - 话题详情数据  # [English] ### Purpose: - Get hashtag detail data. ### Parameters: - hashtag_id: AKA hashtag id, can be obtained from the share link. ### Return: - Hashtag detail data # [示例/Example] hashtag_id &#x3D; \&quot;129559\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagDetailApiV1PipixiaAppFetchHashtagDetailGet_0Test() throws ApiException {
        //
        //String hashtagId = null;
        //
        //ResponseModel response = api.fetchHashtagDetailApiV1PipixiaAppFetchHashtagDetailGet_0(hashtagId);

        // TODO: test validations
    }
    /**
     * 获取话题作品列表/Get hashtag post list
     *
     * # [中文] ### 用途: - 获取话题作品列表数据。 ### 参数: - hashtag_id: 话题id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 - feed_count: 翻页数量，默认为0，后续每次翻页加1，比如第一页为0，第二页为1，第三页为2，以此类推。 - hashtag_request_type: 话题请求类型，默认为0，可用值如下：     - 0: 热门     - 1: 最新     - 2: 精华 - hashtag_sort_type: 话题排序类型，默认为3，可用值如下：     - 3: 按热度     - 2: 按时间，从新到旧     - 1: 精华 ### 返回: - 话题作品列表数据  # [English] ### Purpose: - Get hashtag post list data. ### Parameters: - hashtag_id: AKA hashtag id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. - feed_count: Page count, default is 0, add 1 for each page, such as 0 for the first page, 1 for the second page, 2 for the third page, and so on. ### Return: - Hashtag post list data  # [示例/Example] hashtag_id &#x3D; \&quot;129559\&quot; cursor &#x3D; \&quot;0\&quot; feed_count &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagPostListApiV1PipixiaAppFetchHashtagPostListGetTest() throws ApiException {
        //
        //String hashtagId = null;
        //
        //String cursor = null;
        //
        //String feedCount = null;
        //
        //String hashtagRequestType = null;
        //
        //String hashtagSortType = null;
        //
        //ResponseModel response = api.fetchHashtagPostListApiV1PipixiaAppFetchHashtagPostListGet(hashtagId, cursor, feedCount, hashtagRequestType, hashtagSortType);

        // TODO: test validations
    }
    /**
     * 获取话题作品列表/Get hashtag post list
     *
     * # [中文] ### 用途: - 获取话题作品列表数据。 ### 参数: - hashtag_id: 话题id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 - feed_count: 翻页数量，默认为0，后续每次翻页加1，比如第一页为0，第二页为1，第三页为2，以此类推。 - hashtag_request_type: 话题请求类型，默认为0，可用值如下：     - 0: 热门     - 1: 最新     - 2: 精华 - hashtag_sort_type: 话题排序类型，默认为3，可用值如下：     - 3: 按热度     - 2: 按时间，从新到旧     - 1: 精华 ### 返回: - 话题作品列表数据  # [English] ### Purpose: - Get hashtag post list data. ### Parameters: - hashtag_id: AKA hashtag id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. - feed_count: Page count, default is 0, add 1 for each page, such as 0 for the first page, 1 for the second page, 2 for the third page, and so on. ### Return: - Hashtag post list data  # [示例/Example] hashtag_id &#x3D; \&quot;129559\&quot; cursor &#x3D; \&quot;0\&quot; feed_count &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagPostListApiV1PipixiaAppFetchHashtagPostListGet_0Test() throws ApiException {
        //
        //String hashtagId = null;
        //
        //String cursor = null;
        //
        //String feedCount = null;
        //
        //String hashtagRequestType = null;
        //
        //String hashtagSortType = null;
        //
        //ResponseModel response = api.fetchHashtagPostListApiV1PipixiaAppFetchHashtagPostListGet_0(hashtagId, cursor, feedCount, hashtagRequestType, hashtagSortType);

        // TODO: test validations
    }
    /**
     * 获取首页推荐/Get home feed
     *
     * # [中文] ### 用途: - 获取首页推荐数据。 ### 参数: - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 首页推荐数据  # [English] ### Purpose: - Get home feed data. ### Parameters: - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - Home feed data  # [示例/Example] cursor &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHomeFeedApiV1PipixiaAppFetchHomeFeedGetTest() throws ApiException {
        //
        //String cursor = null;
        //
        //ResponseModel response = api.fetchHomeFeedApiV1PipixiaAppFetchHomeFeedGet(cursor);

        // TODO: test validations
    }
    /**
     * 获取首页推荐/Get home feed
     *
     * # [中文] ### 用途: - 获取首页推荐数据。 ### 参数: - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 首页推荐数据  # [English] ### Purpose: - Get home feed data. ### Parameters: - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - Home feed data  # [示例/Example] cursor &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHomeFeedApiV1PipixiaAppFetchHomeFeedGet_0Test() throws ApiException {
        //
        //String cursor = null;
        //
        //ResponseModel response = api.fetchHomeFeedApiV1PipixiaAppFetchHomeFeedGet_0(cursor);

        // TODO: test validations
    }
    /**
     * 获取首页短剧推荐/Get home short drama feed
     *
     * # [中文] ### 用途: - 获取首页短剧推荐数据。 ### 参数: - page: 页码，默认为1，每次翻页加1。 ### 返回: - 首页短剧推荐数据  # [English] ### Purpose: - Get home short drama feed data. ### Parameters: - page: Page number, default is 1, add 1 for each page. ### Return: - Home short drama feed data  # [示例/Example] page &#x3D; 1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHomeShortDramaFeedApiV1PipixiaAppFetchHomeShortDramaFeedGetTest() throws ApiException {
        //
        //Integer page = null;
        //
        //ResponseModel response = api.fetchHomeShortDramaFeedApiV1PipixiaAppFetchHomeShortDramaFeedGet(page);

        // TODO: test validations
    }
    /**
     * 获取首页短剧推荐/Get home short drama feed
     *
     * # [中文] ### 用途: - 获取首页短剧推荐数据。 ### 参数: - page: 页码，默认为1，每次翻页加1。 ### 返回: - 首页短剧推荐数据  # [English] ### Purpose: - Get home short drama feed data. ### Parameters: - page: Page number, default is 1, add 1 for each page. ### Return: - Home short drama feed data  # [示例/Example] page &#x3D; 1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHomeShortDramaFeedApiV1PipixiaAppFetchHomeShortDramaFeedGet_0Test() throws ApiException {
        //
        //Integer page = null;
        //
        //ResponseModel response = api.fetchHomeShortDramaFeedApiV1PipixiaAppFetchHomeShortDramaFeedGet_0(page);

        // TODO: test validations
    }
    /**
     * 获取热搜榜单详情/Get hot search board detail
     *
     * # [中文] ### 用途: - 获取热搜榜单详情数据。 ### 参数: - block_type: 榜单类型，可以从&#x60;/fetch_hot_search_board_list&#x60;接口中获取。 ### 返回: - 热搜榜单详情数据  # [English] ### Purpose: - Get hot search board detail data. ### Parameters: - block_type: Board type, can be obtained from the &#x60;/fetch_hot_search_board_list&#x60; interface. ### Return: - Hot search board detail data  # [示例/Example] block_type &#x3D; 12
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotSearchBoardDetailApiV1PipixiaAppFetchHotSearchBoardDetailGetTest() throws ApiException {
        //
        //Integer blockType = null;
        //
        //ResponseModel response = api.fetchHotSearchBoardDetailApiV1PipixiaAppFetchHotSearchBoardDetailGet(blockType);

        // TODO: test validations
    }
    /**
     * 获取热搜榜单详情/Get hot search board detail
     *
     * # [中文] ### 用途: - 获取热搜榜单详情数据。 ### 参数: - block_type: 榜单类型，可以从&#x60;/fetch_hot_search_board_list&#x60;接口中获取。 ### 返回: - 热搜榜单详情数据  # [English] ### Purpose: - Get hot search board detail data. ### Parameters: - block_type: Board type, can be obtained from the &#x60;/fetch_hot_search_board_list&#x60; interface. ### Return: - Hot search board detail data  # [示例/Example] block_type &#x3D; 12
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotSearchBoardDetailApiV1PipixiaAppFetchHotSearchBoardDetailGet_0Test() throws ApiException {
        //
        //Integer blockType = null;
        //
        //ResponseModel response = api.fetchHotSearchBoardDetailApiV1PipixiaAppFetchHotSearchBoardDetailGet_0(blockType);

        // TODO: test validations
    }
    /**
     * 获取热搜榜单列表/Get hot search board list
     *
     * # [中文] ### 用途: - 获取热搜榜单列表数据。 ### 返回: - 热搜榜单列表数据  # [English] ### Purpose: - Get hot search board list data. ### Return: - Hot search board list data  # [示例/Example] 无/None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotSearchBoardListApiV1PipixiaAppFetchHotSearchBoardListGetTest() throws ApiException {
        //
        //ResponseModel response = api.fetchHotSearchBoardListApiV1PipixiaAppFetchHotSearchBoardListGet();

        // TODO: test validations
    }
    /**
     * 获取热搜榜单列表/Get hot search board list
     *
     * # [中文] ### 用途: - 获取热搜榜单列表数据。 ### 返回: - 热搜榜单列表数据  # [English] ### Purpose: - Get hot search board list data. ### Return: - Hot search board list data  # [示例/Example] 无/None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotSearchBoardListApiV1PipixiaAppFetchHotSearchBoardListGet_0Test() throws ApiException {
        //
        //ResponseModel response = api.fetchHotSearchBoardListApiV1PipixiaAppFetchHotSearchBoardListGet_0();

        // TODO: test validations
    }
    /**
     * 获取热搜词条/Get hot search words
     *
     * # [中文] ### 用途: - 获取热搜词条数据。 ### 返回: - 热搜词条数据  # [English] ### Purpose: - Get hot search words data. ### Return: - Hot search words data  # [示例/Example] 无/None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotSearchWordsApiV1PipixiaAppFetchHotSearchWordsGetTest() throws ApiException {
        //
        //ResponseModel response = api.fetchHotSearchWordsApiV1PipixiaAppFetchHotSearchWordsGet();

        // TODO: test validations
    }
    /**
     * 获取热搜词条/Get hot search words
     *
     * # [中文] ### 用途: - 获取热搜词条数据。 ### 返回: - 热搜词条数据  # [English] ### Purpose: - Get hot search words data. ### Return: - Hot search words data  # [示例/Example] 无/None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotSearchWordsApiV1PipixiaAppFetchHotSearchWordsGet_0Test() throws ApiException {
        //
        //ResponseModel response = api.fetchHotSearchWordsApiV1PipixiaAppFetchHotSearchWordsGet_0();

        // TODO: test validations
    }
    /**
     * 增加作品浏览数/Increase post view count
     *
     * # [中文] ### 用途: - 增加作品浏览数。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 ### 返回: - 执行结果  # [English] ### Purpose: - Increase post view count. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. ### Return: - Execution result  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot; cell_type &#x3D; 1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchIncreasePostViewCountApiV1PipixiaAppFetchIncreasePostViewCountGetTest() throws ApiException {
        //
        //String cellId = null;
        //
        //Integer cellType = null;
        //
        //ResponseModel response = api.fetchIncreasePostViewCountApiV1PipixiaAppFetchIncreasePostViewCountGet(cellId, cellType);

        // TODO: test validations
    }
    /**
     * 增加作品浏览数/Increase post view count
     *
     * # [中文] ### 用途: - 增加作品浏览数。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 ### 返回: - 执行结果  # [English] ### Purpose: - Increase post view count. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. ### Return: - Execution result  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot; cell_type &#x3D; 1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchIncreasePostViewCountApiV1PipixiaAppFetchIncreasePostViewCountGet_0Test() throws ApiException {
        //
        //String cellId = null;
        //
        //Integer cellType = null;
        //
        //ResponseModel response = api.fetchIncreasePostViewCountApiV1PipixiaAppFetchIncreasePostViewCountGet_0(cellId, cellType);

        // TODO: test validations
    }
    /**
     * 获取作品评论列表/Get post comment list
     *
     * # [中文] ### 用途: - 获取作品的评论列表。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 - offset: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;offset&#x60; Key中获取对应值。 ### 返回: - 作品评论列表  # [English] ### Purpose: - Get the comment list of a post. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. - offset: Page cursor, default is 0, get the corresponding value from the &#x60;offset&#x60; Key in the previous page. ### Return: - Post comment list  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot; cell_type &#x3D; 1 offset &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostCommentListApiV1PipixiaAppFetchPostCommentListGetTest() throws ApiException {
        //
        //String cellId = null;
        //
        //Integer cellType = null;
        //
        //String offset = null;
        //
        //ResponseModel response = api.fetchPostCommentListApiV1PipixiaAppFetchPostCommentListGet(cellId, cellType, offset);

        // TODO: test validations
    }
    /**
     * 获取作品评论列表/Get post comment list
     *
     * # [中文] ### 用途: - 获取作品的评论列表。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 - offset: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;offset&#x60; Key中获取对应值。 ### 返回: - 作品评论列表  # [English] ### Purpose: - Get the comment list of a post. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. - offset: Page cursor, default is 0, get the corresponding value from the &#x60;offset&#x60; Key in the previous page. ### Return: - Post comment list  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot; cell_type &#x3D; 1 offset &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostCommentListApiV1PipixiaAppFetchPostCommentListGet_0Test() throws ApiException {
        //
        //String cellId = null;
        //
        //Integer cellType = null;
        //
        //String offset = null;
        //
        //ResponseModel response = api.fetchPostCommentListApiV1PipixiaAppFetchPostCommentListGet_0(cellId, cellType, offset);

        // TODO: test validations
    }
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. ### Return: - Video data  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostDetailApiV1PipixiaAppFetchPostDetailGetTest() throws ApiException {
        //
        //String cellId = null;
        //
        //Integer cellType = null;
        //
        //ResponseModel response = api.fetchPostDetailApiV1PipixiaAppFetchPostDetailGet(cellId, cellType);

        // TODO: test validations
    }
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. ### Return: - Video data  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostDetailApiV1PipixiaAppFetchPostDetailGet_0Test() throws ApiException {
        //
        //String cellId = null;
        //
        //Integer cellType = null;
        //
        //ResponseModel response = api.fetchPostDetailApiV1PipixiaAppFetchPostDetailGet_0(cellId, cellType);

        // TODO: test validations
    }
    /**
     * 获取作品统计数据/Get post statistics
     *
     * # [中文] ### 用途: - 获取单个作品的统计数据，如点赞数、评论数、转发数等。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistics of a single post, such as the number of likes, comments, reposts, etc. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. ### Return: - Post statistics  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostStatisticsApiV1PipixiaAppFetchPostStatisticsGetTest() throws ApiException {
        //
        //String cellId = null;
        //
        //ResponseModel response = api.fetchPostStatisticsApiV1PipixiaAppFetchPostStatisticsGet(cellId);

        // TODO: test validations
    }
    /**
     * 获取作品统计数据/Get post statistics
     *
     * # [中文] ### 用途: - 获取单个作品的统计数据，如点赞数、评论数、转发数等。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistics of a single post, such as the number of likes, comments, reposts, etc. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. ### Return: - Post statistics  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostStatisticsApiV1PipixiaAppFetchPostStatisticsGet_0Test() throws ApiException {
        //
        //String cellId = null;
        //
        //ResponseModel response = api.fetchPostStatisticsApiV1PipixiaAppFetchPostStatisticsGet_0(cellId);

        // TODO: test validations
    }
    /**
     * 搜索接口/Search API
     *
     * # [中文] ### 用途: - 搜索接口，支持搜索用户、作品等。 ### 参数: - keyword: 搜索关键词。 - offset: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;offset&#x60; Key中获取对应值。 - search_type: 搜索类型，可用值如下：     - 1: 综合     - 8: 热门     - 9: 新鲜     - 2：视频     - 3：图文     - 4：用户     - 5：话题 ### 返回: - 搜索结果  # [English] ### Purpose: - Search API, support search user, post, etc. ### Parameters: - keyword: Search keyword. - offset: Page cursor, default is 0, get the corresponding value from the &#x60;offset&#x60; Key in the previous page. - search_type: Search type, available values are as follows:     - 1: Comprehensive     - 8: Hot     - 9: Fresh     - 2: Video     - 3: Photo     - 4: User     - 5: Hashtag ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;皮皮虾\&quot; offset &#x3D; \&quot;0\&quot; search_type &#x3D; \&quot;1\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchApiV1PipixiaAppFetchSearchGetTest() throws ApiException {
        //
        //String keyword = null;
        //
        //String offset = null;
        //
        //String searchType = null;
        //
        //ResponseModel response = api.fetchSearchApiV1PipixiaAppFetchSearchGet(keyword, offset, searchType);

        // TODO: test validations
    }
    /**
     * 搜索接口/Search API
     *
     * # [中文] ### 用途: - 搜索接口，支持搜索用户、作品等。 ### 参数: - keyword: 搜索关键词。 - offset: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;offset&#x60; Key中获取对应值。 - search_type: 搜索类型，可用值如下：     - 1: 综合     - 8: 热门     - 9: 新鲜     - 2：视频     - 3：图文     - 4：用户     - 5：话题 ### 返回: - 搜索结果  # [English] ### Purpose: - Search API, support search user, post, etc. ### Parameters: - keyword: Search keyword. - offset: Page cursor, default is 0, get the corresponding value from the &#x60;offset&#x60; Key in the previous page. - search_type: Search type, available values are as follows:     - 1: Comprehensive     - 8: Hot     - 9: Fresh     - 2: Video     - 3: Photo     - 4: User     - 5: Hashtag ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;皮皮虾\&quot; offset &#x3D; \&quot;0\&quot; search_type &#x3D; \&quot;1\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchApiV1PipixiaAppFetchSearchGet_0Test() throws ApiException {
        //
        //String keyword = null;
        //
        //String offset = null;
        //
        //String searchType = null;
        //
        //ResponseModel response = api.fetchSearchApiV1PipixiaAppFetchSearchGet_0(keyword, offset, searchType);

        // TODO: test validations
    }
    /**
     * 生成短连接/Generate short URL
     *
     * # [中文] ### 用途: - 生成短连接。 ### 参数: - original_url: 原始链接，可以是任意链接。 ### 返回: - 短连接  # [English] ### Purpose: - Generate short URL. ### Parameters: - original_url: Original URL, can be any link. ### Return: - Short URL  # [示例/Example] original_url &#x3D; \&quot;https://h5.pipix.com/item/7385813877985909043\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShortUrlApiV1PipixiaAppFetchShortUrlGetTest() throws ApiException {
        //
        //String originalUrl = null;
        //
        //ResponseModel response = api.fetchShortUrlApiV1PipixiaAppFetchShortUrlGet(originalUrl);

        // TODO: test validations
    }
    /**
     * 生成短连接/Generate short URL
     *
     * # [中文] ### 用途: - 生成短连接。 ### 参数: - original_url: 原始链接，可以是任意链接。 ### 返回: - 短连接  # [English] ### Purpose: - Generate short URL. ### Parameters: - original_url: Original URL, can be any link. ### Return: - Short URL  # [示例/Example] original_url &#x3D; \&quot;https://h5.pipix.com/item/7385813877985909043\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShortUrlApiV1PipixiaAppFetchShortUrlGet_0Test() throws ApiException {
        //
        //String originalUrl = null;
        //
        //ResponseModel response = api.fetchShortUrlApiV1PipixiaAppFetchShortUrlGet_0(originalUrl);

        // TODO: test validations
    }
    /**
     * 获取用户粉丝列表/Get user follower list
     *
     * # [中文] ### 用途: - 获取用户的粉丝列表。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Get user&#39;s follower list. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - User follower list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowerListApiV1PipixiaAppFetchUserFollowerListGetTest() throws ApiException {
        //
        //String userId = null;
        //
        //String cursor = null;
        //
        //ResponseModel response = api.fetchUserFollowerListApiV1PipixiaAppFetchUserFollowerListGet(userId, cursor);

        // TODO: test validations
    }
    /**
     * 获取用户粉丝列表/Get user follower list
     *
     * # [中文] ### 用途: - 获取用户的粉丝列表。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Get user&#39;s follower list. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - User follower list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowerListApiV1PipixiaAppFetchUserFollowerListGet_0Test() throws ApiException {
        //
        //String userId = null;
        //
        //String cursor = null;
        //
        //ResponseModel response = api.fetchUserFollowerListApiV1PipixiaAppFetchUserFollowerListGet_0(userId, cursor);

        // TODO: test validations
    }
    /**
     * 获取用户关注列表/Get user following list
     *
     * # [中文] ### 用途: - 获取用户的关注列表。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Get user&#39;s following list. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - User following list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowingListApiV1PipixiaAppFetchUserFollowingListGetTest() throws ApiException {
        //
        //String userId = null;
        //
        //String cursor = null;
        //
        //ResponseModel response = api.fetchUserFollowingListApiV1PipixiaAppFetchUserFollowingListGet(userId, cursor);

        // TODO: test validations
    }
    /**
     * 获取用户关注列表/Get user following list
     *
     * # [中文] ### 用途: - 获取用户的关注列表。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Get user&#39;s following list. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - User following list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowingListApiV1PipixiaAppFetchUserFollowingListGet_0Test() throws ApiException {
        //
        //String userId = null;
        //
        //String cursor = null;
        //
        //ResponseModel response = api.fetchUserFollowingListApiV1PipixiaAppFetchUserFollowingListGet_0(userId, cursor);

        // TODO: test validations
    }
    /**
     * 获取用户信息/Get user information
     *
     * # [中文] ### 用途: - 获取用户信息，如昵称、性别、头像等。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information, such as nickname and avatar. ### Parameters: - user_id: AKA user id, can be obtained from the share link. ### Return: - User information  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserInfoApiV1PipixiaAppFetchUserInfoGetTest() throws ApiException {
        //
        //String userId = null;
        //
        //ResponseModel response = api.fetchUserInfoApiV1PipixiaAppFetchUserInfoGet(userId);

        // TODO: test validations
    }
    /**
     * 获取用户信息/Get user information
     *
     * # [中文] ### 用途: - 获取用户信息，如昵称、性别、头像等。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information, such as nickname and avatar. ### Parameters: - user_id: AKA user id, can be obtained from the share link. ### Return: - User information  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserInfoApiV1PipixiaAppFetchUserInfoGet_0Test() throws ApiException {
        //
        //String userId = null;
        //
        //ResponseModel response = api.fetchUserInfoApiV1PipixiaAppFetchUserInfoGet_0(userId);

        // TODO: test validations
    }
    /**
     * 获取用户作品列表/Get user post list
     *
     * # [中文] ### 用途: - 获取用户作品列表，如视频、图文等。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 - feed_count: 翻页数量，默认为0，后续每次翻页加1，比如第一页为0，第二页为1，第三页为2，以此类推。 ### 返回: - 用户作品列表  # [English] ### Purpose: - Get user post list, such as videos, photos, etc. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. - feed_count: Page count, default is 0, add 1 for each page, such as 0 for the first page, 1 for the second page, 2 for the third page, and so on. ### Return: - User post list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot; feed_count &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostListApiV1PipixiaAppFetchUserPostListGetTest() throws ApiException {
        //
        //String userId = null;
        //
        //String cursor = null;
        //
        //String feedCount = null;
        //
        //ResponseModel response = api.fetchUserPostListApiV1PipixiaAppFetchUserPostListGet(userId, cursor, feedCount);

        // TODO: test validations
    }
    /**
     * 获取用户作品列表/Get user post list
     *
     * # [中文] ### 用途: - 获取用户作品列表，如视频、图文等。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 - feed_count: 翻页数量，默认为0，后续每次翻页加1，比如第一页为0，第二页为1，第三页为2，以此类推。 ### 返回: - 用户作品列表  # [English] ### Purpose: - Get user post list, such as videos, photos, etc. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. - feed_count: Page count, default is 0, add 1 for each page, such as 0 for the first page, 1 for the second page, 2 for the third page, and so on. ### Return: - User post list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot; feed_count &#x3D; \&quot;0\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostListApiV1PipixiaAppFetchUserPostListGet_0Test() throws ApiException {
        //
        //String userId = null;
        //
        //String cursor = null;
        //
        //String feedCount = null;
        //
        //ResponseModel response = api.fetchUserPostListApiV1PipixiaAppFetchUserPostListGet_0(userId, cursor, feedCount);

        // TODO: test validations
    }
}
