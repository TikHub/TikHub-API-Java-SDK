/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;
import org.openapitools.client.model.TikTokAppV3ContentTranslate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TikTokAppV3ApiApi
 */
@Ignore
public class TikTokAppV3ApiApiTest {

    private final TikTokAppV3ApiApi api = new TikTokAppV3ApiApi();

    
    /**
     * 检测直播间是否在线/Check if live room is online
     *
     * # [中文] ### 用途: - 检测直播间是否在线 - 直播间的Room ID可以通过直播间链接从&#x60;/api/v1/tiktok/web/get_live_room_id&#x60;接口获取 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online - The Room ID of the live room can be obtained from the &#x60;/api/v1/tiktok/web/get_live_room_id&#x60; interface through the live room link ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkLiveRoomOnlineApiV1TiktokAppV3CheckLiveRoomOnlineGetTest() throws ApiException {
        String roomId = null;
        ResponseModel response = api.checkLiveRoomOnlineApiV1TiktokAppV3CheckLiveRoomOnlineGet(roomId);

        // TODO: test validations
    }
    
    /**
     * 检测直播间是否在线/Check if live room is online
     *
     * # [中文] ### 用途: - 检测直播间是否在线 - 直播间的Room ID可以通过直播间链接从&#x60;/api/v1/tiktok/web/get_live_room_id&#x60;接口获取 ### 参数: - room_id: 直播间id ### 返回: - 是否在线  # [English] ### Purpose: - Check if live room is online - The Room ID of the live room can be obtained from the &#x60;/api/v1/tiktok/web/get_live_room_id&#x60; interface through the live room link ### Parameters: - room_id: Live room id ### Return: - Whether online  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkLiveRoomOnlineApiV1TiktokAppV3CheckLiveRoomOnlineGet_0Test() throws ApiException {
        String roomId = null;
        ResponseModel response = api.checkLiveRoomOnlineApiV1TiktokAppV3CheckLiveRoomOnlineGet_0(roomId);

        // TODO: test validations
    }
    
    /**
     * 获取内容翻译数据/Get content translation data
     *
     * # [中文] ### 用途: - 获取内容翻译数据 ### 参数: - trg_lang: 目标语言     - zh-Hans: 简体中文     - zh-Hant: 繁体中文     - en: 英语     - ja: 日语     - ko: 韩语     - fr: 法语     - de: 德语     - ru: 俄语     - es: 西班牙语     - pt: 葡萄牙语     - vi: 越南语     - th: 泰语     - id: 印尼语     - ar: 阿拉伯语     - it: 意大利语     - tr: 土耳其语     - he: 希伯来语     - pl: 波兰语     - nl: 荷兰语     - sv: 瑞典语     - da: 丹麦语     - fi: 芬兰语     - no: 挪威语     - cs: 捷克语     - hu: 匈牙利语 - src_content: 源内容，也就是需要翻译的内容，长度不超过5000个字符，如果超过5000个字符，只会翻译前5000个字符。 ### 返回: - 内容翻译数据  # [English] ### Purpose: - Get content translation data ### Parameters: - trg_lang: Target language     - zh-Hans: Simplified Chinese     - zh-Hant: Traditional Chinese     - en: English     - ja: Japanese     - ko: Korean     - fr: French     - de: German     - ru: Russian     - es: Spanish     - pt: Portuguese     - vi: Vietnamese     - th: Thai     - id: Indonesian     - ar: Arabic     - it: Italian     - tr: Turkish     - he: Hebrew     - pl: Polish     - nl: Dutch     - sv: Swedish     - da: Danish     - fi: Finnish     - no: Norwegian     - cs: Czech     - hu: Hungarian - src_content: Source content, that is, the content that needs to be translated, the length does not exceed 5000 characters, if it exceeds 5000 characters, only the first 5000 characters will be translated. ### Return: - Content translation data  # [示例/Example] trg_lang &#x3D; \&quot;zh-Hans\&quot; src_content &#x3D; \&quot;Hello, welcome to TikHub!\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchContentTranslateApiV1TiktokAppV3FetchContentTranslatePostTest() throws ApiException {
        TikTokAppV3ContentTranslate tikTokAppV3ContentTranslate = null;
        ResponseModel response = api.fetchContentTranslateApiV1TiktokAppV3FetchContentTranslatePost(tikTokAppV3ContentTranslate);

        // TODO: test validations
    }
    
    /**
     * 获取内容翻译数据/Get content translation data
     *
     * # [中文] ### 用途: - 获取内容翻译数据 ### 参数: - trg_lang: 目标语言     - zh-Hans: 简体中文     - zh-Hant: 繁体中文     - en: 英语     - ja: 日语     - ko: 韩语     - fr: 法语     - de: 德语     - ru: 俄语     - es: 西班牙语     - pt: 葡萄牙语     - vi: 越南语     - th: 泰语     - id: 印尼语     - ar: 阿拉伯语     - it: 意大利语     - tr: 土耳其语     - he: 希伯来语     - pl: 波兰语     - nl: 荷兰语     - sv: 瑞典语     - da: 丹麦语     - fi: 芬兰语     - no: 挪威语     - cs: 捷克语     - hu: 匈牙利语 - src_content: 源内容，也就是需要翻译的内容，长度不超过5000个字符，如果超过5000个字符，只会翻译前5000个字符。 ### 返回: - 内容翻译数据  # [English] ### Purpose: - Get content translation data ### Parameters: - trg_lang: Target language     - zh-Hans: Simplified Chinese     - zh-Hant: Traditional Chinese     - en: English     - ja: Japanese     - ko: Korean     - fr: French     - de: German     - ru: Russian     - es: Spanish     - pt: Portuguese     - vi: Vietnamese     - th: Thai     - id: Indonesian     - ar: Arabic     - it: Italian     - tr: Turkish     - he: Hebrew     - pl: Polish     - nl: Dutch     - sv: Swedish     - da: Danish     - fi: Finnish     - no: Norwegian     - cs: Czech     - hu: Hungarian - src_content: Source content, that is, the content that needs to be translated, the length does not exceed 5000 characters, if it exceeds 5000 characters, only the first 5000 characters will be translated. ### Return: - Content translation data  # [示例/Example] trg_lang &#x3D; \&quot;zh-Hans\&quot; src_content &#x3D; \&quot;Hello, welcome to TikHub!\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchContentTranslateApiV1TiktokAppV3FetchContentTranslatePost_0Test() throws ApiException {
        TikTokAppV3ContentTranslate tikTokAppV3ContentTranslate = null;
        ResponseModel response = api.fetchContentTranslateApiV1TiktokAppV3FetchContentTranslatePost_0(tikTokAppV3ContentTranslate);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchGeneralSearchResultApiV1TiktokAppV3FetchGeneralSearchResultGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        Integer sortType = null;
        Integer publishTime = null;
        ResponseModel response = api.fetchGeneralSearchResultApiV1TiktokAppV3FetchGeneralSearchResultGet(keyword, offset, count, sortType, publishTime);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的综合搜索结果/Get comprehensive search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的综合搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 综合搜索结果  # [English] ### Purpose: - Get comprehensive search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Comprehensive search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchGeneralSearchResultApiV1TiktokAppV3FetchGeneralSearchResultGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        Integer sortType = null;
        Integer publishTime = null;
        ResponseModel response = api.fetchGeneralSearchResultApiV1TiktokAppV3FetchGeneralSearchResultGet_0(keyword, offset, count, sortType, publishTime);

        // TODO: test validations
    }
    
    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     *
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagDetailApiV1TiktokAppV3FetchHashtagDetailGetTest() throws ApiException {
        String chId = null;
        ResponseModel response = api.fetchHashtagDetailApiV1TiktokAppV3FetchHashtagDetailGet(chId);

        // TODO: test validations
    }
    
    /**
     * 获取指定话题的详情数据/Get details of specified hashtag
     *
     * # [中文] ### 用途: - 获取指定话题的详情数据 ### 参数: - ch_id: 话题id ### 返回: - 话题详情数据  # [English] ### Purpose: - Get details of specified hashtag ### Parameters: - ch_id: Hashtag id ### Return: - Hashtag details data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagDetailApiV1TiktokAppV3FetchHashtagDetailGet_0Test() throws ApiException {
        String chId = null;
        ResponseModel response = api.fetchHashtagDetailApiV1TiktokAppV3FetchHashtagDetailGet_0(chId);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的话题搜索结果/Get hashtag search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagSearchResultApiV1TiktokAppV3FetchHashtagSearchResultGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchHashtagSearchResultApiV1TiktokAppV3FetchHashtagSearchResultGet(keyword, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的话题搜索结果/Get hashtag search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的话题搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 话题搜索结果  # [English] ### Purpose: - Get hashtag search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Hashtag search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagSearchResultApiV1TiktokAppV3FetchHashtagSearchResultGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchHashtagSearchResultApiV1TiktokAppV3FetchHashtagSearchResultGet_0(keyword, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     *
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagVideoListApiV1TiktokAppV3FetchHashtagVideoListGetTest() throws ApiException {
        String chId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchHashtagVideoListApiV1TiktokAppV3FetchHashtagVideoListGet(chId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定话题的作品数据/Get video list of specified hashtag
     *
     * # [中文] ### 用途: - 获取指定话题的作品数据 ### 参数: - ch_id: 话题id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 话题作品数据  # [English] ### Purpose: - Get video list of specified hashtag ### Parameters: - ch_id: Hashtag id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Hashtag video list data  # [示例/Example] ch_id &#x3D; \&quot;7551\&quot; cursor &#x3D; 0 sort_type &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHashtagVideoListApiV1TiktokAppV3FetchHashtagVideoListGet_0Test() throws ApiException {
        String chId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchHashtagVideoListApiV1TiktokAppV3FetchHashtagVideoListGet_0(chId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data
     *
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHomeFeedApiV1TiktokAppV3FetchHomeFeedGetTest() throws ApiException {
        ResponseModel response = api.fetchHomeFeedApiV1TiktokAppV3FetchHomeFeedGet();

        // TODO: test validations
    }
    
    /**
     * 获取主页视频推荐数据/Get home feed(recommend) video data
     *
     * # [中文] ### 用途: - 获取主页视频推荐数据 ### 参数: - 无 ### 返回: - 视频推荐数据  # [English] ### Purpose: - Get home feed(recommend) video data ### Parameters: - None ### Return: - Video recommend data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHomeFeedApiV1TiktokAppV3FetchHomeFeedGet_0Test() throws ApiException {
        ResponseModel response = api.fetchHomeFeedApiV1TiktokAppV3FetchHomeFeedGet_0();

        // TODO: test validations
    }
    
    /**
     * 获取直播每日榜单数据/Get live daily rank data
     *
     * # [中文] ### 用途: - 获取直播每日榜单数据 ### 参数: - anchor_id: 主播id，可以从直播间信息接口获取，使用默认值即可，该参数会影响返回的数据，你可以尝试不同直播间的主播id。 - room_id: 直播间id，可以从直播间信息接口获取，使用默认值即可，该参数会影响返回的数据，你可以尝试不同直播间的id。 - rank_type: 榜单类型     - 8: 每日排行榜     - 10: 游戏排行榜     - 15: 人气直播榜     - 16: D5段位榜 - region_type: 地区类型，使用默认值即可，具体含义不明。 - gap_interval: 时间间隔，使用默认值代表当天，使用-1代表排名记录。 ### 返回: - 直播每日榜单数据  # [English] ### Purpose: - Get live daily rank data ### Parameters: - anchor_id: Anchor id, which can be obtained from the live room information interface, use the default value, this parameter will affect the returned data, you can try different anchor ids of different live rooms. - room_id: Live room id, which can be obtained from the live room information interface, use the default value, this parameter will affect the returned data, you can try different room ids of different live rooms. - rank_type: Rank type     - 8: Daily ranking list     - 10: Game ranking list     - 15: Popular live broadcast list     - 16: D5 rank list - region_type: Region type, use the default value, the specific meaning is unknown. - gap_interval: Time interval, use the default value to represent the current day, use -1 to represent the ranking record. ### Return: - Live daily rank data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveDailyRankApiV1TiktokAppV3FetchLiveDailyRankGetTest() throws ApiException {
        String anchorId = null;
        String roomId = null;
        Integer rankType = null;
        Integer regionType = null;
        Integer gapInterval = null;
        ResponseModel response = api.fetchLiveDailyRankApiV1TiktokAppV3FetchLiveDailyRankGet(anchorId, roomId, rankType, regionType, gapInterval);

        // TODO: test validations
    }
    
    /**
     * 获取直播每日榜单数据/Get live daily rank data
     *
     * # [中文] ### 用途: - 获取直播每日榜单数据 ### 参数: - anchor_id: 主播id，可以从直播间信息接口获取，使用默认值即可，该参数会影响返回的数据，你可以尝试不同直播间的主播id。 - room_id: 直播间id，可以从直播间信息接口获取，使用默认值即可，该参数会影响返回的数据，你可以尝试不同直播间的id。 - rank_type: 榜单类型     - 8: 每日排行榜     - 10: 游戏排行榜     - 15: 人气直播榜     - 16: D5段位榜 - region_type: 地区类型，使用默认值即可，具体含义不明。 - gap_interval: 时间间隔，使用默认值代表当天，使用-1代表排名记录。 ### 返回: - 直播每日榜单数据  # [English] ### Purpose: - Get live daily rank data ### Parameters: - anchor_id: Anchor id, which can be obtained from the live room information interface, use the default value, this parameter will affect the returned data, you can try different anchor ids of different live rooms. - room_id: Live room id, which can be obtained from the live room information interface, use the default value, this parameter will affect the returned data, you can try different room ids of different live rooms. - rank_type: Rank type     - 8: Daily ranking list     - 10: Game ranking list     - 15: Popular live broadcast list     - 16: D5 rank list - region_type: Region type, use the default value, the specific meaning is unknown. - gap_interval: Time interval, use the default value to represent the current day, use -1 to represent the ranking record. ### Return: - Live daily rank data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveDailyRankApiV1TiktokAppV3FetchLiveDailyRankGet_0Test() throws ApiException {
        String anchorId = null;
        String roomId = null;
        Integer rankType = null;
        Integer regionType = null;
        Integer gapInterval = null;
        ResponseModel response = api.fetchLiveDailyRankApiV1TiktokAppV3FetchLiveDailyRankGet_0(anchorId, roomId, rankType, regionType, gapInterval);

        // TODO: test validations
    }
    
    /**
     * 获取直播间排行榜数据/Get live room ranking list
     *
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveRankingListApiV1TiktokAppV3FetchLiveRankingListGetTest() throws ApiException {
        String roomId = null;
        String anchorId = null;
        ResponseModel response = api.fetchLiveRankingListApiV1TiktokAppV3FetchLiveRankingListGet(roomId, anchorId);

        // TODO: test validations
    }
    
    /**
     * 获取直播间排行榜数据/Get live room ranking list
     *
     * # [中文] ### 用途: - 获取直播间内观众的排行榜数据 ### 参数: - room_id: 直播间id - anchor_id: 主播id ### 返回: - 排行榜数据  # [English] ### Purpose: - Get ranking list of audience in live room ### Parameters: - room_id: Live room id - anchor_id: Anchor id ### Return: - Ranking list data  # [示例/Example] room_id &#x3D; \&quot;7358603858249009962\&quot; anchor_id &#x3D; \&quot;7222941468722758702\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveRankingListApiV1TiktokAppV3FetchLiveRankingListGet_0Test() throws ApiException {
        String roomId = null;
        String anchorId = null;
        ResponseModel response = api.fetchLiveRankingListApiV1TiktokAppV3FetchLiveRankingListGet_0(roomId, anchorId);

        // TODO: test validations
    }
    
    /**
     * 获取指定直播间的数据/Get data of specified live room
     *
     * # [中文] ### 用途: - 获取指定直播间的数据 ### 参数: - room_id: 直播间id ### 返回: - 直播间数据  # [English] ### Purpose: - Get data of specified live room ### Parameters: - room_id: Live room id ### Return: - Live room data  # [示例/Example] room_id &#x3D; \&quot;7385461256746060575\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveRoomInfoApiV1TiktokAppV3FetchLiveRoomInfoGetTest() throws ApiException {
        String roomId = null;
        ResponseModel response = api.fetchLiveRoomInfoApiV1TiktokAppV3FetchLiveRoomInfoGet(roomId);

        // TODO: test validations
    }
    
    /**
     * 获取指定直播间的数据/Get data of specified live room
     *
     * # [中文] ### 用途: - 获取指定直播间的数据 ### 参数: - room_id: 直播间id ### 返回: - 直播间数据  # [English] ### Purpose: - Get data of specified live room ### Parameters: - room_id: Live room id ### Return: - Live room data  # [示例/Example] room_id &#x3D; \&quot;7385461256746060575\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveRoomInfoApiV1TiktokAppV3FetchLiveRoomInfoGet_0Test() throws ApiException {
        String roomId = null;
        ResponseModel response = api.fetchLiveRoomInfoApiV1TiktokAppV3FetchLiveRoomInfoGet_0(roomId);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveSearchResultApiV1TiktokAppV3FetchLiveSearchResultGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchLiveSearchResultApiV1TiktokAppV3FetchLiveSearchResultGet(keyword, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的直播搜索结果/Get live search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的直播搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 直播搜索结果  # [English] ### Purpose: - Get live search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Live search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveSearchResultApiV1TiktokAppV3FetchLiveSearchResultGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchLiveSearchResultApiV1TiktokAppV3FetchLiveSearchResultGet_0(keyword, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取地点搜索结果/Get location search results
     *
     * # [中文] ### 用途: - 获取地点搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 地点搜索结果  # [English] ### Purpose: - Get location search results ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Location search results  # [示例/Example] keyword &#x3D; \&quot;Shanghai\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLocationSearchApiV1TiktokAppV3FetchLocationSearchGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchLocationSearchApiV1TiktokAppV3FetchLocationSearchGet(keyword, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取地点搜索结果/Get location search results
     *
     * # [中文] ### 用途: - 获取地点搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 地点搜索结果  # [English] ### Purpose: - Get location search results ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Location search results  # [示例/Example] keyword &#x3D; \&quot;Shanghai\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLocationSearchApiV1TiktokAppV3FetchLocationSearchGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchLocationSearchApiV1TiktokAppV3FetchLocationSearchGet_0(keyword, offset, count);

        // TODO: test validations
    }
    
    /**
     * 批量获取视频信息/Batch Get Video Information
     *
     * # [中文] ### 用途: - 批量获取视频信息，支持图文、视频等，一次性最多支持10个视频，此接口收费固定价格为0.001$ * 10 &#x3D; 0.01$一次。 ### 参数: - aweme_ids: 作品id列表，最多支持10个作品id。 ### 返回: - 作品数据  # [English] ### Purpose: - Batch Get Video Information, support photo, video, etc., up to 10 videos at a time, this interface charges a fixed price of 0.001$ * 10 &#x3D; 0.01$ each time. ### Parameters: - aweme_ids: List of video ids, up to 10 video ids are supported. ### Return: - Video data  # [示例/Example] aweme_ids &#x3D; [         \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;,         \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;,     ]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMultiVideoApiV1TiktokAppV3FetchMultiVideoPostTest() throws ApiException {
        List<String> requestBody = null;
        ResponseModel response = api.fetchMultiVideoApiV1TiktokAppV3FetchMultiVideoPost(requestBody);

        // TODO: test validations
    }
    
    /**
     * 批量获取视频信息/Batch Get Video Information
     *
     * # [中文] ### 用途: - 批量获取视频信息，支持图文、视频等，一次性最多支持10个视频，此接口收费固定价格为0.001$ * 10 &#x3D; 0.01$一次。 ### 参数: - aweme_ids: 作品id列表，最多支持10个作品id。 ### 返回: - 作品数据  # [English] ### Purpose: - Batch Get Video Information, support photo, video, etc., up to 10 videos at a time, this interface charges a fixed price of 0.001$ * 10 &#x3D; 0.01$ each time. ### Parameters: - aweme_ids: List of video ids, up to 10 video ids are supported. ### Return: - Video data  # [示例/Example] aweme_ids &#x3D; [         \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;,         \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;, \&quot;7339393672959757570\&quot;,     ]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMultiVideoApiV1TiktokAppV3FetchMultiVideoPost_0Test() throws ApiException {
        List<String> requestBody = null;
        ResponseModel response = api.fetchMultiVideoApiV1TiktokAppV3FetchMultiVideoPost_0(requestBody);

        // TODO: test validations
    }
    
    /**
     * 获取指定音乐的详情数据/Get details of specified music
     *
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicDetailApiV1TiktokAppV3FetchMusicDetailGetTest() throws ApiException {
        String musicId = null;
        ResponseModel response = api.fetchMusicDetailApiV1TiktokAppV3FetchMusicDetailGet(musicId);

        // TODO: test validations
    }
    
    /**
     * 获取指定音乐的详情数据/Get details of specified music
     *
     * # [中文] ### 用途: - 获取指定音乐的详情数据 ### 参数: - music_id: 音乐id ### 返回: - 音乐详情数据  # [English] ### Purpose: - Get details of specified music ### Parameters: - music_id: Music id ### Return: - Music details data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicDetailApiV1TiktokAppV3FetchMusicDetailGet_0Test() throws ApiException {
        String musicId = null;
        ResponseModel response = api.fetchMusicDetailApiV1TiktokAppV3FetchMusicDetailGet_0(musicId);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的音乐搜索结果/Get music search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicSearchResultApiV1TiktokAppV3FetchMusicSearchResultGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchMusicSearchResultApiV1TiktokAppV3FetchMusicSearchResultGet(keyword, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的音乐搜索结果/Get music search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的音乐搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 ### 返回: - 音乐搜索结果  # [English] ### Purpose: - Get music search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number ### Return: - Music search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicSearchResultApiV1TiktokAppV3FetchMusicSearchResultGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchMusicSearchResultApiV1TiktokAppV3FetchMusicSearchResultGet_0(keyword, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     *
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicVideoListApiV1TiktokAppV3FetchMusicVideoListGetTest() throws ApiException {
        String musicId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchMusicVideoListApiV1TiktokAppV3FetchMusicVideoListGet(musicId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定音乐的视频列表数据/Get video list of specified music
     *
     * # [中文] ### 用途: - 获取指定音乐的视频列表数据 ### 参数: - music_id: 音乐id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 音乐视频列表数据  # [English] ### Purpose: - Get video list of specified music ### Parameters: - music_id: Music id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Music video list data  # [示例/Example] music_id &#x3D; \&quot;6943027371519772674\&quot; cursor &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchMusicVideoListApiV1TiktokAppV3FetchMusicVideoListGet_0Test() throws ApiException {
        String musicId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchMusicVideoListApiV1TiktokAppV3FetchMusicVideoListGet_0(musicId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoApiV1TiktokAppV3FetchOneVideoGetTest() throws ApiException {
        String awemeId = null;
        ResponseModel response = api.fetchOneVideoApiV1TiktokAppV3FetchOneVideoGet(awemeId);

        // TODO: test validations
    }
    
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - aweme_id: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - aweme_id: Video id ### Return: - Video data  # [示例/Example] aweme_id &#x3D; \&quot;7350810998023949599\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoApiV1TiktokAppV3FetchOneVideoGet_0Test() throws ApiException {
        String awemeId = null;
        ResponseModel response = api.fetchOneVideoApiV1TiktokAppV3FetchOneVideoGet_0(awemeId);

        // TODO: test validations
    }
    
    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     *
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoByShareUrlApiV1TiktokAppV3FetchOneVideoByShareUrlGetTest() throws ApiException {
        String shareUrl = null;
        ResponseModel response = api.fetchOneVideoByShareUrlApiV1TiktokAppV3FetchOneVideoByShareUrlGet(shareUrl);

        // TODO: test validations
    }
    
    /**
     * 根据分享链接获取单个作品数据/Get single video data by sharing link
     *
     * # [中文] ### 用途: - 根据分享链接获取单个作品数据 ### 参数: - share_url: 分享链接 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data by sharing link ### Parameters: - share_url: Share link ### Return: - Video data  # [示例/Example] share_url &#x3D; \&quot;https://www.tiktok.com/t/ZTFNEj8Hk/\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoByShareUrlApiV1TiktokAppV3FetchOneVideoByShareUrlGet_0Test() throws ApiException {
        String shareUrl = null;
        ResponseModel response = api.fetchOneVideoByShareUrlApiV1TiktokAppV3FetchOneVideoByShareUrlGet_0(shareUrl);

        // TODO: test validations
    }
    
    /**
     * 获取商品详情数据/Get product detail data
     *
     * # [中文] ### 用途: - 获取商品详情数据 ### 参数: - product_id: 商品id，有时候需要从product_id_str字段中获取。 ### 返回: - 商品详情数据  # [English] ### Purpose: - Get product detail data ### Parameters: - product_id: Product id, sometimes need to get from the product_id_str field. ### Return: - Product detail data  # [示例/Example] product_id &#x3D; \&quot;1729395826843881606\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchProductDetailApiV1TiktokAppV3FetchProductDetailGetTest() throws ApiException {
        String productId = null;
        ResponseModel response = api.fetchProductDetailApiV1TiktokAppV3FetchProductDetailGet(productId);

        // TODO: test validations
    }
    
    /**
     * 获取商品详情数据/Get product detail data
     *
     * # [中文] ### 用途: - 获取商品详情数据 ### 参数: - product_id: 商品id，有时候需要从product_id_str字段中获取。 ### 返回: - 商品详情数据  # [English] ### Purpose: - Get product detail data ### Parameters: - product_id: Product id, sometimes need to get from the product_id_str field. ### Return: - Product detail data  # [示例/Example] product_id &#x3D; \&quot;1729395826843881606\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchProductDetailApiV1TiktokAppV3FetchProductDetailGet_0Test() throws ApiException {
        String productId = null;
        ResponseModel response = api.fetchProductDetailApiV1TiktokAppV3FetchProductDetailGet_0(productId);

        // TODO: test validations
    }
    
    /**
     * 获取商品评价数据/Get product review data
     *
     * # [中文] ### 用途: - 获取商品评价数据 ### 参数: - product_id: 商品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - size: 数量 - filter_id: 筛选条件     - 0: 全部评价     - 1: 1星评价     - 2: 2星评价     - 3: 3星评价     - 4: 4星评价     - 5: 5星评价     - 102: 有图评价     - 104: 已购买的评价 - sort_type: 排序条件     - 1: 相关度     - 2: 从新到旧 ### 返回: - 商品评价数据  # [English] ### Purpose: - Get product review data ### Parameters: - product_id: Product id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - size: Count number - filter_id: Filter condition     - 0: All reviews     - 1: 1-star review     - 2: 2-star review     - 3: 3-star review     - 4: 4-star review     - 5: 5-star review     - 102: Reviews with pictures     - 104: Reviews of purchased products - sort_type: Sorting conditions     - 1: Relevance     - 2: New to old ### Return: - Product review data  # [示例/Example] product_id &#x3D; \&quot;1729448812983194615\&quot; cursor &#x3D; 0 size &#x3D; 10 filter_id &#x3D; 0 sort_type &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchProductReviewApiV1TiktokAppV3FetchProductReviewGetTest() throws ApiException {
        String productId = null;
        Integer cursor = null;
        Integer size = null;
        Integer filterId = null;
        Integer sortType = null;
        ResponseModel response = api.fetchProductReviewApiV1TiktokAppV3FetchProductReviewGet(productId, cursor, size, filterId, sortType);

        // TODO: test validations
    }
    
    /**
     * 获取商品评价数据/Get product review data
     *
     * # [中文] ### 用途: - 获取商品评价数据 ### 参数: - product_id: 商品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - size: 数量 - filter_id: 筛选条件     - 0: 全部评价     - 1: 1星评价     - 2: 2星评价     - 3: 3星评价     - 4: 4星评价     - 5: 5星评价     - 102: 有图评价     - 104: 已购买的评价 - sort_type: 排序条件     - 1: 相关度     - 2: 从新到旧 ### 返回: - 商品评价数据  # [English] ### Purpose: - Get product review data ### Parameters: - product_id: Product id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - size: Count number - filter_id: Filter condition     - 0: All reviews     - 1: 1-star review     - 2: 2-star review     - 3: 3-star review     - 4: 4-star review     - 5: 5-star review     - 102: Reviews with pictures     - 104: Reviews of purchased products - sort_type: Sorting conditions     - 1: Relevance     - 2: New to old ### Return: - Product review data  # [示例/Example] product_id &#x3D; \&quot;1729448812983194615\&quot; cursor &#x3D; 0 size &#x3D; 10 filter_id &#x3D; 0 sort_type &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchProductReviewApiV1TiktokAppV3FetchProductReviewGet_0Test() throws ApiException {
        String productId = null;
        Integer cursor = null;
        Integer size = null;
        Integer filterId = null;
        Integer sortType = null;
        ResponseModel response = api.fetchProductReviewApiV1TiktokAppV3FetchProductReviewGet_0(productId, cursor, size, filterId, sortType);

        // TODO: test validations
    }
    
    /**
     * 获取商品搜索结果/Get product search results
     *
     * # [中文] ### 用途: - 获取商品搜索结果 ### 参数: - keyword: 关键词 - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 - sort_type: 商品排序条件     - 1: 综合排序     - 2: 销量排序     - 3: 价格从高到低     - 4: 价格从低到高     - 5: 最新发布 - customer_review_four_star: 四星以上评价 - have_discount: 有优惠 - min_price: 最低价格 - max_price: 最高价格 ### 返回: - 商品搜索结果  # [English] ### Purpose: - Get product search results ### Parameters: - keyword: Keyword - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number - sort_type: Product sorting conditions     - 1: Comprehensive sorting     - 2: Sales volume sorting     - 3: Price high to low     - 4: Price low to high     - 5: Latest release - customer_review_four_star: Four-star or more reviews - have_discount: Having discount - min_price: Minimum price - max_price: Maximum price ### Return: - Product search results  # [示例/Example] keyword &#x3D; \&quot;Cat Toy\&quot; cursor &#x3D; 0 count &#x3D; 12 sort_type &#x3D; 1 customer_review_four_star &#x3D; False have_discount &#x3D; False min_price &#x3D; \&quot;10\&quot; max_price &#x3D; \&quot;25\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchProductSearchApiV1TiktokAppV3FetchProductSearchGetTest() throws ApiException {
        String keyword = null;
        Integer cursor = null;
        Integer count = null;
        Integer sortType = null;
        Boolean customerReviewFourStar = null;
        Boolean haveDiscount = null;
        String minPrice = null;
        String maxPrice = null;
        ResponseModel response = api.fetchProductSearchApiV1TiktokAppV3FetchProductSearchGet(keyword, cursor, count, sortType, customerReviewFourStar, haveDiscount, minPrice, maxPrice);

        // TODO: test validations
    }
    
    /**
     * 获取商品搜索结果/Get product search results
     *
     * # [中文] ### 用途: - 获取商品搜索结果 ### 参数: - keyword: 关键词 - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 - sort_type: 商品排序条件     - 1: 综合排序     - 2: 销量排序     - 3: 价格从高到低     - 4: 价格从低到高     - 5: 最新发布 - customer_review_four_star: 四星以上评价 - have_discount: 有优惠 - min_price: 最低价格 - max_price: 最高价格 ### 返回: - 商品搜索结果  # [English] ### Purpose: - Get product search results ### Parameters: - keyword: Keyword - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number - sort_type: Product sorting conditions     - 1: Comprehensive sorting     - 2: Sales volume sorting     - 3: Price high to low     - 4: Price low to high     - 5: Latest release - customer_review_four_star: Four-star or more reviews - have_discount: Having discount - min_price: Minimum price - max_price: Maximum price ### Return: - Product search results  # [示例/Example] keyword &#x3D; \&quot;Cat Toy\&quot; cursor &#x3D; 0 count &#x3D; 12 sort_type &#x3D; 1 customer_review_four_star &#x3D; False have_discount &#x3D; False min_price &#x3D; \&quot;10\&quot; max_price &#x3D; \&quot;25\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchProductSearchApiV1TiktokAppV3FetchProductSearchGet_0Test() throws ApiException {
        String keyword = null;
        Integer cursor = null;
        Integer count = null;
        Integer sortType = null;
        Boolean customerReviewFourStar = null;
        Boolean haveDiscount = null;
        String minPrice = null;
        String maxPrice = null;
        ResponseModel response = api.fetchProductSearchApiV1TiktokAppV3FetchProductSearchGet_0(keyword, cursor, count, sortType, customerReviewFourStar, haveDiscount, minPrice, maxPrice);

        // TODO: test validations
    }
    
    /**
     * 获取分享二维码/Get share QR code
     *
     * # [中文] ### 用途: - 获取分享二维码 ### 参数: - object_id: 对象id，当前支持个人主页接口响应中的uid作为参数。 ### 返回: - 二维码图片  # [English] ### Purpose: - Get share QR code ### Parameters: - object_id: Object id, currently supports the uid in the response of the personal homepage interface as a parameter. ### Return: - QR code image  # [示例/Example] url &#x3D; \&quot;6762244951259661318\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShareQrCodeApiV1TiktokAppV3FetchShareQrCodeGetTest() throws ApiException {
        String objectId = null;
        Integer schemaType = null;
        ResponseModel response = api.fetchShareQrCodeApiV1TiktokAppV3FetchShareQrCodeGet(objectId, schemaType);

        // TODO: test validations
    }
    
    /**
     * 获取分享二维码/Get share QR code
     *
     * # [中文] ### 用途: - 获取分享二维码 ### 参数: - object_id: 对象id，当前支持个人主页接口响应中的uid作为参数。 ### 返回: - 二维码图片  # [English] ### Purpose: - Get share QR code ### Parameters: - object_id: Object id, currently supports the uid in the response of the personal homepage interface as a parameter. ### Return: - QR code image  # [示例/Example] url &#x3D; \&quot;6762244951259661318\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShareQrCodeApiV1TiktokAppV3FetchShareQrCodeGet_0Test() throws ApiException {
        String objectId = null;
        Integer schemaType = null;
        ResponseModel response = api.fetchShareQrCodeApiV1TiktokAppV3FetchShareQrCodeGet_0(objectId, schemaType);

        // TODO: test validations
    }
    
    /**
     * 获取分享短链接/Get share short link
     *
     * # [中文] ### 用途: - 获取分享短链接 ### 参数: - url: 长链接或想要转换的链接 ### 返回: - 短链接  # [English] ### Purpose: - Get share short link ### Parameters: - url: Long link or link to convert ### Return: - Short link  # [示例/Example] url &#x3D; \&quot;https://www.tiktok.com/passport/web/logout/\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShareShortLinkApiV1TiktokAppV3FetchShareShortLinkGetTest() throws ApiException {
        String url = null;
        ResponseModel response = api.fetchShareShortLinkApiV1TiktokAppV3FetchShareShortLinkGet(url);

        // TODO: test validations
    }
    
    /**
     * 获取分享短链接/Get share short link
     *
     * # [中文] ### 用途: - 获取分享短链接 ### 参数: - url: 长链接或想要转换的链接 ### 返回: - 短链接  # [English] ### Purpose: - Get share short link ### Parameters: - url: Long link or link to convert ### Return: - Short link  # [示例/Example] url &#x3D; \&quot;https://www.tiktok.com/passport/web/logout/\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShareShortLinkApiV1TiktokAppV3FetchShareShortLinkGet_0Test() throws ApiException {
        String url = null;
        ResponseModel response = api.fetchShareShortLinkApiV1TiktokAppV3FetchShareShortLinkGet_0(url);

        // TODO: test validations
    }
    
    /**
     * 获取商家主页数据/Get shop home page data
     *
     * # [中文] ### 用途: - 获取商家主页的商品数据 ### 参数: - page_id: 爬取的商家主页Page id，可以从&#x60;fetch_shop_home_page_list&#x60;这个接口获取 - seller_id: 商家id,店铺id ### 返回: - 商家主页数据  # [English] ### Purpose: - Get product data of the shop home page ### Parameters: - page_id: Page id of the crawled shop home page, which can be obtained from the interface &#x60;fetch_shop_home_page_list&#x60; - seller_id: Seller id, shop id ### Return: - Shop home page data  # [示例/Example] page_id &#x3D; \&quot;7314705727611930410\&quot; seller_id &#x3D; \&quot;8646929864612614278\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopHomeApiV1TiktokAppV3FetchShopHomeGetTest() throws ApiException {
        String pageId = null;
        String sellerId = null;
        ResponseModel response = api.fetchShopHomeApiV1TiktokAppV3FetchShopHomeGet(pageId, sellerId);

        // TODO: test validations
    }
    
    /**
     * 获取商家主页数据/Get shop home page data
     *
     * # [中文] ### 用途: - 获取商家主页的商品数据 ### 参数: - page_id: 爬取的商家主页Page id，可以从&#x60;fetch_shop_home_page_list&#x60;这个接口获取 - seller_id: 商家id,店铺id ### 返回: - 商家主页数据  # [English] ### Purpose: - Get product data of the shop home page ### Parameters: - page_id: Page id of the crawled shop home page, which can be obtained from the interface &#x60;fetch_shop_home_page_list&#x60; - seller_id: Seller id, shop id ### Return: - Shop home page data  # [示例/Example] page_id &#x3D; \&quot;7314705727611930410\&quot; seller_id &#x3D; \&quot;8646929864612614278\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopHomeApiV1TiktokAppV3FetchShopHomeGet_0Test() throws ApiException {
        String pageId = null;
        String sellerId = null;
        ResponseModel response = api.fetchShopHomeApiV1TiktokAppV3FetchShopHomeGet_0(pageId, sellerId);

        // TODO: test validations
    }
    
    /**
     * 获取商家主页Page列表数据/Get shop home page list data
     *
     * # [中文] ### 用途: - 获取商家主页Page列表数据, 用于商家主页展示，以及爬取商家主页的商品数据 ### 参数: - seller_id: 商家id,店铺id ### 返回: - 商家主页Page列表数据  # [English] ### Purpose: - Get shop home page list data, used for shop home page display, and crawling shop home page product data ### Parameters: - seller_id: Seller id, shop id ### Return: - Shop home page list data  # [示例/Example] seller_id &#x3D; \&quot;8646929864612614278\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopHomePageListApiV1TiktokAppV3FetchShopHomePageListGetTest() throws ApiException {
        String sellerId = null;
        ResponseModel response = api.fetchShopHomePageListApiV1TiktokAppV3FetchShopHomePageListGet(sellerId);

        // TODO: test validations
    }
    
    /**
     * 获取商家主页Page列表数据/Get shop home page list data
     *
     * # [中文] ### 用途: - 获取商家主页Page列表数据, 用于商家主页展示，以及爬取商家主页的商品数据 ### 参数: - seller_id: 商家id,店铺id ### 返回: - 商家主页Page列表数据  # [English] ### Purpose: - Get shop home page list data, used for shop home page display, and crawling shop home page product data ### Parameters: - seller_id: Seller id, shop id ### Return: - Shop home page list data  # [示例/Example] seller_id &#x3D; \&quot;8646929864612614278\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopHomePageListApiV1TiktokAppV3FetchShopHomePageListGet_0Test() throws ApiException {
        String sellerId = null;
        ResponseModel response = api.fetchShopHomePageListApiV1TiktokAppV3FetchShopHomePageListGet_0(sellerId);

        // TODO: test validations
    }
    
    /**
     * 获取商家信息数据/Get shop information data
     *
     * # [中文] ### 用途: - 获取商家信息数据 ### 参数: - shop_id: 商家id,店铺id ### 返回: - 商家信息数据  # [English] ### Purpose: - Get shop information data ### Parameters: - shop_id: Seller id, shop id ### Return: - Shop information data  # [示例/Example] shop_id &#x3D; \&quot;8646942781241463007\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopInfoApiV1TiktokAppV3FetchShopInfoGetTest() throws ApiException {
        String shopId = null;
        ResponseModel response = api.fetchShopInfoApiV1TiktokAppV3FetchShopInfoGet(shopId);

        // TODO: test validations
    }
    
    /**
     * 获取商家信息数据/Get shop information data
     *
     * # [中文] ### 用途: - 获取商家信息数据 ### 参数: - shop_id: 商家id,店铺id ### 返回: - 商家信息数据  # [English] ### Purpose: - Get shop information data ### Parameters: - shop_id: Seller id, shop id ### Return: - Shop information data  # [示例/Example] shop_id &#x3D; \&quot;8646942781241463007\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopInfoApiV1TiktokAppV3FetchShopInfoGet_0Test() throws ApiException {
        String shopId = null;
        ResponseModel response = api.fetchShopInfoApiV1TiktokAppV3FetchShopInfoGet_0(shopId);

        // TODO: test validations
    }
    
    /**
     * 获取商家产品分类数据/Get shop product category data
     *
     * # [中文] ### 用途: - 获取商家产品分类数据 ### 参数: - seller_id: 商家id,店铺id ### 返回: - 商家产品分类数据  # [English] ### Purpose: - Get shop product category data ### Parameters: - seller_id: Seller id, shop id ### Return: - Shop product category data  # [示例/Example] seller_id &#x3D; \&quot;7495294980909468039\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopProductCategoryApiV1TiktokAppV3FetchShopProductCategoryGetTest() throws ApiException {
        String sellerId = null;
        ResponseModel response = api.fetchShopProductCategoryApiV1TiktokAppV3FetchShopProductCategoryGet(sellerId);

        // TODO: test validations
    }
    
    /**
     * 获取商家产品分类数据/Get shop product category data
     *
     * # [中文] ### 用途: - 获取商家产品分类数据 ### 参数: - seller_id: 商家id,店铺id ### 返回: - 商家产品分类数据  # [English] ### Purpose: - Get shop product category data ### Parameters: - seller_id: Seller id, shop id ### Return: - Shop product category data  # [示例/Example] seller_id &#x3D; \&quot;7495294980909468039\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopProductCategoryApiV1TiktokAppV3FetchShopProductCategoryGet_0Test() throws ApiException {
        String sellerId = null;
        ResponseModel response = api.fetchShopProductCategoryApiV1TiktokAppV3FetchShopProductCategoryGet_0(sellerId);

        // TODO: test validations
    }
    
    /**
     * 获取商家商品列表数据/Get shop product list data
     *
     * # [中文] ### 用途: - 获取商家商品列表数据 ### 参数: - seller_id: 商家id,店铺id - scroll_params: 滚动参数，用于加载更多商品数据 - page_size: 每页数量 - sort_field: 排序字段     - 1: 综合排序     - 3: 最新发布     - 4: 销量最好     - 5: 价格排序 - sort_order: 排序方式     - 0: 默认价格排序     - 1: 价格从高到低     - 2: 价格从低到高 ### 返回: - 商家商品列表数据  # [English] ### Purpose: - Get shop product list data ### Parameters: - seller_id: Seller id, shop id - scroll_params: Scroll parameter, used to load more product data - page_size: Number per page - sort_field: Sorting field     - 1: Comprehensive sorting     - 3: Latest release     - 4: Best sales     - 5: Price sorting - sort_order: Sorting method     - 0: Default price sorting     - 1: Price high to low     - 2: Price low to high ### Return: - Shop product list data  # [示例/Example] seller_id &#x3D; \&quot;8646929864612614278\&quot; scroll_params &#x3D; \&quot;\&quot; page_size &#x3D; 10 sort_field &#x3D; 1 sort_order &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopProductListApiV1TiktokAppV3FetchShopProductListGetTest() throws ApiException {
        String sellerId = null;
        String scrollParams = null;
        Integer pageSize = null;
        Integer sortField = null;
        Integer sortOrder = null;
        ResponseModel response = api.fetchShopProductListApiV1TiktokAppV3FetchShopProductListGet(sellerId, scrollParams, pageSize, sortField, sortOrder);

        // TODO: test validations
    }
    
    /**
     * 获取商家商品列表数据/Get shop product list data
     *
     * # [中文] ### 用途: - 获取商家商品列表数据 ### 参数: - seller_id: 商家id,店铺id - scroll_params: 滚动参数，用于加载更多商品数据 - page_size: 每页数量 - sort_field: 排序字段     - 1: 综合排序     - 3: 最新发布     - 4: 销量最好     - 5: 价格排序 - sort_order: 排序方式     - 0: 默认价格排序     - 1: 价格从高到低     - 2: 价格从低到高 ### 返回: - 商家商品列表数据  # [English] ### Purpose: - Get shop product list data ### Parameters: - seller_id: Seller id, shop id - scroll_params: Scroll parameter, used to load more product data - page_size: Number per page - sort_field: Sorting field     - 1: Comprehensive sorting     - 3: Latest release     - 4: Best sales     - 5: Price sorting - sort_order: Sorting method     - 0: Default price sorting     - 1: Price high to low     - 2: Price low to high ### Return: - Shop product list data  # [示例/Example] seller_id &#x3D; \&quot;8646929864612614278\&quot; scroll_params &#x3D; \&quot;\&quot; page_size &#x3D; 10 sort_field &#x3D; 1 sort_order &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopProductListApiV1TiktokAppV3FetchShopProductListGet_0Test() throws ApiException {
        String sellerId = null;
        String scrollParams = null;
        Integer pageSize = null;
        Integer sortField = null;
        Integer sortOrder = null;
        ResponseModel response = api.fetchShopProductListApiV1TiktokAppV3FetchShopProductListGet_0(sellerId, scrollParams, pageSize, sortField, sortOrder);

        // TODO: test validations
    }
    
    /**
     * 获取商家商品推荐数据/Get shop product recommend data
     *
     * # [中文] ### 用途: - 获取商家商品推荐数据 ### 参数: - seller_id: 商家id,店铺id - scroll_param: 滚动参数，用于加载更多商品数据 - page_size: 每页数量 ### 返回: - 商家商品推荐数据  # [English] ### Purpose: - Get shop product recommend data ### Parameters: - seller_id: Seller id, shop id - scroll_param: Scroll parameter, used to load more product data - page_size: Number per page ### Return: - Shop product recommend data  # [示例/Example] seller_id &#x3D; \&quot;8646929864612614278\&quot; scroll_param &#x3D; \&quot;\&quot; page_size &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopProductRecommendApiV1TiktokAppV3FetchShopProductRecommendGetTest() throws ApiException {
        String sellerId = null;
        String scrollParam = null;
        Integer pageSize = null;
        ResponseModel response = api.fetchShopProductRecommendApiV1TiktokAppV3FetchShopProductRecommendGet(sellerId, scrollParam, pageSize);

        // TODO: test validations
    }
    
    /**
     * 获取商家商品推荐数据/Get shop product recommend data
     *
     * # [中文] ### 用途: - 获取商家商品推荐数据 ### 参数: - seller_id: 商家id,店铺id - scroll_param: 滚动参数，用于加载更多商品数据 - page_size: 每页数量 ### 返回: - 商家商品推荐数据  # [English] ### Purpose: - Get shop product recommend data ### Parameters: - seller_id: Seller id, shop id - scroll_param: Scroll parameter, used to load more product data - page_size: Number per page ### Return: - Shop product recommend data  # [示例/Example] seller_id &#x3D; \&quot;8646929864612614278\&quot; scroll_param &#x3D; \&quot;\&quot; page_size &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchShopProductRecommendApiV1TiktokAppV3FetchShopProductRecommendGet_0Test() throws ApiException {
        String sellerId = null;
        String scrollParam = null;
        Integer pageSize = null;
        ResponseModel response = api.fetchShopProductRecommendApiV1TiktokAppV3FetchShopProductRecommendGet_0(sellerId, scrollParam, pageSize);

        // TODO: test validations
    }
    
    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowerListApiV1TiktokAppV3FetchUserFollowerListGetTest() throws ApiException {
        String secUserId = null;
        Integer count = null;
        Integer minTime = null;
        String pageToken = null;
        ResponseModel response = api.fetchUserFollowerListApiV1TiktokAppV3FetchUserFollowerListGet(secUserId, count, minTime, pageToken);

        // TODO: test validations
    }
    
    /**
     * 获取指定用户的粉丝列表数据/Get follower list of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的粉丝列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 粉丝列表数据  # [English] ### Purpose: - Get follower list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Follower list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 40 min_time &#x3D; 1719570100 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE5NTcwMTg3LCJtaW5fY3Vyc29yIjoxNzE5NTcwMTAwLCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowerListApiV1TiktokAppV3FetchUserFollowerListGet_0Test() throws ApiException {
        String secUserId = null;
        Integer count = null;
        Integer minTime = null;
        String pageToken = null;
        ResponseModel response = api.fetchUserFollowerListApiV1TiktokAppV3FetchUserFollowerListGet_0(secUserId, count, minTime, pageToken);

        // TODO: test validations
    }
    
    /**
     * 获取指定用户的关注列表数据/Get following list of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowingListApiV1TiktokAppV3FetchUserFollowingListGetTest() throws ApiException {
        String secUserId = null;
        Integer count = null;
        Integer minTime = null;
        String pageToken = null;
        ResponseModel response = api.fetchUserFollowingListApiV1TiktokAppV3FetchUserFollowingListGet(secUserId, count, minTime, pageToken);

        // TODO: test validations
    }
    
    /**
     * 获取指定用户的关注列表数据/Get following list of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的关注列表数据 ### 参数: - sec_user_id: 用户sec_user_id - count: 数量 - min_time: 最小时间，用于翻页，第一次请求使用默认值0，后续请求使用上一次请求返回的min_time值。 - page_token: 翻页token，第一次请求使用默认值\&quot;\&quot;，后续请求使用上一次请求返回的page_token值。 ### 返回: - 关注列表数据  # [English] ### Purpose: - Get following list of specified user ### Parameters: - sec_user_id: User sec_user_id - count: Number - min_time: Minimum time for paging, use default value 0 for the first request, and use the min_time value returned by the last request for subsequent requests. - page_token: Page token, use default value \&quot;\&quot; for the first request, and use the page_token value returned by the last request for subsequent requests. ### Return: - Following list data  # [示例/Example] sec_user &#x3D; \&quot;MS4wLjABAAAAXqqA-cLDC0hfQPIrS5APYNsg04zkl-socWCkqkI3UIOaEe6_Qnokg0GcWpLnMNQP\&quot; count &#x3D; 20 min_time &#x3D; 1639642146 page_token &#x3D; \&quot;eyJtYXhfY3Vyc29yIjoxNzE4NzIzNTY0LCJtaW5fY3Vyc29yIjoxNjM5NjQyMTQ2LCJmaW5pc2hfaW5zZXJ0X21hZiI6dHJ1ZX0&#x3D;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowingListApiV1TiktokAppV3FetchUserFollowingListGet_0Test() throws ApiException {
        String secUserId = null;
        Integer count = null;
        Integer minTime = null;
        String pageToken = null;
        ResponseModel response = api.fetchUserFollowingListApiV1TiktokAppV3FetchUserFollowingListGet_0(secUserId, count, minTime, pageToken);

        // TODO: test validations
    }
    
    /**
     * 获取用户喜欢作品数据/Get user like video data
     *
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserLikeVideosApiV1TiktokAppV3FetchUserLikeVideosGetTest() throws ApiException {
        String secUserId = null;
        Integer maxCursor = null;
        Integer counts = null;
        ResponseModel response = api.fetchUserLikeVideosApiV1TiktokAppV3FetchUserLikeVideosGet(secUserId, maxCursor, counts);

        // TODO: test validations
    }
    
    /**
     * 获取用户喜欢作品数据/Get user like video data
     *
     * # [中文] ### 用途: - 获取用户喜欢作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user like video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserLikeVideosApiV1TiktokAppV3FetchUserLikeVideosGet_0Test() throws ApiException {
        String secUserId = null;
        Integer maxCursor = null;
        Integer counts = null;
        ResponseModel response = api.fetchUserLikeVideosApiV1TiktokAppV3FetchUserLikeVideosGet_0(secUserId, maxCursor, counts);

        // TODO: test validations
    }
    
    /**
     * 获取用户音乐列表数据/Get user music list data
     *
     * # [中文] ### 用途: - 获取用户音乐列表数据 ### 参数: - sec_uid: 用户sec_uid - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 用户音乐列表数据  # [English] ### Purpose: - Get user music list data ### Parameters: - sec_uid: User sec_uid - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number  # [示例/Example] sec_uid &#x3D; \&quot;MS4wLjABAAAAqB08cUbXaDWqbD6MCga2RbGTuhfO2EsHayBYx08NDrN7IE3jQuRDNNN6YwyfH6_6\&quot; cursor &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserMusicListApiV1TiktokAppV3FetchUserMusicListGetTest() throws ApiException {
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchUserMusicListApiV1TiktokAppV3FetchUserMusicListGet(secUid, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户音乐列表数据/Get user music list data
     *
     * # [中文] ### 用途: - 获取用户音乐列表数据 ### 参数: - sec_uid: 用户sec_uid - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 用户音乐列表数据  # [English] ### Purpose: - Get user music list data ### Parameters: - sec_uid: User sec_uid - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number  # [示例/Example] sec_uid &#x3D; \&quot;MS4wLjABAAAAqB08cUbXaDWqbD6MCga2RbGTuhfO2EsHayBYx08NDrN7IE3jQuRDNNN6YwyfH6_6\&quot; cursor &#x3D; 0 count &#x3D; 10
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserMusicListApiV1TiktokAppV3FetchUserMusicListGet_0Test() throws ApiException {
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchUserMusicListApiV1TiktokAppV3FetchUserMusicListGet_0(secUid, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户主页作品数据/Get user homepage video data
     *
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostVideosApiV1TiktokAppV3FetchUserPostVideosGetTest() throws ApiException {
        String secUserId = null;
        Integer maxCursor = null;
        Integer count = null;
        ResponseModel response = api.fetchUserPostVideosApiV1TiktokAppV3FetchUserPostVideosGet(secUserId, maxCursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户主页作品数据/Get user homepage video data
     *
     * # [中文] ### 用途: - 获取用户主页作品数据 ### 参数: - sec_user_id: 用户sec_user_id - max_cursor: 最大游标，用于翻页，第一页为0，第二页为第一次响应中的max_cursor值。 - count: 最大数量 ### 返回: - 用户作品数据  # [English] ### Purpose: - Get user homepage video data ### Parameters: - sec_user_id: User sec_user_id - max_cursor: Maximum cursor, used for paging, the first page is 0, the second page is the max_cursor value in the first response. - count: Maximum count number ### Return: - User video data  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAA5u9HhzjGAj-leViCcvZD6b4-qyqHHgr9lVJmcPMzcBUX_Q2NpBeCgz8Uh6KugkfS\&quot; max_cursor &#x3D; 0 counts &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostVideosApiV1TiktokAppV3FetchUserPostVideosGet_0Test() throws ApiException {
        String secUserId = null;
        Integer maxCursor = null;
        Integer count = null;
        ResponseModel response = api.fetchUserPostVideosApiV1TiktokAppV3FetchUserPostVideosGet_0(secUserId, maxCursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户转发的作品数据/Get user repost video data
     *
     * # [中文] ### 用途: - 获取用户转发的作品数据 ### 参数: - user_id: 用户id，可以通过 handler_user_profile 端点获取，响应中的关键字为uid。 - offset: 偏移量 - count: 数量 ### 返回: - 用户转发作品数据  # [English] ### Purpose: - Get user repost video data ### Parameters: - user_id: User id, which can be obtained through the handler_user_profile endpoint, with the keyword uid in the response. - offset: Offset - count: Number ### Return: - User repost video data  # [示例/Example] user_id &#x3D; 107955 offset &#x3D; 0 count &#x3D; 21
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserRepostVideosApiV1TiktokAppV3FetchUserRepostVideosGetTest() throws ApiException {
        Integer userId = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchUserRepostVideosApiV1TiktokAppV3FetchUserRepostVideosGet(userId, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户转发的作品数据/Get user repost video data
     *
     * # [中文] ### 用途: - 获取用户转发的作品数据 ### 参数: - user_id: 用户id，可以通过 handler_user_profile 端点获取，响应中的关键字为uid。 - offset: 偏移量 - count: 数量 ### 返回: - 用户转发作品数据  # [English] ### Purpose: - Get user repost video data ### Parameters: - user_id: User id, which can be obtained through the handler_user_profile endpoint, with the keyword uid in the response. - offset: Offset - count: Number ### Return: - User repost video data  # [示例/Example] user_id &#x3D; 107955 offset &#x3D; 0 count &#x3D; 21
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserRepostVideosApiV1TiktokAppV3FetchUserRepostVideosGet_0Test() throws ApiException {
        Integer userId = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchUserRepostVideosApiV1TiktokAppV3FetchUserRepostVideosGet_0(userId, offset, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserSearchResultApiV1TiktokAppV3FetchUserSearchResultGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        String userSearchFollowerCount = null;
        String userSearchProfileType = null;
        String userSearchOtherPref = null;
        ResponseModel response = api.fetchUserSearchResultApiV1TiktokAppV3FetchUserSearchResultGet(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的用户搜索结果/Get user search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的用户搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - user_search_follower_count（根据粉丝数排序）:     - 空-不限制，     - ZERO_TO_ONE_K &#x3D; 0-1K，     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K，     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K，     - ONE_H_K_PLUS &#x3D; 100K以上 - user_search_profile_type（根据账号类型排序）:     - 空-不限制，     - VERIFIED &#x3D; 认证用户 - user_search_other_pref（根据其他偏好排序）:     - USERNAME &#x3D; 根据用户名相关性 ### 返回: - 用户搜索结果  # [English] ### Purpose: - Get user search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - user_search_follower_count（Sort by number of followers）:     - Empty-Unlimited,     - ZERO_TO_ONE_K &#x3D; 0-1K,     - ONE_K_TO_TEN_K-1K &#x3D; 1K-10K,     - TEN_K_TO_ONE_H_K &#x3D; 10K-100K,     - ONE_H_K_PLUS &#x3D; 100K and above - user_search_profile_type（Sort by account type）:     - Empty-Unlimited,     - VERIFIED &#x3D; Verified user - user_search_other_pref（Sort by other preferences）:     - USERNAME &#x3D; Sort by username relevance ### Return: - User search results  # [示例/Example] keyword &#x3D; \&quot;Cat\&quot; offset &#x3D; 0 count &#x3D; 20 user_search_follower_count &#x3D; \&quot;\&quot; user_search_profile_type &#x3D; \&quot;\&quot; user_search_other_pref &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserSearchResultApiV1TiktokAppV3FetchUserSearchResultGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        String userSearchFollowerCount = null;
        String userSearchProfileType = null;
        String userSearchOtherPref = null;
        ResponseModel response = api.fetchUserSearchResultApiV1TiktokAppV3FetchUserSearchResultGet_0(keyword, offset, count, userSearchFollowerCount, userSearchProfileType, userSearchOtherPref);

        // TODO: test validations
    }
    
    /**
     * 获取单个视频评论数据/Get single video comments data
     *
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentsApiV1TiktokAppV3FetchVideoCommentsGetTest() throws ApiException {
        String awemeId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchVideoCommentsApiV1TiktokAppV3FetchVideoCommentsGet(awemeId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取单个视频评论数据/Get single video comments data
     *
     * # [中文] ### 用途: - 获取单个视频评论数据 ### 参数: - aweme_id: 作品id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论数据  # [English] ### Purpose: - Get single video comments data ### Parameters: - aweme_id: Video id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comments data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; cursor &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentsApiV1TiktokAppV3FetchVideoCommentsGet_0Test() throws ApiException {
        String awemeId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchVideoCommentsApiV1TiktokAppV3FetchVideoCommentsGet_0(awemeId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     *
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentsReplyApiV1TiktokAppV3FetchVideoCommentRepliesGetTest() throws ApiException {
        String itemId = null;
        String commentId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchVideoCommentsReplyApiV1TiktokAppV3FetchVideoCommentRepliesGet(itemId, commentId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定视频的评论回复数据/Get comment replies data of specified video
     *
     * # [中文] ### 用途: - 获取指定视频的评论回复数据 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 游标，用于翻页，第一页为0，第二页为第一次响应中的cursor值。 - count: 数量 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies data of specified video ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Cursor, used for paging, the first page is 0, the second page is the cursor value in the first response. - count: Number ### Return: - Comment replies data  # [示例/Example] aweme_id &#x3D; \&quot;7326156045968067873\&quot; comment_id &#x3D; \&quot;7327061675382260482\&quot; cursor &#x3D; 0 count &#x3D; 20
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentsReplyApiV1TiktokAppV3FetchVideoCommentRepliesGet_0Test() throws ApiException {
        String itemId = null;
        String commentId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchVideoCommentsReplyApiV1TiktokAppV3FetchVideoCommentRepliesGet_0(itemId, commentId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoSearchResultApiV1TiktokAppV3FetchVideoSearchResultGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        Integer sortType = null;
        Integer publishTime = null;
        ResponseModel response = api.fetchVideoSearchResultApiV1TiktokAppV3FetchVideoSearchResultGet(keyword, offset, count, sortType, publishTime);

        // TODO: test validations
    }
    
    /**
     * 获取指定关键词的视频搜索结果/Get video search results of specified keywords
     *
     * # [中文] ### 用途: - 获取指定关键词的视频搜索结果 ### 参数: - keyword: 关键词 - offset: 偏移量 - count: 数量 - sort_type: 0-相关度，1-最多点赞 - publish_time: 0-不限制，1-最近一天，7-最近一周，30-最近一个月，90-最近三个月，180-最近半年 ### 返回: - 视频搜索结果  # [English] ### Purpose: - Get video search results of specified keywords ### Parameters: - keyword: Keyword - offset: Offset - count: Number - sort_type: 0-Relatedness, 1-Most likes - publish_time: 0-Unlimited, 1-Last day, 7-Last week, 30-Last month, 90-Last three months, 180-Last half year ### Return: - Video search results  # [示例/Example] keyword &#x3D; \&quot;中华娘\&quot; offset &#x3D; 0 count &#x3D; 20 sort_type &#x3D; 0 publish_time &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoSearchResultApiV1TiktokAppV3FetchVideoSearchResultGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        Integer count = null;
        Integer sortType = null;
        Integer publishTime = null;
        ResponseModel response = api.fetchVideoSearchResultApiV1TiktokAppV3FetchVideoSearchResultGet_0(keyword, offset, count, sortType, publishTime);

        // TODO: test validations
    }
    
    /**
     * 获取指定用户的信息/Get information of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void handlerUserProfileApiV1TiktokAppV3HandlerUserProfileGetTest() throws ApiException {
        String secUserId = null;
        ResponseModel response = api.handlerUserProfileApiV1TiktokAppV3HandlerUserProfileGet(secUserId);

        // TODO: test validations
    }
    
    /**
     * 获取指定用户的信息/Get information of specified user
     *
     * # [中文] ### 用途: - 获取指定用户的信息 ### 参数: - sec_user_id: 用户sec_user_id ### 返回: - 用户信息  # [English] ### Purpose: - Get information of specified user ### Parameters: - sec_user_id: User sec_user_id ### Return: - User information  # [示例/Example] sec_user_id &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void handlerUserProfileApiV1TiktokAppV3HandlerUserProfileGet_0Test() throws ApiException {
        String secUserId = null;
        ResponseModel response = api.handlerUserProfileApiV1TiktokAppV3HandlerUserProfileGet_0(secUserId);

        // TODO: test validations
    }
    
}
