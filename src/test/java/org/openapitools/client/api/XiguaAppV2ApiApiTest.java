/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for XiguaAppV2ApiApi
 */
@Ignore
public class XiguaAppV2ApiApiTest {

    private final XiguaAppV2ApiApi api = new XiguaAppV2ApiApi();

    
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - item_id: 作品id ### 返回: - 作品数据，其中包含视频链接的Base64编码播放地址，需要前端解码后使用，或者使用 /fetch_one_video_play_url 获取播放链接。  # [English] ### Purpose: - Get single video data ### Parameters: - item_id: Video id ### Return: - Video data, which contains the Base64 encoded playback address of the video link, which needs to be decoded and used by the front end, or use /fetch_one_video_play_url to get the playback link.  # [示例/Example] item_id: \&quot;7354954305222377999\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoApiV1XiguaAppV2FetchOneVideoGetTest() throws ApiException {
        String itemId = null;
        ResponseModel response = api.fetchOneVideoApiV1XiguaAppV2FetchOneVideoGet(itemId);

        // TODO: test validations
    }
    
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据 ### 参数: - item_id: 作品id ### 返回: - 作品数据，其中包含视频链接的Base64编码播放地址，需要前端解码后使用，或者使用 /fetch_one_video_play_url 获取播放链接。  # [English] ### Purpose: - Get single video data ### Parameters: - item_id: Video id ### Return: - Video data, which contains the Base64 encoded playback address of the video link, which needs to be decoded and used by the front end, or use /fetch_one_video_play_url to get the playback link.  # [示例/Example] item_id: \&quot;7354954305222377999\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoApiV1XiguaAppV2FetchOneVideoGet_0Test() throws ApiException {
        String itemId = null;
        ResponseModel response = api.fetchOneVideoApiV1XiguaAppV2FetchOneVideoGet_0(itemId);

        // TODO: test validations
    }
    
    /**
     * 获取单个作品的播放链接/Get single video play URL
     *
     * # [中文] ### 用途: - 获取单个作品的播放链接，此接口返回的是已经解码后的播放链接，可以直接使用。 ### 参数: - item_id: 作品id ### 返回: - 作品的播放链接的明文链接。  # [English] ### Purpose: - Get single video play URL, the interface returns the decoded play URL, which can be used directly. ### Parameters: - item_id: Video id ### Return: - Play URL of the video, plaintext link.  # [示例/Example] item_id: \&quot;7354954305222377999\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoPlayUrlApiV1XiguaAppV2FetchOneVideoPlayUrlGetTest() throws ApiException {
        String itemId = null;
        ResponseModel response = api.fetchOneVideoPlayUrlApiV1XiguaAppV2FetchOneVideoPlayUrlGet(itemId);

        // TODO: test validations
    }
    
    /**
     * 获取单个作品的播放链接/Get single video play URL
     *
     * # [中文] ### 用途: - 获取单个作品的播放链接，此接口返回的是已经解码后的播放链接，可以直接使用。 ### 参数: - item_id: 作品id ### 返回: - 作品的播放链接的明文链接。  # [English] ### Purpose: - Get single video play URL, the interface returns the decoded play URL, which can be used directly. ### Parameters: - item_id: Video id ### Return: - Play URL of the video, plaintext link.  # [示例/Example] item_id: \&quot;7354954305222377999\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchOneVideoPlayUrlApiV1XiguaAppV2FetchOneVideoPlayUrlGet_0Test() throws ApiException {
        String itemId = null;
        ResponseModel response = api.fetchOneVideoPlayUrlApiV1XiguaAppV2FetchOneVideoPlayUrlGet_0(itemId);

        // TODO: test validations
    }
    
    /**
     * 个人信息/Personal information
     *
     * # [中文] ### 用途: - 个人信息 ### 参数: - user_id: 用户id ### 返回: - 个人信息  # [English] ### Purpose: - Personal information ### Parameters: - user_id: User id ### Return: - Personal information  # [示例/Example] user_id: \&quot;52712347586\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserInfoApiV1XiguaAppV2FetchUserInfoGetTest() throws ApiException {
        String userId = null;
        ResponseModel response = api.fetchUserInfoApiV1XiguaAppV2FetchUserInfoGet(userId);

        // TODO: test validations
    }
    
    /**
     * 个人信息/Personal information
     *
     * # [中文] ### 用途: - 个人信息 ### 参数: - user_id: 用户id ### 返回: - 个人信息  # [English] ### Purpose: - Personal information ### Parameters: - user_id: User id ### Return: - Personal information  # [示例/Example] user_id: \&quot;52712347586\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserInfoApiV1XiguaAppV2FetchUserInfoGet_0Test() throws ApiException {
        String userId = null;
        ResponseModel response = api.fetchUserInfoApiV1XiguaAppV2FetchUserInfoGet_0(userId);

        // TODO: test validations
    }
    
    /**
     * 获取个人作品列表/Get user post list
     *
     * # [中文] ### 用途: - 获取个人作品列表 ### 参数: - user_id: 用户id - max_behot_time: 最大行为时间，默认空，第一次请求传空，后续请求传上一次请求返回数据中的JSON中的值。 - max_behot_time的值可以是JSON路径为：$.data.data.[-1].behot_time - 也就是data中的最后一个元素的cursor值 ### 返回: - 作品列表  # [English] ### Purpose: - Get user post list ### Parameters: - user_id: User id - max_behot_time: Maximum behavior time, default empty, pass empty for the first request, pass the max_behot_time returned by the previous request for subsequent requests - The value of max_behot_time can be the JSON path: $.data.data.[-1].behot_time - That is, the cursor value of the last element in data ### Return: - Post list  # [示例/Example] user_id &#x3D; \&quot;1922379661976311\&quot; max_behot_time &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostListApiV1XiguaAppV2FetchUserPostListGetTest() throws ApiException {
        String userId = null;
        String maxBehotTime = null;
        ResponseModel response = api.fetchUserPostListApiV1XiguaAppV2FetchUserPostListGet(userId, maxBehotTime);

        // TODO: test validations
    }
    
    /**
     * 获取个人作品列表/Get user post list
     *
     * # [中文] ### 用途: - 获取个人作品列表 ### 参数: - user_id: 用户id - max_behot_time: 最大行为时间，默认空，第一次请求传空，后续请求传上一次请求返回数据中的JSON中的值。 - max_behot_time的值可以是JSON路径为：$.data.data.[-1].behot_time - 也就是data中的最后一个元素的cursor值 ### 返回: - 作品列表  # [English] ### Purpose: - Get user post list ### Parameters: - user_id: User id - max_behot_time: Maximum behavior time, default empty, pass empty for the first request, pass the max_behot_time returned by the previous request for subsequent requests - The value of max_behot_time can be the JSON path: $.data.data.[-1].behot_time - That is, the cursor value of the last element in data ### Return: - Post list  # [示例/Example] user_id &#x3D; \&quot;1922379661976311\&quot; max_behot_time &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostListApiV1XiguaAppV2FetchUserPostListGet_0Test() throws ApiException {
        String userId = null;
        String maxBehotTime = null;
        ResponseModel response = api.fetchUserPostListApiV1XiguaAppV2FetchUserPostListGet_0(userId, maxBehotTime);

        // TODO: test validations
    }
    
    /**
     * 视频评论列表/Video comment list
     *
     * # [中文] ### 用途: - 视频评论列表 ### 参数: - item_id: 作品id - offset: 偏移量，第一次请求传0，后续请求传上一次请求返回的offset - count: 数量，默认20，建议保持默认。 ### 返回: - 评论列表  # [English] ### Purpose: - Video comment list ### Parameters: - item_id: Video id - offset: Offset, pass 0 for the first request, pass the offset returned by the previous request for subsequent requests - count: Quantity, default 20, it is recommended to keep the default. ### Return: - Comment list  # [示例/Example] item_id: \&quot;7354954305222377999\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentListApiV1XiguaAppV2FetchVideoCommentListGetTest() throws ApiException {
        String itemId = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchVideoCommentListApiV1XiguaAppV2FetchVideoCommentListGet(itemId, offset, count);

        // TODO: test validations
    }
    
    /**
     * 视频评论列表/Video comment list
     *
     * # [中文] ### 用途: - 视频评论列表 ### 参数: - item_id: 作品id - offset: 偏移量，第一次请求传0，后续请求传上一次请求返回的offset - count: 数量，默认20，建议保持默认。 ### 返回: - 评论列表  # [English] ### Purpose: - Video comment list ### Parameters: - item_id: Video id - offset: Offset, pass 0 for the first request, pass the offset returned by the previous request for subsequent requests - count: Quantity, default 20, it is recommended to keep the default. ### Return: - Comment list  # [示例/Example] item_id: \&quot;7354954305222377999\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchVideoCommentListApiV1XiguaAppV2FetchVideoCommentListGet_0Test() throws ApiException {
        String itemId = null;
        Integer offset = null;
        Integer count = null;
        ResponseModel response = api.fetchVideoCommentListApiV1XiguaAppV2FetchVideoCommentListGet_0(itemId, offset, count);

        // TODO: test validations
    }
    
    /**
     * 搜索视频/Search video
     *
     * # [中文] ### 用途: - 搜索视频 ### 参数: - keyword: 关键词 - offset: 偏移量，第一次请求传0，后续请求传上一次请求返回的offset - order_type: 排序方式，为空时按照默认排序，以下为可选排序方式。     - 最新: publish_time     - 最热: play_count - min_duration: 最小时长，默认空，单位秒。 - max_duration: 最大时长，默认空，单位秒。 ### 返回: - 视频列表  # [English] ### Purpose: - Search video ### Parameters: - keyword: Keyword - offset: Offset, pass 0 for the first request, pass the offset returned by the previous request for subsequent requests - order_type: Order type, empty for default sorting, the following are optional sorting methods.     - Newest: publish_time     - Hottest: play_count - min_duration: Minimum duration, default empty, in seconds. - max_duration: Maximum duration, default empty, in seconds. ### Return: - Video list  # [示例/Example] &gt; 搜索关键字为“抖音”的视频，按照播放量排序，时长1-180秒(1-3分钟) &gt; Search for videos with the keyword \&quot;抖音\&quot;, sorted by play count, duration 1-180 seconds (1-3 minutes) keyword: \&quot;抖音\&quot; order_type: \&quot;play_count\&quot; min_duration: 1 max_duration: 180
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchVideoApiV1XiguaAppV2SearchVideoGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        String orderType = null;
        Integer minDuration = null;
        Integer maxDuration = null;
        ResponseModel response = api.searchVideoApiV1XiguaAppV2SearchVideoGet(keyword, offset, orderType, minDuration, maxDuration);

        // TODO: test validations
    }
    
    /**
     * 搜索视频/Search video
     *
     * # [中文] ### 用途: - 搜索视频 ### 参数: - keyword: 关键词 - offset: 偏移量，第一次请求传0，后续请求传上一次请求返回的offset - order_type: 排序方式，为空时按照默认排序，以下为可选排序方式。     - 最新: publish_time     - 最热: play_count - min_duration: 最小时长，默认空，单位秒。 - max_duration: 最大时长，默认空，单位秒。 ### 返回: - 视频列表  # [English] ### Purpose: - Search video ### Parameters: - keyword: Keyword - offset: Offset, pass 0 for the first request, pass the offset returned by the previous request for subsequent requests - order_type: Order type, empty for default sorting, the following are optional sorting methods.     - Newest: publish_time     - Hottest: play_count - min_duration: Minimum duration, default empty, in seconds. - max_duration: Maximum duration, default empty, in seconds. ### Return: - Video list  # [示例/Example] &gt; 搜索关键字为“抖音”的视频，按照播放量排序，时长1-180秒(1-3分钟) &gt; Search for videos with the keyword \&quot;抖音\&quot;, sorted by play count, duration 1-180 seconds (1-3 minutes) keyword: \&quot;抖音\&quot; order_type: \&quot;play_count\&quot; min_duration: 1 max_duration: 180
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchVideoApiV1XiguaAppV2SearchVideoGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        String orderType = null;
        Integer minDuration = null;
        Integer maxDuration = null;
        ResponseModel response = api.searchVideoApiV1XiguaAppV2SearchVideoGet_0(keyword, offset, orderType, minDuration, maxDuration);

        // TODO: test validations
    }
    
}
