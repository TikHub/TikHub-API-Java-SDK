/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;
import org.openapitools.client.model.XBogusModel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TikTokWebApiApi
 */
@Ignore
public class TikTokWebApiApiTest {

    private final TikTokWebApiApi api = new TikTokWebApiApi();

    
    /**
     * 提取直播间弹幕/Extract live room danmaku
     *
     * # [中文] ### 用途: - 提取直播间弹幕 #### 价格: - 每10条数据消耗0.001$，支持阶梯式计费折扣。 ### 参数: - live_room_url: 直播间链接 - danmaku_type: 消息类型     - WebcastChatMessage: 聊天消息     - WebcastMemberMessage: 成员消息     - WebcastRoomUserSeqMessage: 用户序列消息     - WebcastGiftMessage: 礼物消息     - WebcastSocialMessage: 社交消息     - WebcastLikeMessage: 点赞消息     - WebcastLinkMicFanTicketMethod: 连麦粉丝票方法     - WebcastLinkMicMethod: 连麦方法 ### 返回: - 弹幕数据的WebSocket连接信息，需要使用WebSocket连接获取弹幕数据，此接口不返回弹幕数据。  # [English] ### Purpose: - Extract live room danmaku #### Price: - 0.001$ per 10 data, support tiered billing discount. ### Parameters: - live_room_url: Live room link - danmaku_type: Message type     - WebcastChatMessage: Chat message     - WebcastMemberMessage: Member message     - WebcastRoomUserSeqMessage: User sequence message     - WebcastGiftMessage: Gift message     - WebcastSocialMessage: Social message     - WebcastLikeMessage: Like message     - WebcastLinkMicFanTicketMethod: Link Mic Fan Ticket Method     - WebcastLinkMicMethod: Link Mic Method ### Return: - WebSocket connection information of the danmaku data, you need to use WebSocket connection to get the danmaku data, this interface does not return the danmaku data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void douyinLiveRoomApiV1TiktokWebTiktokLiveRoomGetTest() throws ApiException {
        String liveRoomUrl = null;
        String danmakuType = null;
        ResponseModel response = api.douyinLiveRoomApiV1TiktokWebTiktokLiveRoomGet(liveRoomUrl, danmakuType);

        // TODO: test validations
    }
    
    /**
     * 提取直播间弹幕/Extract live room danmaku
     *
     * # [中文] ### 用途: - 提取直播间弹幕 #### 价格: - 每10条数据消耗0.001$，支持阶梯式计费折扣。 ### 参数: - live_room_url: 直播间链接 - danmaku_type: 消息类型     - WebcastChatMessage: 聊天消息     - WebcastMemberMessage: 成员消息     - WebcastRoomUserSeqMessage: 用户序列消息     - WebcastGiftMessage: 礼物消息     - WebcastSocialMessage: 社交消息     - WebcastLikeMessage: 点赞消息     - WebcastLinkMicFanTicketMethod: 连麦粉丝票方法     - WebcastLinkMicMethod: 连麦方法 ### 返回: - 弹幕数据的WebSocket连接信息，需要使用WebSocket连接获取弹幕数据，此接口不返回弹幕数据。  # [English] ### Purpose: - Extract live room danmaku #### Price: - 0.001$ per 10 data, support tiered billing discount. ### Parameters: - live_room_url: Live room link - danmaku_type: Message type     - WebcastChatMessage: Chat message     - WebcastMemberMessage: Member message     - WebcastRoomUserSeqMessage: User sequence message     - WebcastGiftMessage: Gift message     - WebcastSocialMessage: Social message     - WebcastLikeMessage: Like message     - WebcastLinkMicFanTicketMethod: Link Mic Fan Ticket Method     - WebcastLinkMicMethod: Link Mic Method ### Return: - WebSocket connection information of the danmaku data, you need to use WebSocket connection to get the danmaku data, this interface does not return the danmaku data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void douyinLiveRoomApiV1TiktokWebTiktokLiveRoomGet_0Test() throws ApiException {
        String liveRoomUrl = null;
        String danmakuType = null;
        ResponseModel response = api.douyinLiveRoomApiV1TiktokWebTiktokLiveRoomGet_0(liveRoomUrl, danmakuType);

        // TODO: test validations
    }
    
    /**
     * 直播间开播状态检测/Live room start status check
     *
     * # [中文] ### 用途: - 直播间开播状态检测 - 如果当前直播间不存在或已下播，则返回空。 ### 参数: - room_id: 直播间ID ### 返回: - 直播间开播状态  # [English] ### Purpose: - Live room start status check - If the current live room does not exist or has ended, it will return empty. ### Parameters: - room_id: Live room ID ### Return: - Live room start status  # [示例/Example] room_id &#x3D; \&quot;7381444193462078214\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchCheckLiveAliveApiV1TiktokWebFetchCheckLiveAliveGetTest() throws ApiException {
        String roomId = null;
        ResponseModel response = api.fetchCheckLiveAliveApiV1TiktokWebFetchCheckLiveAliveGet(roomId);

        // TODO: test validations
    }
    
    /**
     * 直播间开播状态检测/Live room start status check
     *
     * # [中文] ### 用途: - 直播间开播状态检测 - 如果当前直播间不存在或已下播，则返回空。 ### 参数: - room_id: 直播间ID ### 返回: - 直播间开播状态  # [English] ### Purpose: - Live room start status check - If the current live room does not exist or has ended, it will return empty. ### Parameters: - room_id: Live room ID ### Return: - Live room start status  # [示例/Example] room_id &#x3D; \&quot;7381444193462078214\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchCheckLiveAliveApiV1TiktokWebFetchCheckLiveAliveGet_0Test() throws ApiException {
        String roomId = null;
        ResponseModel response = api.fetchCheckLiveAliveApiV1TiktokWebFetchCheckLiveAliveGet_0(roomId);

        // TODO: test validations
    }
    
    /**
     * 获取综合搜索列表/Get general search list
     *
     * # [中文] ### 用途: - 获取综合搜索列表 ### 参数: - keyword: 搜索关键词 - offset: 翻页游标，第一次请求时为0，第二次请求时从上一次请求的返回响应中获取，一般这个值的关键字为offset或者cursor。 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: 用户cookie(如果你需要使用自己的账号搜索，或者遇到接口报错，可以自行提供cookie，默认不需要提供) ### 返回: - 综合搜索列表  # [English] ### Purpose: - Get general search list ### Parameters: - keyword: Search keyword - offset: Page cursor, 0 for the first request, need to provide for the second paging, generally the keyword of this value is offset or cursor. - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: User cookie (If you need to search with your own account, or encounter an interface error, you can provide the cookie yourself, default is not required) ### Return: - General search list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot; offset &#x3D; 0 search_id &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchGeneralSearchApiV1TiktokWebFetchGeneralSearchGetTest() throws ApiException {
        String keyword = null;
        Integer offset = null;
        String searchId = null;
        String cookie = null;
        ResponseModel response = api.fetchGeneralSearchApiV1TiktokWebFetchGeneralSearchGet(keyword, offset, searchId, cookie);

        // TODO: test validations
    }
    
    /**
     * 获取综合搜索列表/Get general search list
     *
     * # [中文] ### 用途: - 获取综合搜索列表 ### 参数: - keyword: 搜索关键词 - offset: 翻页游标，第一次请求时为0，第二次请求时从上一次请求的返回响应中获取，一般这个值的关键字为offset或者cursor。 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: 用户cookie(如果你需要使用自己的账号搜索，或者遇到接口报错，可以自行提供cookie，默认不需要提供) ### 返回: - 综合搜索列表  # [English] ### Purpose: - Get general search list ### Parameters: - keyword: Search keyword - offset: Page cursor, 0 for the first request, need to provide for the second paging, generally the keyword of this value is offset or cursor. - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: User cookie (If you need to search with your own account, or encounter an interface error, you can provide the cookie yourself, default is not required) ### Return: - General search list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot; offset &#x3D; 0 search_id &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchGeneralSearchApiV1TiktokWebFetchGeneralSearchGet_0Test() throws ApiException {
        String keyword = null;
        Integer offset = null;
        String searchId = null;
        String cookie = null;
        ResponseModel response = api.fetchGeneralSearchApiV1TiktokWebFetchGeneralSearchGet_0(keyword, offset, searchId, cookie);

        // TODO: test validations
    }
    
    /**
     * 获取直播间首页推荐列表/Get live room homepage recommendation list
     *
     * # [中文] ### 用途: - 获取直播间首页推荐列表 ### 参数: - related_live_tag: 相关直播标签 ### 返回: - 直播间首页推荐列表  # [English] ### Purpose: - Get live room homepage recommendation list ### Parameters: - related_live_tag: Related live tag ### Return: - Live room homepage recommendation list  # [示例/Example] related_live_tag &#x3D; \&quot;VALORANT\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveRecommendApiV1TiktokWebFetchLiveRecommendGetTest() throws ApiException {
        String relatedLiveTag = null;
        ResponseModel response = api.fetchLiveRecommendApiV1TiktokWebFetchLiveRecommendGet(relatedLiveTag);

        // TODO: test validations
    }
    
    /**
     * 获取直播间首页推荐列表/Get live room homepage recommendation list
     *
     * # [中文] ### 用途: - 获取直播间首页推荐列表 ### 参数: - related_live_tag: 相关直播标签 ### 返回: - 直播间首页推荐列表  # [English] ### Purpose: - Get live room homepage recommendation list ### Parameters: - related_live_tag: Related live tag ### Return: - Live room homepage recommendation list  # [示例/Example] related_live_tag &#x3D; \&quot;VALORANT\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchLiveRecommendApiV1TiktokWebFetchLiveRecommendGet_0Test() throws ApiException {
        String relatedLiveTag = null;
        ResponseModel response = api.fetchLiveRecommendApiV1TiktokWebFetchLiveRecommendGet_0(relatedLiveTag);

        // TODO: test validations
    }
    
    /**
     * 获取作品的评论列表/Get video comments
     *
     * # [中文] ### 用途: - 获取作品的评论列表 ### 参数: - aweme_id: 作品id - cursor: 翻页游标 - count: 每页数量 - current_region: 当前地区，默认为空。 ### 返回: - 作品的评论列表  # [English] ### Purpose: - Get video comments ### Parameters: - aweme_id: Video id - cursor: Page cursor - count: Number per page - current_region: Current region, default is empty. ### Return: - Video comments  # [示例/Eample] aweme_id &#x3D; \&quot;7304809083817774382\&quot; cursor &#x3D; 0 count &#x3D; 20 current_region &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostCommentApiV1TiktokWebFetchPostCommentGetTest() throws ApiException {
        String awemeId = null;
        Integer cursor = null;
        Integer count = null;
        String currentRegion = null;
        ResponseModel response = api.fetchPostCommentApiV1TiktokWebFetchPostCommentGet(awemeId, cursor, count, currentRegion);

        // TODO: test validations
    }
    
    /**
     * 获取作品的评论列表/Get video comments
     *
     * # [中文] ### 用途: - 获取作品的评论列表 ### 参数: - aweme_id: 作品id - cursor: 翻页游标 - count: 每页数量 - current_region: 当前地区，默认为空。 ### 返回: - 作品的评论列表  # [English] ### Purpose: - Get video comments ### Parameters: - aweme_id: Video id - cursor: Page cursor - count: Number per page - current_region: Current region, default is empty. ### Return: - Video comments  # [示例/Eample] aweme_id &#x3D; \&quot;7304809083817774382\&quot; cursor &#x3D; 0 count &#x3D; 20 current_region &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostCommentApiV1TiktokWebFetchPostCommentGet_0Test() throws ApiException {
        String awemeId = null;
        Integer cursor = null;
        Integer count = null;
        String currentRegion = null;
        ResponseModel response = api.fetchPostCommentApiV1TiktokWebFetchPostCommentGet_0(awemeId, cursor, count, currentRegion);

        // TODO: test validations
    }
    
    /**
     * 获取作品的评论回复列表/Get video comment replies
     *
     * # [中文] ### 用途: - 获取作品的评论回复列表 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 翻页游标 - count: 每页数量 - current_region: 当前地区，默认为空。 ### 返回: - 作品的评论回复列表  # [English] ### Purpose: - Get video comment replies ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Page cursor - count: Number per page - current_region: Current region, default is empty. ### Return: - Video comment replies  # [示例/Eample] item_id &#x3D; \&quot;7304809083817774382\&quot; comment_id &#x3D; \&quot;7304877760886588191\&quot; cursor &#x3D; 0 count &#x3D; 20 current_region &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostCommentReplyApiV1TiktokWebFetchPostCommentReplyGetTest() throws ApiException {
        String itemId = null;
        String commentId = null;
        Integer cursor = null;
        Integer count = null;
        String currentRegion = null;
        ResponseModel response = api.fetchPostCommentReplyApiV1TiktokWebFetchPostCommentReplyGet(itemId, commentId, cursor, count, currentRegion);

        // TODO: test validations
    }
    
    /**
     * 获取作品的评论回复列表/Get video comment replies
     *
     * # [中文] ### 用途: - 获取作品的评论回复列表 ### 参数: - item_id: 作品id - comment_id: 评论id - cursor: 翻页游标 - count: 每页数量 - current_region: 当前地区，默认为空。 ### 返回: - 作品的评论回复列表  # [English] ### Purpose: - Get video comment replies ### Parameters: - item_id: Video id - comment_id: Comment id - cursor: Page cursor - count: Number per page - current_region: Current region, default is empty. ### Return: - Video comment replies  # [示例/Eample] item_id &#x3D; \&quot;7304809083817774382\&quot; comment_id &#x3D; \&quot;7304877760886588191\&quot; cursor &#x3D; 0 count &#x3D; 20 current_region &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostCommentReplyApiV1TiktokWebFetchPostCommentReplyGet_0Test() throws ApiException {
        String itemId = null;
        String commentId = null;
        Integer cursor = null;
        Integer count = null;
        String currentRegion = null;
        ResponseModel response = api.fetchPostCommentReplyApiV1TiktokWebFetchPostCommentReplyGet_0(itemId, commentId, cursor, count, currentRegion);

        // TODO: test validations
    }
    
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据 - 此接口无法用于视频下载，只能获取视频数据，访问此接口返回的视频链接会返回HTTP403报错。 - 如果有视频下载需求，请使用 /api/v1/tiktok/app/v2/fetch_one_video 接口。 ### 参数: - itemId: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data - This interface cannot be used for video download, it can only get video data, and accessing the video link returned by this interface will return an HTTP403 error. - If you need to download videos, please use the /api/v1/tiktok/app/v2/fetch_one_video interface. ### Parameters: - itemId: Video id ### Return: - Video data  # [示例/Example] itemId &#x3D; \&quot;7339393672959757570\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostDetailApiV1TiktokWebFetchPostDetailGetTest() throws ApiException {
        String itemId = null;
        ResponseModel response = api.fetchPostDetailApiV1TiktokWebFetchPostDetailGet(itemId);

        // TODO: test validations
    }
    
    /**
     * 获取单个作品数据/Get single video data
     *
     * # [中文] ### 用途: - 获取单个作品数据 - 此接口无法用于视频下载，只能获取视频数据，访问此接口返回的视频链接会返回HTTP403报错。 - 如果有视频下载需求，请使用 /api/v1/tiktok/app/v2/fetch_one_video 接口。 ### 参数: - itemId: 作品id ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data - This interface cannot be used for video download, it can only get video data, and accessing the video link returned by this interface will return an HTTP403 error. - If you need to download videos, please use the /api/v1/tiktok/app/v2/fetch_one_video interface. ### Parameters: - itemId: Video id ### Return: - Video data  # [示例/Example] itemId &#x3D; \&quot;7339393672959757570\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostDetailApiV1TiktokWebFetchPostDetailGet_0Test() throws ApiException {
        String itemId = null;
        ResponseModel response = api.fetchPostDetailApiV1TiktokWebFetchPostDetailGet_0(itemId);

        // TODO: test validations
    }
    
    /**
     * 搜索关键字推荐/Search keyword suggest
     *
     * # [中文] ### 用途: - 搜索关键字推荐 ### 参数: - keyword: 搜索关键词 ### 返回: - 关键字推荐列表  # [English] ### Purpose: - Search keyword suggest ### Parameters: - keyword: Search keyword ### Return: - Keyword suggest list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchKeywordSuggestApiV1TiktokWebFetchSearchKeywordSuggestGetTest() throws ApiException {
        String keyword = null;
        ResponseModel response = api.fetchSearchKeywordSuggestApiV1TiktokWebFetchSearchKeywordSuggestGet(keyword);

        // TODO: test validations
    }
    
    /**
     * 搜索关键字推荐/Search keyword suggest
     *
     * # [中文] ### 用途: - 搜索关键字推荐 ### 参数: - keyword: 搜索关键词 ### 返回: - 关键字推荐列表  # [English] ### Purpose: - Search keyword suggest ### Parameters: - keyword: Search keyword ### Return: - Keyword suggest list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchKeywordSuggestApiV1TiktokWebFetchSearchKeywordSuggestGet_0Test() throws ApiException {
        String keyword = null;
        ResponseModel response = api.fetchSearchKeywordSuggestApiV1TiktokWebFetchSearchKeywordSuggestGet_0(keyword);

        // TODO: test validations
    }
    
    /**
     * 搜索直播/Search live
     *
     * # [中文] ### 用途: - 搜索直播 ### 参数: - keyword: 搜索关键词 - count: 每页数量 - offset: 翻页游标，第一次请求时为0，第二次请求时从上一次请求的返回响应中获取，一般这个值的关键字为offset或者cursor。 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: 用户cookie(如果你需要使用自己的账号搜索，或者遇到接口报错，可以自行提供cookie，默认不需要提供) ### 返回: - 直播列表  # [English] ### Purpose: - Search live ### Parameters: - keyword: Search keyword - count: Number per page - offset: Page cursor, 0 for the first request, need to provide for the second paging, generally the keyword of this value is offset or cursor. - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: User cookie (If you need to search with your own account, or encounter an interface error, you can provide the cookie yourself, default is not required) ### Return: - Live list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot; count &#x3D; 20 offset &#x3D; 0 search_id &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchLiveApiV1TiktokWebFetchSearchLiveGetTest() throws ApiException {
        String keyword = null;
        Integer count = null;
        Integer offset = null;
        String searchId = null;
        String cookie = null;
        ResponseModel response = api.fetchSearchLiveApiV1TiktokWebFetchSearchLiveGet(keyword, count, offset, searchId, cookie);

        // TODO: test validations
    }
    
    /**
     * 搜索直播/Search live
     *
     * # [中文] ### 用途: - 搜索直播 ### 参数: - keyword: 搜索关键词 - count: 每页数量 - offset: 翻页游标，第一次请求时为0，第二次请求时从上一次请求的返回响应中获取，一般这个值的关键字为offset或者cursor。 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: 用户cookie(如果你需要使用自己的账号搜索，或者遇到接口报错，可以自行提供cookie，默认不需要提供) ### 返回: - 直播列表  # [English] ### Purpose: - Search live ### Parameters: - keyword: Search keyword - count: Number per page - offset: Page cursor, 0 for the first request, need to provide for the second paging, generally the keyword of this value is offset or cursor. - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: User cookie (If you need to search with your own account, or encounter an interface error, you can provide the cookie yourself, default is not required) ### Return: - Live list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot; count &#x3D; 20 offset &#x3D; 0 search_id &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchLiveApiV1TiktokWebFetchSearchLiveGet_0Test() throws ApiException {
        String keyword = null;
        Integer count = null;
        Integer offset = null;
        String searchId = null;
        String cookie = null;
        ResponseModel response = api.fetchSearchLiveApiV1TiktokWebFetchSearchLiveGet_0(keyword, count, offset, searchId, cookie);

        // TODO: test validations
    }
    
    /**
     * 搜索用户/Search user
     *
     * # [中文] ### 用途: - 搜索用户 ### 参数: - keyword: 搜索关键词 - cursor: 翻页游标，第一次请求时为0，第二次请求时从上一次请求的返回响应中获取，一般这个值的关键字为offset或者cursor。 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: 用户cookie(如果你需要使用自己的账号搜索，或者遇到接口报错，可以自行提供cookie，默认不需要提供) ### 返回: - 用户列表  # [English] ### Purpose: - Search user ### Parameters: - keyword: Search keyword - cursor: Page cursor, 0 for the first request, need to provide for the second paging, generally the keyword of this value is offset or cursor. - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: User cookie (If you need to search with your own account, or encounter an interface error, you can provide the cookie yourself, default is not required) ### Return: - User list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot; cursor &#x3D; 0 search_id &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchUserApiV1TiktokWebFetchSearchUserGetTest() throws ApiException {
        String keyword = null;
        Integer cursor = null;
        String searchId = null;
        String cookie = null;
        ResponseModel response = api.fetchSearchUserApiV1TiktokWebFetchSearchUserGet(keyword, cursor, searchId, cookie);

        // TODO: test validations
    }
    
    /**
     * 搜索用户/Search user
     *
     * # [中文] ### 用途: - 搜索用户 ### 参数: - keyword: 搜索关键词 - cursor: 翻页游标，第一次请求时为0，第二次请求时从上一次请求的返回响应中获取，一般这个值的关键字为offset或者cursor。 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: 用户cookie(如果你需要使用自己的账号搜索，或者遇到接口报错，可以自行提供cookie，默认不需要提供) ### 返回: - 用户列表  # [English] ### Purpose: - Search user ### Parameters: - keyword: Search keyword - cursor: Page cursor, 0 for the first request, need to provide for the second paging, generally the keyword of this value is offset or cursor. - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: User cookie (If you need to search with your own account, or encounter an interface error, you can provide the cookie yourself, default is not required) ### Return: - User list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot; cursor &#x3D; 0 search_id &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchUserApiV1TiktokWebFetchSearchUserGet_0Test() throws ApiException {
        String keyword = null;
        Integer cursor = null;
        String searchId = null;
        String cookie = null;
        ResponseModel response = api.fetchSearchUserApiV1TiktokWebFetchSearchUserGet_0(keyword, cursor, searchId, cookie);

        // TODO: test validations
    }
    
    /**
     * 搜索视频/Search video
     *
     * # [中文] ### 用途: - 搜索视频 ### 参数: - keyword: 搜索关键词 - count: 每页数量，建议保持默认值20。 - cursor: 翻页游标，第一次请求时为0，第二次请求时从上一次请求的返回响应中获取，一般这个值的关键字为offset或者cursor。 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: 用户cookie(如果你需要使用自己的账号搜索，或者遇到接口报错，可以自行提供cookie，默认不需要提供) ### 返回: - 视频列表  # [English] ### Purpose: - Search video ### Parameters: - keyword: Search keyword - count: Number per page, it is recommended to keep the default value 20. - cursor: Page cursor, 0 for the first request, need to provide for the second paging, generally the keyword of this value is offset or cursor. - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - offset: Page cursor - cookie: User cookie (If you need to search with your own account, or encounter an interface error, you can provide the cookie yourself, default is not required) ### Return: - Video list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot; count &#x3D; 20 offset &#x3D; 0 search_id &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchVideoApiV1TiktokWebFetchSearchVideoGetTest() throws ApiException {
        String keyword = null;
        Integer count = null;
        Integer offset = null;
        String searchId = null;
        String cookie = null;
        ResponseModel response = api.fetchSearchVideoApiV1TiktokWebFetchSearchVideoGet(keyword, count, offset, searchId, cookie);

        // TODO: test validations
    }
    
    /**
     * 搜索视频/Search video
     *
     * # [中文] ### 用途: - 搜索视频 ### 参数: - keyword: 搜索关键词 - count: 每页数量，建议保持默认值20。 - cursor: 翻页游标，第一次请求时为0，第二次请求时从上一次请求的返回响应中获取，一般这个值的关键字为offset或者cursor。 - search_id: 搜索id，第一次请求时为空，第二次翻页时需要提供，需要从上一次请求的返回响应中获取。     - 例如: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - cookie: 用户cookie(如果你需要使用自己的账号搜索，或者遇到接口报错，可以自行提供cookie，默认不需要提供) ### 返回: - 视频列表  # [English] ### Purpose: - Search video ### Parameters: - keyword: Search keyword - count: Number per page, it is recommended to keep the default value 20. - cursor: Page cursor, 0 for the first request, need to provide for the second paging, generally the keyword of this value is offset or cursor. - search_id: Search id, empty for the first request, need to provide for the second paging, need to get it from the return response of the last request.     - For example: search_id &#x3D; \&quot;20240828035554C02011379EBB6A00E00B\&quot;     - JSON Path-1 : $.data.extra.logid     - JSON Path-2 : $.data.log_pb.impr_id - offset: Page cursor - cookie: User cookie (If you need to search with your own account, or encounter an interface error, you can provide the cookie yourself, default is not required) ### Return: - Video list  # [示例/Example] keyword &#x3D; \&quot;TikTok\&quot; count &#x3D; 20 offset &#x3D; 0 search_id &#x3D; \&quot;\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchVideoApiV1TiktokWebFetchSearchVideoGet_0Test() throws ApiException {
        String keyword = null;
        Integer count = null;
        Integer offset = null;
        String searchId = null;
        String cookie = null;
        ResponseModel response = api.fetchSearchVideoApiV1TiktokWebFetchSearchVideoGet_0(keyword, count, offset, searchId, cookie);

        // TODO: test validations
    }
    
    /**
     * Tag详情/Tag Detail
     *
     * # [中文] ### 用途: - Tag详情 ### 参数: - tag_name: Tag名称 ### 返回: - Tag详情  # [English] ### Purpose: - Tag Detail ### Parameters: - tag_name: Tag name ### Return: - Tag Detail  # [示例/Example] tag_name &#x3D; \&quot;tiktok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTagDetailApiV1TiktokWebFetchTagDetailGetTest() throws ApiException {
        String tagName = null;
        ResponseModel response = api.fetchTagDetailApiV1TiktokWebFetchTagDetailGet(tagName);

        // TODO: test validations
    }
    
    /**
     * Tag详情/Tag Detail
     *
     * # [中文] ### 用途: - Tag详情 ### 参数: - tag_name: Tag名称 ### 返回: - Tag详情  # [English] ### Purpose: - Tag Detail ### Parameters: - tag_name: Tag name ### Return: - Tag Detail  # [示例/Example] tag_name &#x3D; \&quot;tiktok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTagDetailApiV1TiktokWebFetchTagDetailGet_0Test() throws ApiException {
        String tagName = null;
        ResponseModel response = api.fetchTagDetailApiV1TiktokWebFetchTagDetailGet_0(tagName);

        // TODO: test validations
    }
    
    /**
     * Tag作品/Tag Post
     *
     * # [中文] ### 用途: - Tag作品 ### 参数: - challengeID: Tag ID - count: 每页数量 - cursor: 翻页游标 ### 返回: - Tag作品  # [English] ### Purpose: - Tag Post ### Parameters: - challengeID: Tag ID - count: Number per page - cursor: Page cursor ### Return: - Tag Post  # [示例/Example] challengeID &#x3D; \&quot;7551\&quot; count &#x3D; 30 cursor &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTagPostApiV1TiktokWebFetchTagPostGetTest() throws ApiException {
        String challengeID = null;
        Integer count = null;
        Integer cursor = null;
        ResponseModel response = api.fetchTagPostApiV1TiktokWebFetchTagPostGet(challengeID, count, cursor);

        // TODO: test validations
    }
    
    /**
     * Tag作品/Tag Post
     *
     * # [中文] ### 用途: - Tag作品 ### 参数: - challengeID: Tag ID - count: 每页数量 - cursor: 翻页游标 ### 返回: - Tag作品  # [English] ### Purpose: - Tag Post ### Parameters: - challengeID: Tag ID - count: Number per page - cursor: Page cursor ### Return: - Tag Post  # [示例/Example] challengeID &#x3D; \&quot;7551\&quot; count &#x3D; 30 cursor &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTagPostApiV1TiktokWebFetchTagPostGet_0Test() throws ApiException {
        String challengeID = null;
        Integer count = null;
        Integer cursor = null;
        ResponseModel response = api.fetchTagPostApiV1TiktokWebFetchTagPostGet_0(challengeID, count, cursor);

        // TODO: test validations
    }
    
    /**
     * 通过直播链接获取直播间信息/Get live room information via live link
     *
     * # [中文] ### 用途: - 通过直播链接获取直播间信息 - 此接口可获取离线直播间信息 ### 参数: - live_room_url: 直播间链接 ### 返回: - 直播间信息  # [English] ### Purpose: - Get live room information via live link - This interface can get offline live room information ### Parameters: - live_room_url: Live room link ### Return: - Live room information  # [示例/Example] live_room_url &#x3D; \&quot;https://www.tiktok.com/@.caseoh_daily/live\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTiktokLiveDataApiV1TiktokWebFetchTiktokLiveDataGetTest() throws ApiException {
        String liveRoomUrl = null;
        ResponseModel response = api.fetchTiktokLiveDataApiV1TiktokWebFetchTiktokLiveDataGet(liveRoomUrl);

        // TODO: test validations
    }
    
    /**
     * 通过直播链接获取直播间信息/Get live room information via live link
     *
     * # [中文] ### 用途: - 通过直播链接获取直播间信息 - 此接口可获取离线直播间信息 ### 参数: - live_room_url: 直播间链接 ### 返回: - 直播间信息  # [English] ### Purpose: - Get live room information via live link - This interface can get offline live room information ### Parameters: - live_room_url: Live room link ### Return: - Live room information  # [示例/Example] live_room_url &#x3D; \&quot;https://www.tiktok.com/@.caseoh_daily/live\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTiktokLiveDataApiV1TiktokWebFetchTiktokLiveDataGet_0Test() throws ApiException {
        String liveRoomUrl = null;
        ResponseModel response = api.fetchTiktokLiveDataApiV1TiktokWebFetchTiktokLiveDataGet_0(liveRoomUrl);

        // TODO: test validations
    }
    
    /**
     * 获取用户的收藏列表/Get user favorites
     *
     * # [中文] ### 用途: - 获取用户的收藏列表 - 注意: 该接口目前只能获取自己的收藏列表，需要提供自己账号的cookie。 ### 参数: - cookie: 用户cookie - secUid: 用户secUid - cursor: 翻页游标 - count: 每页数量 - coverFormat: 封面格式 ### 返回: - 用户的收藏列表  # [English] ### Purpose: - Get user favorites - Note: This interface can currently only get your own favorites list, you need to provide your account cookie. ### Parameters: - cookie: User cookie - secUid: User secUid - cursor: Page cursor - count: Number per page - coverFormat: Cover format ### Return: - User favorites  # [示例/Example] cookie &#x3D; \&quot;Your_Cookie\&quot; secUid &#x3D; \&quot;Your_SecUid\&quot; cursor &#x3D; 0 count &#x3D; 30 coverFormat &#x3D; 2
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserCollectApiV1TiktokWebFetchUserCollectGetTest() throws ApiException {
        String cookie = null;
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        Integer coverFormat = null;
        ResponseModel response = api.fetchUserCollectApiV1TiktokWebFetchUserCollectGet(cookie, secUid, cursor, count, coverFormat);

        // TODO: test validations
    }
    
    /**
     * 获取用户的收藏列表/Get user favorites
     *
     * # [中文] ### 用途: - 获取用户的收藏列表 - 注意: 该接口目前只能获取自己的收藏列表，需要提供自己账号的cookie。 ### 参数: - cookie: 用户cookie - secUid: 用户secUid - cursor: 翻页游标 - count: 每页数量 - coverFormat: 封面格式 ### 返回: - 用户的收藏列表  # [English] ### Purpose: - Get user favorites - Note: This interface can currently only get your own favorites list, you need to provide your account cookie. ### Parameters: - cookie: User cookie - secUid: User secUid - cursor: Page cursor - count: Number per page - coverFormat: Cover format ### Return: - User favorites  # [示例/Example] cookie &#x3D; \&quot;Your_Cookie\&quot; secUid &#x3D; \&quot;Your_SecUid\&quot; cursor &#x3D; 0 count &#x3D; 30 coverFormat &#x3D; 2
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserCollectApiV1TiktokWebFetchUserCollectGet_0Test() throws ApiException {
        String cookie = null;
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        Integer coverFormat = null;
        ResponseModel response = api.fetchUserCollectApiV1TiktokWebFetchUserCollectGet_0(cookie, secUid, cursor, count, coverFormat);

        // TODO: test validations
    }
    
    /**
     * 获取用户的粉丝列表/Get user followers
     *
     * # [中文] ### 用途: - 获取用户的粉丝列表 ### 参数: - secUid: 用户secUid - count: 每页数量 - maxCursor: 最大游标 - minCursor: 最小游标 ### 返回: - 用户的粉丝列表  # [English] ### Purpose: - Get user followers ### Parameters: - secUid: User secUid - count: Number per page - maxCursor: Max cursor - minCursor: Min cursor ### Return: - User followers  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; count &#x3D; 30 maxCursor &#x3D; 0 minCursor &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFansApiV1TiktokWebFetchUserFansGetTest() throws ApiException {
        String secUid = null;
        Integer count = null;
        Integer maxCursor = null;
        Integer minCursor = null;
        ResponseModel response = api.fetchUserFansApiV1TiktokWebFetchUserFansGet(secUid, count, maxCursor, minCursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户的粉丝列表/Get user followers
     *
     * # [中文] ### 用途: - 获取用户的粉丝列表 ### 参数: - secUid: 用户secUid - count: 每页数量 - maxCursor: 最大游标 - minCursor: 最小游标 ### 返回: - 用户的粉丝列表  # [English] ### Purpose: - Get user followers ### Parameters: - secUid: User secUid - count: Number per page - maxCursor: Max cursor - minCursor: Min cursor ### Return: - User followers  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; count &#x3D; 30 maxCursor &#x3D; 0 minCursor &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFansApiV1TiktokWebFetchUserFansGet_0Test() throws ApiException {
        String secUid = null;
        Integer count = null;
        Integer maxCursor = null;
        Integer minCursor = null;
        ResponseModel response = api.fetchUserFansApiV1TiktokWebFetchUserFansGet_0(secUid, count, maxCursor, minCursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户的关注列表/Get user followings
     *
     * # [中文] ### 用途: - 获取用户的关注列表 ### 参数: - secUid: 用户secUid - count: 每页数量 - maxCursor: 最大游标 - minCursor: 最小游标 ### 返回: - 用户的关注列表  # [English] ### Purpose: - Get user followings ### Parameters: - secUid: User secUid - count: Number per page - maxCursor: Max cursor - minCursor: Min cursor ### Return: - User followings  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; count &#x3D; 30 maxCursor &#x3D; 0 minCursor &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowApiV1TiktokWebFetchUserFollowGetTest() throws ApiException {
        String secUid = null;
        Integer count = null;
        Integer maxCursor = null;
        Integer minCursor = null;
        ResponseModel response = api.fetchUserFollowApiV1TiktokWebFetchUserFollowGet(secUid, count, maxCursor, minCursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户的关注列表/Get user followings
     *
     * # [中文] ### 用途: - 获取用户的关注列表 ### 参数: - secUid: 用户secUid - count: 每页数量 - maxCursor: 最大游标 - minCursor: 最小游标 ### 返回: - 用户的关注列表  # [English] ### Purpose: - Get user followings ### Parameters: - secUid: User secUid - count: Number per page - maxCursor: Max cursor - minCursor: Min cursor ### Return: - User followings  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; count &#x3D; 30 maxCursor &#x3D; 0 minCursor &#x3D; 0
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserFollowApiV1TiktokWebFetchUserFollowGet_0Test() throws ApiException {
        String secUid = null;
        Integer count = null;
        Integer maxCursor = null;
        Integer minCursor = null;
        ResponseModel response = api.fetchUserFollowApiV1TiktokWebFetchUserFollowGet_0(secUid, count, maxCursor, minCursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户的点赞列表/Get user likes
     *
     * # [中文] ### 用途: - 获取用户的点赞列表 - 注意: 该接口需要用户点赞列表为公开状态 ### 参数: - secUid: 用户secUid - cursor: 翻页游标 - count: 每页数量 - coverFormat: 封面格式 ### 返回: - 用户的点赞列表  # [English] ### Purpose: - Get user likes - Note: This interface requires that the user&#39;s like list be public ### Parameters: - secUid: User secUid - cursor: Page cursor - count: Number per page - coverFormat: Cover format ### Return: - User likes  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAq1iRXNduFZpY301UkVpJ1eQT60_NiWS9QQSeNqmNQEDJp0pOF8cpleNEdiJx5_IU\&quot; cursor &#x3D; 0 count &#x3D; 35 coverFormat &#x3D; 2
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserLikeApiV1TiktokWebFetchUserLikeGetTest() throws ApiException {
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        Integer coverFormat = null;
        ResponseModel response = api.fetchUserLikeApiV1TiktokWebFetchUserLikeGet(secUid, cursor, count, coverFormat);

        // TODO: test validations
    }
    
    /**
     * 获取用户的点赞列表/Get user likes
     *
     * # [中文] ### 用途: - 获取用户的点赞列表 - 注意: 该接口需要用户点赞列表为公开状态 ### 参数: - secUid: 用户secUid - cursor: 翻页游标 - count: 每页数量 - coverFormat: 封面格式 ### 返回: - 用户的点赞列表  # [English] ### Purpose: - Get user likes - Note: This interface requires that the user&#39;s like list be public ### Parameters: - secUid: User secUid - cursor: Page cursor - count: Number per page - coverFormat: Cover format ### Return: - User likes  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAq1iRXNduFZpY301UkVpJ1eQT60_NiWS9QQSeNqmNQEDJp0pOF8cpleNEdiJx5_IU\&quot; cursor &#x3D; 0 count &#x3D; 35 coverFormat &#x3D; 2
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserLikeApiV1TiktokWebFetchUserLikeGet_0Test() throws ApiException {
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        Integer coverFormat = null;
        ResponseModel response = api.fetchUserLikeApiV1TiktokWebFetchUserLikeGet_0(secUid, cursor, count, coverFormat);

        // TODO: test validations
    }
    
    /**
     * 获取用户的合辑列表/Get user mix list
     *
     * # [中文] ### 用途: - 获取用户的合辑列表 ### 参数: - mixId: 合辑id - cursor: 翻页游标 - count: 每页数量 ### 返回: - 用户的合辑列表  # [English] ### Purpose: - Get user mix list ### Parameters: - mixId: Mix id - cursor: Page cursor - count: Number per page ### Return: - User mix list  # [示例/Eample] mixId &#x3D; \&quot;7101538765474106158\&quot; cursor &#x3D; 0 count &#x3D; 30
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserMixApiV1TiktokWebFetchUserMixGetTest() throws ApiException {
        String mixId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchUserMixApiV1TiktokWebFetchUserMixGet(mixId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户的合辑列表/Get user mix list
     *
     * # [中文] ### 用途: - 获取用户的合辑列表 ### 参数: - mixId: 合辑id - cursor: 翻页游标 - count: 每页数量 ### 返回: - 用户的合辑列表  # [English] ### Purpose: - Get user mix list ### Parameters: - mixId: Mix id - cursor: Page cursor - count: Number per page ### Return: - User mix list  # [示例/Eample] mixId &#x3D; \&quot;7101538765474106158\&quot; cursor &#x3D; 0 count &#x3D; 30
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserMixApiV1TiktokWebFetchUserMixGet_0Test() throws ApiException {
        String mixId = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchUserMixApiV1TiktokWebFetchUserMixGet_0(mixId, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户的播放列表/Get user play list
     *
     * # [中文] ### 用途: - 获取用户的播放列表 ### 参数: - secUid: 用户secUid - cursor: 翻页游标 - count: 每页数量 ### 返回: - 用户的播放列表  # [English] ### Purpose: - Get user play list ### Parameters: - secUid: User secUid - cursor: Page cursor - count: Number per page ### Return: - User play list  # [示例/Eample] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; cursor &#x3D; 0 count &#x3D; 30
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPlayListApiV1TiktokWebFetchUserPlayListGetTest() throws ApiException {
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchUserPlayListApiV1TiktokWebFetchUserPlayListGet(secUid, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户的播放列表/Get user play list
     *
     * # [中文] ### 用途: - 获取用户的播放列表 ### 参数: - secUid: 用户secUid - cursor: 翻页游标 - count: 每页数量 ### 返回: - 用户的播放列表  # [English] ### Purpose: - Get user play list ### Parameters: - secUid: User secUid - cursor: Page cursor - count: Number per page ### Return: - User play list  # [示例/Eample] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; cursor &#x3D; 0 count &#x3D; 30
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPlayListApiV1TiktokWebFetchUserPlayListGet_0Test() throws ApiException {
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        ResponseModel response = api.fetchUserPlayListApiV1TiktokWebFetchUserPlayListGet_0(secUid, cursor, count);

        // TODO: test validations
    }
    
    /**
     * 获取用户的作品列表/Get user posts
     *
     * # [中文] ### 用途: - 获取用户的作品列表 ### 参数: - secUid: 用户secUid - cursor: 翻页游标 - count: 每页数量 - coverFormat: 封面格式 ### 返回: - 用户的作品列表  # [English] ### Purpose: - Get user posts ### Parameters: - secUid: User secUid - cursor: Page cursor - count: Number per page - coverFormat: Cover format ### Return: - User posts  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; cursor &#x3D; 0 count &#x3D; 35 coverFormat &#x3D; 2
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostApiV1TiktokWebFetchUserPostGetTest() throws ApiException {
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        Integer coverFormat = null;
        ResponseModel response = api.fetchUserPostApiV1TiktokWebFetchUserPostGet(secUid, cursor, count, coverFormat);

        // TODO: test validations
    }
    
    /**
     * 获取用户的作品列表/Get user posts
     *
     * # [中文] ### 用途: - 获取用户的作品列表 ### 参数: - secUid: 用户secUid - cursor: 翻页游标 - count: 每页数量 - coverFormat: 封面格式 ### 返回: - 用户的作品列表  # [English] ### Purpose: - Get user posts ### Parameters: - secUid: User secUid - cursor: Page cursor - count: Number per page - coverFormat: Cover format ### Return: - User posts  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; cursor &#x3D; 0 count &#x3D; 35 coverFormat &#x3D; 2
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostApiV1TiktokWebFetchUserPostGet_0Test() throws ApiException {
        String secUid = null;
        Integer cursor = null;
        Integer count = null;
        Integer coverFormat = null;
        ResponseModel response = api.fetchUserPostApiV1TiktokWebFetchUserPostGet_0(secUid, cursor, count, coverFormat);

        // TODO: test validations
    }
    
    /**
     * 获取用户的个人信息/Get user profile
     *
     * # [中文] ### 用途: - 获取用户的个人信息 ### 参数: - secUid: 用户secUid - uniqueId: 用户uniqueId - secUid和uniqueId至少提供一个, 优先使用uniqueId, 也就是用户主页的链接中的用户名。 ### 返回: - 用户的个人信息  # [English] ### Purpose: - Get user profile ### Parameters: - secUid: User secUid - uniqueId: User uniqueId - At least one of secUid and uniqueId is provided, and uniqueId is preferred, that is, the username in the user&#39;s homepage link. ### Return: - User profile  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; uniqueId &#x3D; \&quot;tiktok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserProfileApiV1TiktokWebFetchUserProfileGetTest() throws ApiException {
        String uniqueId = null;
        String secUid = null;
        ResponseModel response = api.fetchUserProfileApiV1TiktokWebFetchUserProfileGet(uniqueId, secUid);

        // TODO: test validations
    }
    
    /**
     * 获取用户的个人信息/Get user profile
     *
     * # [中文] ### 用途: - 获取用户的个人信息 ### 参数: - secUid: 用户secUid - uniqueId: 用户uniqueId - secUid和uniqueId至少提供一个, 优先使用uniqueId, 也就是用户主页的链接中的用户名。 ### 返回: - 用户的个人信息  # [English] ### Purpose: - Get user profile ### Parameters: - secUid: User secUid - uniqueId: User uniqueId - At least one of secUid and uniqueId is provided, and uniqueId is preferred, that is, the username in the user&#39;s homepage link. ### Return: - User profile  # [示例/Example] secUid &#x3D; \&quot;MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\&quot; uniqueId &#x3D; \&quot;tiktok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserProfileApiV1TiktokWebFetchUserProfileGet_0Test() throws ApiException {
        String uniqueId = null;
        String secUid = null;
        ResponseModel response = api.fetchUserProfileApiV1TiktokWebFetchUserProfileGet_0(uniqueId, secUid);

        // TODO: test validations
    }
    
    /**
     * 生成真实msToken/Generate real msToken
     *
     * # [中文] ### 用途: - 生成真实msToken ### 返回: - 真实msToken  # [English] ### Purpose: - Generate real msToken ### Return: - Real msToken
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateRealMsTokenApiV1TiktokWebGenerateRealMsTokenGetTest() throws ApiException {
        ResponseModel response = api.generateRealMsTokenApiV1TiktokWebGenerateRealMsTokenGet();

        // TODO: test validations
    }
    
    /**
     * 生成真实msToken/Generate real msToken
     *
     * # [中文] ### 用途: - 生成真实msToken ### 返回: - 真实msToken  # [English] ### Purpose: - Generate real msToken ### Return: - Real msToken
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateRealMsTokenApiV1TiktokWebGenerateRealMsTokenGet_0Test() throws ApiException {
        ResponseModel response = api.generateRealMsTokenApiV1TiktokWebGenerateRealMsTokenGet_0();

        // TODO: test validations
    }
    
    /**
     * 生成ttwid/Generate ttwid
     *
     * # [中文] ### 用途: - 生成ttwid ### 参数: - cookie: 用户cookie ### 返回: - ttwid  # [English] ### Purpose: - Generate ttwid ### Parameters: - cookie: User cookie ### Return: - ttwid  # [示例/Example] cookie &#x3D; \&quot;Your_Cookie\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateTtwidApiV1TiktokWebGenerateTtwidGetTest() throws ApiException {
        String cookie = null;
        ResponseModel response = api.generateTtwidApiV1TiktokWebGenerateTtwidGet(cookie);

        // TODO: test validations
    }
    
    /**
     * 生成ttwid/Generate ttwid
     *
     * # [中文] ### 用途: - 生成ttwid ### 参数: - cookie: 用户cookie ### 返回: - ttwid  # [English] ### Purpose: - Generate ttwid ### Parameters: - cookie: User cookie ### Return: - ttwid  # [示例/Example] cookie &#x3D; \&quot;Your_Cookie\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateTtwidApiV1TiktokWebGenerateTtwidGet_0Test() throws ApiException {
        String cookie = null;
        ResponseModel response = api.generateTtwidApiV1TiktokWebGenerateTtwidGet_0(cookie);

        // TODO: test validations
    }
    
    /**
     * 生成xbogus/Generate xbogus
     *
     * # [中文] ### 用途: - 生成xbogus ### 参数: - url: 未签名的API URL - user_agent: 用户浏览器User-Agent ### 返回: - xbogus  # [English] ### Purpose: - Generate xbogus ### Parameters: - url: Unsigned API URL - user_agent: User browser User-Agent ### Return: - xbogus  # [示例/Example]  &#x60;&#x60;&#x60;json {     \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/aweme/detail/?aweme_id&#x3D;7148736076176215311&amp;device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;170400&amp;version_name&#x3D;17.4.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1920&amp;screen_height&#x3D;1080&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Edge&amp;browser_version&#x3D;117.0.2045.47&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Blink&amp;engine_version&#x3D;117.0.0.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;128&amp;device_memory&#x3D;10240&amp;platform&#x3D;PC&amp;downlink&#x3D;10&amp;effective_type&#x3D;4g&amp;round_trip_time&#x3D;100\&quot;,     \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot; }
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateXbogusApiV1TiktokWebGenerateXbogusPostTest() throws ApiException {
        XBogusModel xbogusModel = null;
        ResponseModel response = api.generateXbogusApiV1TiktokWebGenerateXbogusPost(xbogusModel);

        // TODO: test validations
    }
    
    /**
     * 生成xbogus/Generate xbogus
     *
     * # [中文] ### 用途: - 生成xbogus ### 参数: - url: 未签名的API URL - user_agent: 用户浏览器User-Agent ### 返回: - xbogus  # [English] ### Purpose: - Generate xbogus ### Parameters: - url: Unsigned API URL - user_agent: User browser User-Agent ### Return: - xbogus  # [示例/Example]  &#x60;&#x60;&#x60;json {     \&quot;url\&quot;: \&quot;https://www.douyin.com/aweme/v1/web/aweme/detail/?aweme_id&#x3D;7148736076176215311&amp;device_platform&#x3D;webapp&amp;aid&#x3D;6383&amp;channel&#x3D;channel_pc_web&amp;pc_client_type&#x3D;1&amp;version_code&#x3D;170400&amp;version_name&#x3D;17.4.0&amp;cookie_enabled&#x3D;true&amp;screen_width&#x3D;1920&amp;screen_height&#x3D;1080&amp;browser_language&#x3D;zh-CN&amp;browser_platform&#x3D;Win32&amp;browser_name&#x3D;Edge&amp;browser_version&#x3D;117.0.2045.47&amp;browser_online&#x3D;true&amp;engine_name&#x3D;Blink&amp;engine_version&#x3D;117.0.0.0&amp;os_name&#x3D;Windows&amp;os_version&#x3D;10&amp;cpu_core_num&#x3D;128&amp;device_memory&#x3D;10240&amp;platform&#x3D;PC&amp;downlink&#x3D;10&amp;effective_type&#x3D;4g&amp;round_trip_time&#x3D;100\&quot;,     \&quot;user_agent\&quot;: \&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\&quot; }
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateXbogusApiV1TiktokWebGenerateXbogusPost_0Test() throws ApiException {
        XBogusModel xbogusModel = null;
        ResponseModel response = api.generateXbogusApiV1TiktokWebGenerateXbogusPost_0(xbogusModel);

        // TODO: test validations
    }
    
    /**
     * 提取列表作品id/Extract list video id
     *
     * # [中文] ### 用途: - 提取列表作品id ### 参数: - url: 作品链接 (最多支持20个链接) ### 返回: - 作品id  # [English] ### Purpose: - Extract list video id ### Parameters: - url: Video link (Support up to 20 links) ### Return: - Video id  # [示例/Example] url &#x3D; [\&quot;https://www.tiktok.com/@owlcitymusic/video/7218694761253735723\&quot;]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllAwemeIdApiV1TiktokWebGetAllAwemeIdPostTest() throws ApiException {
        List<String> requestBody = null;
        ResponseModel response = api.getAllAwemeIdApiV1TiktokWebGetAllAwemeIdPost(requestBody);

        // TODO: test validations
    }
    
    /**
     * 提取列表作品id/Extract list video id
     *
     * # [中文] ### 用途: - 提取列表作品id ### 参数: - url: 作品链接 (最多支持20个链接) ### 返回: - 作品id  # [English] ### Purpose: - Extract list video id ### Parameters: - url: Video link (Support up to 20 links) ### Return: - Video id  # [示例/Example] url &#x3D; [\&quot;https://www.tiktok.com/@owlcitymusic/video/7218694761253735723\&quot;]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllAwemeIdApiV1TiktokWebGetAllAwemeIdPost_0Test() throws ApiException {
        List<String> requestBody = null;
        ResponseModel response = api.getAllAwemeIdApiV1TiktokWebGetAllAwemeIdPost_0(requestBody);

        // TODO: test validations
    }
    
    /**
     * 提取列表用户sec_user_id/Extract list user sec_user_id
     *
     * # [中文] ### 用途: - 提取列表用户id ### 参数: - url: 用户主页链接（最多支持20个链接） ### 返回: - 用户id  # [English] ### Purpose: - Extract list user id ### Parameters: - url: User homepage link (Support up to 20 links) ### Return: - User id  # [示例/Example] url &#x3D; [\&quot;https://www.tiktok.com/@tiktok\&quot;]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSecUserIdApiV1TiktokWebGetAllSecUserIdPostTest() throws ApiException {
        List<String> requestBody = null;
        ResponseModel response = api.getAllSecUserIdApiV1TiktokWebGetAllSecUserIdPost(requestBody);

        // TODO: test validations
    }
    
    /**
     * 提取列表用户sec_user_id/Extract list user sec_user_id
     *
     * # [中文] ### 用途: - 提取列表用户id ### 参数: - url: 用户主页链接（最多支持20个链接） ### 返回: - 用户id  # [English] ### Purpose: - Extract list user id ### Parameters: - url: User homepage link (Support up to 20 links) ### Return: - User id  # [示例/Example] url &#x3D; [\&quot;https://www.tiktok.com/@tiktok\&quot;]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllSecUserIdApiV1TiktokWebGetAllSecUserIdPost_0Test() throws ApiException {
        List<String> requestBody = null;
        ResponseModel response = api.getAllSecUserIdApiV1TiktokWebGetAllSecUserIdPost_0(requestBody);

        // TODO: test validations
    }
    
    /**
     * 获取列表unique_id/Get list unique_id
     *
     * # [中文] ### 用途: - 获取列表unique_id ### 参数: - url: 用户主页链接 (最多支持20个链接) ### 返回: - unique_id  # [English] ### Purpose: - Get list unique_id ### Parameters: - url: User homepage link (Support up to 20 links) ### Return: - unique_id  # [示例/Example] url &#x3D; [\&quot;https://www.tiktok.com/@tiktok\&quot;]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllUniqueIdApiV1TiktokWebGetAllUniqueIdPostTest() throws ApiException {
        List<String> requestBody = null;
        ResponseModel response = api.getAllUniqueIdApiV1TiktokWebGetAllUniqueIdPost(requestBody);

        // TODO: test validations
    }
    
    /**
     * 获取列表unique_id/Get list unique_id
     *
     * # [中文] ### 用途: - 获取列表unique_id ### 参数: - url: 用户主页链接 (最多支持20个链接) ### 返回: - unique_id  # [English] ### Purpose: - Get list unique_id ### Parameters: - url: User homepage link (Support up to 20 links) ### Return: - unique_id  # [示例/Example] url &#x3D; [\&quot;https://www.tiktok.com/@tiktok\&quot;]
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllUniqueIdApiV1TiktokWebGetAllUniqueIdPost_0Test() throws ApiException {
        List<String> requestBody = null;
        ResponseModel response = api.getAllUniqueIdApiV1TiktokWebGetAllUniqueIdPost_0(requestBody);

        // TODO: test validations
    }
    
    /**
     * 提取单个作品id/Extract single video id
     *
     * # [中文] ### 用途: - 提取单个作品id ### 参数: - url: 作品链接 ### 返回: - 作品id  # [English] ### Purpose: - Extract single video id ### Parameters: - url: Video link ### Return: - Video id  # [示例/Example] url &#x3D; \&quot;https://www.tiktok.com/@owlcitymusic/video/7218694761253735723\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAwemeIdApiV1TiktokWebGetAwemeIdGetTest() throws ApiException {
        String url = null;
        ResponseModel response = api.getAwemeIdApiV1TiktokWebGetAwemeIdGet(url);

        // TODO: test validations
    }
    
    /**
     * 提取单个作品id/Extract single video id
     *
     * # [中文] ### 用途: - 提取单个作品id ### 参数: - url: 作品链接 ### 返回: - 作品id  # [English] ### Purpose: - Extract single video id ### Parameters: - url: Video link ### Return: - Video id  # [示例/Example] url &#x3D; \&quot;https://www.tiktok.com/@owlcitymusic/video/7218694761253735723\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAwemeIdApiV1TiktokWebGetAwemeIdGet_0Test() throws ApiException {
        String url = null;
        ResponseModel response = api.getAwemeIdApiV1TiktokWebGetAwemeIdGet_0(url);

        // TODO: test validations
    }
    
    /**
     * 根据直播间链接提取直播间ID/Extract live room ID from live room link
     *
     * # [中文] ### 用途: - 根据直播间链接提取直播间Room ID - 如果当前直播间不存在或已下播，则返回空。 ### 参数: - live_room_url: 直播间链接 ### 返回: - 直播间Room ID  # [English] ### Purpose: - Extract live room Room ID from live room link - If the current live room does not exist or has ended, it will return empty. ### Parameters: - live_room_url: Live room link ### Return: - Live room Room ID  # [示例/Example] live_room_url &#x3D; \&quot;https://www.tiktok.com/@.caseoh_daily/live\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLiveRoomIdApiV1TiktokWebGetLiveRoomIdGetTest() throws ApiException {
        String liveRoomUrl = null;
        ResponseModel response = api.getLiveRoomIdApiV1TiktokWebGetLiveRoomIdGet(liveRoomUrl);

        // TODO: test validations
    }
    
    /**
     * 根据直播间链接提取直播间ID/Extract live room ID from live room link
     *
     * # [中文] ### 用途: - 根据直播间链接提取直播间Room ID - 如果当前直播间不存在或已下播，则返回空。 ### 参数: - live_room_url: 直播间链接 ### 返回: - 直播间Room ID  # [English] ### Purpose: - Extract live room Room ID from live room link - If the current live room does not exist or has ended, it will return empty. ### Parameters: - live_room_url: Live room link ### Return: - Live room Room ID  # [示例/Example] live_room_url &#x3D; \&quot;https://www.tiktok.com/@.caseoh_daily/live\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLiveRoomIdApiV1TiktokWebGetLiveRoomIdGet_0Test() throws ApiException {
        String liveRoomUrl = null;
        ResponseModel response = api.getLiveRoomIdApiV1TiktokWebGetLiveRoomIdGet_0(liveRoomUrl);

        // TODO: test validations
    }
    
    /**
     * 提取用户sec_user_id/Extract user sec_user_id
     *
     * # [中文] ### 用途: - 提取列表用户id ### 参数: - url: 用户主页链接 ### 返回: - 用户id  # [English] ### Purpose: - Extract list user id ### Parameters: - url: User homepage link ### Return: - User id  # [示例/Example] url &#x3D; \&quot;https://www.tiktok.com/@tiktok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSecUserIdApiV1TiktokWebGetSecUserIdGetTest() throws ApiException {
        String url = null;
        ResponseModel response = api.getSecUserIdApiV1TiktokWebGetSecUserIdGet(url);

        // TODO: test validations
    }
    
    /**
     * 提取用户sec_user_id/Extract user sec_user_id
     *
     * # [中文] ### 用途: - 提取列表用户id ### 参数: - url: 用户主页链接 ### 返回: - 用户id  # [English] ### Purpose: - Extract list user id ### Parameters: - url: User homepage link ### Return: - User id  # [示例/Example] url &#x3D; \&quot;https://www.tiktok.com/@tiktok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSecUserIdApiV1TiktokWebGetSecUserIdGet_0Test() throws ApiException {
        String url = null;
        ResponseModel response = api.getSecUserIdApiV1TiktokWebGetSecUserIdGet_0(url);

        // TODO: test validations
    }
    
    /**
     * 获取用户unique_id/Get user unique_id
     *
     * # [中文] ### 用途: - 获取用户unique_id ### 参数: - url: 用户主页链接 ### 返回: - unique_id  # [English] ### Purpose: - Get user unique_id ### Parameters: - url: User homepage link ### Return: - unique_id  # [示例/Example] url &#x3D; \&quot;https://www.tiktok.com/@tiktok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUniqueIdApiV1TiktokWebGetUniqueIdGetTest() throws ApiException {
        String url = null;
        ResponseModel response = api.getUniqueIdApiV1TiktokWebGetUniqueIdGet(url);

        // TODO: test validations
    }
    
    /**
     * 获取用户unique_id/Get user unique_id
     *
     * # [中文] ### 用途: - 获取用户unique_id ### 参数: - url: 用户主页链接 ### 返回: - unique_id  # [English] ### Purpose: - Get user unique_id ### Parameters: - url: User homepage link ### Return: - unique_id  # [示例/Example] url &#x3D; \&quot;https://www.tiktok.com/@tiktok\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUniqueIdApiV1TiktokWebGetUniqueIdGet_0Test() throws ApiException {
        String url = null;
        ResponseModel response = api.getUniqueIdApiV1TiktokWebGetUniqueIdGet_0(url);

        // TODO: test validations
    }
    
}
