/*
 * Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HttpValidationError;
import org.openapitools.client.model.ResponseModel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TwitterWebApiApi
 */
@Ignore
public class TwitterWebApiApiTest {

    private final TwitterWebApiApi api = new TwitterWebApiApi();

    
    /**
     * 获取评论/Get comments
     *
     * # [中文] ### 用途: - 获取推文下的评论 ### 参数: - tweetId: 推文ID - rankingModel: 排序模式，默认为Relevance，其他可选值为Latest，Likes - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中获取     - JSONPath: $.data.data.threaded_conversation_with_injections_v2.instructions.[0].entries.[-1].content.itemContent.value ### 返回: - 评论  # [English] ### Purpose: - Get comments under the tweet ### Parameters: - tweetId: Tweet ID - rankingModel: Sorting mode, default is Relevance, other optional values are Latest, Likes - cursor: Cursor, default is None, used for paging, obtained from the last request     - JSONPath: $.data.data.threaded_conversation_with_injections_v2.instructions.[0].entries.[-1].content.itemContent.value ### Return: - Comments  # [示例/Example] tweetId &#x3D; \&quot;1835124037934367098\&quot; rankingModel &#x3D; \&quot;Relevance\&quot; cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostCommentsApiV1TwitterWebFetchPostCommentsGetTest() throws ApiException {
        String tweetId = null;
        String rankingModel = null;
        String cursor = null;
        ResponseModel response = api.fetchPostCommentsApiV1TwitterWebFetchPostCommentsGet(tweetId, rankingModel, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取评论/Get comments
     *
     * # [中文] ### 用途: - 获取推文下的评论 ### 参数: - tweetId: 推文ID - rankingModel: 排序模式，默认为Relevance，其他可选值为Latest，Likes - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中获取     - JSONPath: $.data.data.threaded_conversation_with_injections_v2.instructions.[0].entries.[-1].content.itemContent.value ### 返回: - 评论  # [English] ### Purpose: - Get comments under the tweet ### Parameters: - tweetId: Tweet ID - rankingModel: Sorting mode, default is Relevance, other optional values are Latest, Likes - cursor: Cursor, default is None, used for paging, obtained from the last request     - JSONPath: $.data.data.threaded_conversation_with_injections_v2.instructions.[0].entries.[-1].content.itemContent.value ### Return: - Comments  # [示例/Example] tweetId &#x3D; \&quot;1835124037934367098\&quot; rankingModel &#x3D; \&quot;Relevance\&quot; cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchPostCommentsApiV1TwitterWebFetchPostCommentsGet_0Test() throws ApiException {
        String tweetId = null;
        String rankingModel = null;
        String cursor = null;
        ResponseModel response = api.fetchPostCommentsApiV1TwitterWebFetchPostCommentsGet_0(tweetId, rankingModel, cursor);

        // TODO: test validations
    }
    
    /**
     * 搜索/Search
     *
     * # [中文] ### 用途: - 搜索 ### 参数: - rawQuery: 搜索关键字 - count: 数量，默认为20 - product: 产品，默认为Top，其他可选值为Latest，People，Media，Lists - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中的最后一个item中获取     - JSONPath: $.data.data.search_by_raw_query.search_timeline.timeline.instructions.[0].entries.[-1].content.value ### 返回: - 搜索结果  # [English] ### Purpose: - Search ### Parameters: - rawQuery: Search keyword - count: Count, default is 20 - product: Product, default is Top, other optional values are Latest, People, Media, Lists - cursor: Cursor, default is None, used for paging, obtained from the last item in the last request     - JSONPath: $.data.search_by_raw_query.search_timeline.timeline.instructions.[0].entries.[-1].content.value ### Return: - Search results  # [示例/Example] rawQuery &#x3D; \&quot;Elon Musk\&quot; count &#x3D; 20 product &#x3D; \&quot;Top\&quot; cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchTimelineApiV1TwitterWebFetchSearchTimelineGetTest() throws ApiException {
        String rawQuery = null;
        Integer count = null;
        String product = null;
        String cursor = null;
        ResponseModel response = api.fetchSearchTimelineApiV1TwitterWebFetchSearchTimelineGet(rawQuery, count, product, cursor);

        // TODO: test validations
    }
    
    /**
     * 搜索/Search
     *
     * # [中文] ### 用途: - 搜索 ### 参数: - rawQuery: 搜索关键字 - count: 数量，默认为20 - product: 产品，默认为Top，其他可选值为Latest，People，Media，Lists - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中的最后一个item中获取     - JSONPath: $.data.data.search_by_raw_query.search_timeline.timeline.instructions.[0].entries.[-1].content.value ### 返回: - 搜索结果  # [English] ### Purpose: - Search ### Parameters: - rawQuery: Search keyword - count: Count, default is 20 - product: Product, default is Top, other optional values are Latest, People, Media, Lists - cursor: Cursor, default is None, used for paging, obtained from the last item in the last request     - JSONPath: $.data.search_by_raw_query.search_timeline.timeline.instructions.[0].entries.[-1].content.value ### Return: - Search results  # [示例/Example] rawQuery &#x3D; \&quot;Elon Musk\&quot; count &#x3D; 20 product &#x3D; \&quot;Top\&quot; cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchSearchTimelineApiV1TwitterWebFetchSearchTimelineGet_0Test() throws ApiException {
        String rawQuery = null;
        Integer count = null;
        String product = null;
        String cursor = null;
        ResponseModel response = api.fetchSearchTimelineApiV1TwitterWebFetchSearchTimelineGet_0(rawQuery, count, product, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取单个推文数据/Get single tweet data
     *
     * # [中文] ### 用途: - 获取单个推文数据 ### 参数: - focalTweetId: 推文ID，可以从推文链接中获取。例如：https://x.com/elonmusk/status/1808168603721650364 中的 1808168603721650364。 ### 返回: - 推文数据  # [English] ### Purpose: - Get single tweet data ### Parameters: - focalTweetId: Tweet ID, can be obtained from the tweet link. For example: 1808168603721650364 in https://x.com/elonmusk/status/1808168603721650364 ### Return: - Tweet data  # [示例/Example] focalTweetId &#x3D; \&quot;1808168603721650364\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTweetDetailApiV1TwitterWebFetchTweetDetailGetTest() throws ApiException {
        String focalTweetId = null;
        ResponseModel response = api.fetchTweetDetailApiV1TwitterWebFetchTweetDetailGet(focalTweetId);

        // TODO: test validations
    }
    
    /**
     * 获取单个推文数据/Get single tweet data
     *
     * # [中文] ### 用途: - 获取单个推文数据 ### 参数: - focalTweetId: 推文ID，可以从推文链接中获取。例如：https://x.com/elonmusk/status/1808168603721650364 中的 1808168603721650364。 ### 返回: - 推文数据  # [English] ### Purpose: - Get single tweet data ### Parameters: - focalTweetId: Tweet ID, can be obtained from the tweet link. For example: 1808168603721650364 in https://x.com/elonmusk/status/1808168603721650364 ### Return: - Tweet data  # [示例/Example] focalTweetId &#x3D; \&quot;1808168603721650364\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchTweetDetailApiV1TwitterWebFetchTweetDetailGet_0Test() throws ApiException {
        String focalTweetId = null;
        ResponseModel response = api.fetchTweetDetailApiV1TwitterWebFetchTweetDetailGet_0(focalTweetId);

        // TODO: test validations
    }
    
    /**
     * 获取用户高光推文/Get user highlights tweets
     *
     * # [中文] ### 用途: - 获取用户高光推文 ### 参数: - userId: 用户ID - count: 数量，默认为20 - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中获取     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value ### 返回: - 用户高光推文  # [English] ### Purpose: - Get user highlights tweets ### Parameters: - userId: User ID - count: Count, default is 20 - cursor: Cursor, default is None, used for paging, obtained from the last request     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value ### Return: - User highlights tweets  # [示例/Example] userId &#x3D; \&quot;44196397\&quot; count &#x3D; 20 cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserHighlightsTweetsApiV1TwitterWebFetchUserHighlightsTweetsGetTest() throws ApiException {
        String userId = null;
        Integer count = null;
        String cursor = null;
        ResponseModel response = api.fetchUserHighlightsTweetsApiV1TwitterWebFetchUserHighlightsTweetsGet(userId, count, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户高光推文/Get user highlights tweets
     *
     * # [中文] ### 用途: - 获取用户高光推文 ### 参数: - userId: 用户ID - count: 数量，默认为20 - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中获取     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value ### 返回: - 用户高光推文  # [English] ### Purpose: - Get user highlights tweets ### Parameters: - userId: User ID - count: Count, default is 20 - cursor: Cursor, default is None, used for paging, obtained from the last request     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value ### Return: - User highlights tweets  # [示例/Example] userId &#x3D; \&quot;44196397\&quot; count &#x3D; 20 cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserHighlightsTweetsApiV1TwitterWebFetchUserHighlightsTweetsGet_0Test() throws ApiException {
        String userId = null;
        Integer count = null;
        String cursor = null;
        ResponseModel response = api.fetchUserHighlightsTweetsApiV1TwitterWebFetchUserHighlightsTweetsGet_0(userId, count, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户媒体/Get user media
     *
     * # [中文] ### 用途: - 获取用户媒体 ### 参数: - userId: 用户ID - count: 数量，默认为20 - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中获取     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[-1].entries.[-1].content.value ### 返回: - 用户媒体  # [English] ### Purpose: - Get user media ### Parameters: - userId: User ID - count: Count, default is 20 - cursor: Cursor, default is None, used for paging, obtained from the last request     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[-1].entries.[-1].content.value ### Return: - User media  # [示例/Example] userId &#x3D; \&quot;44196397\&quot; count &#x3D; 20 cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserMediaApiV1TwitterWebFetchUserMediaGetTest() throws ApiException {
        String userId = null;
        Integer count = null;
        String cursor = null;
        ResponseModel response = api.fetchUserMediaApiV1TwitterWebFetchUserMediaGet(userId, count, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户媒体/Get user media
     *
     * # [中文] ### 用途: - 获取用户媒体 ### 参数: - userId: 用户ID - count: 数量，默认为20 - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中获取     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[-1].entries.[-1].content.value ### 返回: - 用户媒体  # [English] ### Purpose: - Get user media ### Parameters: - userId: User ID - count: Count, default is 20 - cursor: Cursor, default is None, used for paging, obtained from the last request     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[-1].entries.[-1].content.value ### Return: - User media  # [示例/Example] userId &#x3D; \&quot;44196397\&quot; count &#x3D; 20 cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserMediaApiV1TwitterWebFetchUserMediaGet_0Test() throws ApiException {
        String userId = null;
        Integer count = null;
        String cursor = null;
        ResponseModel response = api.fetchUserMediaApiV1TwitterWebFetchUserMediaGet_0(userId, count, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户发帖/Get user post
     *
     * # [中文] ### 用途: - 获取用户发帖 ### 参数: - userId: 用户ID - count: 数量，默认为20 - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中的$.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value获取 ### 返回: - 用户发帖  # [English] ### Purpose: - Get user post ### Parameters: - userId: User ID - count: Count, default is 20 - cursor: Cursor, default is None, used for paging, obtained from the $.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value of the last request ### Return: - User post  # [示例/Example] userId &#x3D; \&quot;44196397\&quot; count &#x3D; 20 cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostTweetApiV1TwitterWebFetchUserPostTweetGetTest() throws ApiException {
        String userId = null;
        Integer count = null;
        String cursor = null;
        ResponseModel response = api.fetchUserPostTweetApiV1TwitterWebFetchUserPostTweetGet(userId, count, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户发帖/Get user post
     *
     * # [中文] ### 用途: - 获取用户发帖 ### 参数: - userId: 用户ID - count: 数量，默认为20 - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中的$.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value获取 ### 返回: - 用户发帖  # [English] ### Purpose: - Get user post ### Parameters: - userId: User ID - count: Count, default is 20 - cursor: Cursor, default is None, used for paging, obtained from the $.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value of the last request ### Return: - User post  # [示例/Example] userId &#x3D; \&quot;44196397\&quot; count &#x3D; 20 cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserPostTweetApiV1TwitterWebFetchUserPostTweetGet_0Test() throws ApiException {
        String userId = null;
        Integer count = null;
        String cursor = null;
        ResponseModel response = api.fetchUserPostTweetApiV1TwitterWebFetchUserPostTweetGet_0(userId, count, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户资料/Get user profile
     *
     * # [中文] ### 用途: - 获取用户资料 ### 参数: - screen_name: 用户名，例如：elonmusk，可以从用户主页链接中获取，例如：https://twitter.com/elonmusk 中的 elonmusk。 ### 返回: - 用户资料  # [English] ### Purpose: - Get user profile ### Parameters: - screen_name: Screen Name, for example: elonmusk, can be obtained from the user&#39;s homepage link, for example: elonmusk in https://twitter.com/elonmusk ### Return: - User profile  # [示例/Example] screen_name &#x3D; \&quot;elonmusk\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserProfileApiV1TwitterWebFetchUserProfileGetTest() throws ApiException {
        String screenName = null;
        ResponseModel response = api.fetchUserProfileApiV1TwitterWebFetchUserProfileGet(screenName);

        // TODO: test validations
    }
    
    /**
     * 获取用户资料/Get user profile
     *
     * # [中文] ### 用途: - 获取用户资料 ### 参数: - screen_name: 用户名，例如：elonmusk，可以从用户主页链接中获取，例如：https://twitter.com/elonmusk 中的 elonmusk。 ### 返回: - 用户资料  # [English] ### Purpose: - Get user profile ### Parameters: - screen_name: Screen Name, for example: elonmusk, can be obtained from the user&#39;s homepage link, for example: elonmusk in https://twitter.com/elonmusk ### Return: - User profile  # [示例/Example] screen_name &#x3D; \&quot;elonmusk\&quot;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserProfileApiV1TwitterWebFetchUserProfileGet_0Test() throws ApiException {
        String screenName = null;
        ResponseModel response = api.fetchUserProfileApiV1TwitterWebFetchUserProfileGet_0(screenName);

        // TODO: test validations
    }
    
    /**
     * 获取用户推文回复/Get user tweet replies
     *
     * # [中文] ### 用途: - 获取用户推文回复 ### 参数: - userId: 用户ID - count: 数量，默认为20 - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中获取     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value ### 返回: - 用户推文回复  # [English] ### Purpose: - Get user tweet replies ### Parameters: - userId: User ID - count: Count, default is 20 - cursor: Cursor, default is None, used for paging, obtained from the last request     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value ### Return: - User tweet replies  # [示例/Example] userId &#x3D; \&quot;44196397\&quot; count &#x3D; 20 cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserTweetRepliesApiV1TwitterWebFetchUserTweetRepliesGetTest() throws ApiException {
        String userId = null;
        Integer count = null;
        String cursor = null;
        ResponseModel response = api.fetchUserTweetRepliesApiV1TwitterWebFetchUserTweetRepliesGet(userId, count, cursor);

        // TODO: test validations
    }
    
    /**
     * 获取用户推文回复/Get user tweet replies
     *
     * # [中文] ### 用途: - 获取用户推文回复 ### 参数: - userId: 用户ID - count: 数量，默认为20 - cursor: 游标，默认为None，用于翻页，后续从上一次请求的返回结果中获取     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value ### 返回: - 用户推文回复  # [English] ### Purpose: - Get user tweet replies ### Parameters: - userId: User ID - count: Count, default is 20 - cursor: Cursor, default is None, used for paging, obtained from the last request     - JSONPath: $.data.data.user.result.timeline_v2.timeline.instructions.[1].entries.[-1].content.value ### Return: - User tweet replies  # [示例/Example] userId &#x3D; \&quot;44196397\&quot; count &#x3D; 20 cursor &#x3D; None
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserTweetRepliesApiV1TwitterWebFetchUserTweetRepliesGet_0Test() throws ApiException {
        String userId = null;
        Integer count = null;
        String cursor = null;
        ResponseModel response = api.fetchUserTweetRepliesApiV1TwitterWebFetchUserTweetRepliesGet_0(userId, count, cursor);

        // TODO: test validations
    }
    
}
